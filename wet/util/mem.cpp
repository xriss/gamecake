/*+-----------------------------------------------------------------------------------------------------------------+*/
//
// (C) Kriss Daniels 2003 http://www.XIXs.com
//
/*+-----------------------------------------------------------------------------------------------------------------+*/
#include "all.h"

//
// Memory shrink wrapping functions, for now at least
//


struct mem MEM[1];


/*+-----------------------------------------------------------------------------------------------------------------+*/
//
// Setup junk
//
/*+-----------------------------------------------------------------------------------------------------------------+*/

bool mem::setup(void)
{
	return true;
}


/*+-----------------------------------------------------------------------------------------------------------------+*/
//
// Reset junk
//
/*+-----------------------------------------------------------------------------------------------------------------+*/
bool mem::reset(void)
{
	return true;
}


/*+-----------------------------------------------------------------------------------------------------------------+*/
//
// Clean junk
//
/*+-----------------------------------------------------------------------------------------------------------------+*/
void mem::clean(void)
{
}





/*+-----------------------------------------------------------------------------------------------------------------+*/
//
// allocate
//
/*+-----------------------------------------------------------------------------------------------------------------+*/
u8 * mem::malloc(s32 size)
{
	total+=size;
	return (u8*) ::malloc(size);
}
/*+-----------------------------------------------------------------------------------------------------------------+*/
//
// allocate and clear
//
/*+-----------------------------------------------------------------------------------------------------------------+*/
u8 * mem::calloc(s32 size)
{
	total+=size;
	return (u8*) ::calloc(1,size);
}

/*+-----------------------------------------------------------------------------------------------------------------+*/
//
// reallocate
//
/*+-----------------------------------------------------------------------------------------------------------------+*/
u8 * mem::realloc(void *mem,s32 size)
{
	return (u8*) ::realloc(mem,size);
}

/*+-----------------------------------------------------------------------------------------------------------------+*/
//
// free
//
/*+-----------------------------------------------------------------------------------------------------------------+*/
void mem::free(void *mem)
{
	::free(mem);
}


