{
 "feed_url": "/blog/feed.json",
 "home_page_url": "/",
 "items": [
  {
   "author": {
    "name": "xix"
   },
   "content_html": "<div class=\"blog_wrap\">\n\t<div class=\"blog_info\"><a href=\"/blog/2018-04-24-building-in-boxes\">Building in boxes.</a> by xix on 2018-04-24</div>\n\t<h2 id=\"_blog_post_jsontitle\">Building in boxes.</h2>\n<p>I have just spent a week cleaning up the gamecake build process \nwhich has been suffering from bitrot.</p>\n<p>Originally, many years ago, I was trying to use cross builds where \npossible and chroots where that wasn&#39;t. This ended up being \nproblematic. It is much easier to set everything up inside virtual \nmachines even if this is slower and more of a resource hog, especially \nif using QEMU for the ARM builds.</p>\n<p>So this has been a cleanup that, hopefully, simplifies the builds, \nremoves some complexity left over from old cross compiling attempts and \nmake using CircleCI for automatically build and testing a little bit \nfaster.</p>\n<p>Take a look in each vbox_* directory for how this is all working; some \nof which are still experimental, eg. getting windows working well under \nLinux so I can try and step out of win32. Apart from these boxes which \nare used for building releases, there has been some major cleanup in the \nfollowing public builds.</p>\n<p>** We have a docker <em>build</em> box. **</p>\n<p>This is ubuntu 16.04 with premake4, SDL2 and LuaJIT built from source; \nwe need to build them from source as the version you will find in apt \nis often out of date especially when using an older version of Ubuntu.</p>\n<p>We really do want the older version of Ubuntu as we want to work on \nolder machines with older libraries available and we really do need the \nnewer versions of SDL2 and LuaJIT for added features and bug fixes.</p>\n<p>16.04 is a compromise here as 12.04 and 14.04 caused too many build \nproblems and it was easier to bump to 16.04 which is only a couple of \nyears difference in terms of code base and stability.</p>\n<p><a href=\"https://hub.docker.com/r/xriss/gamecake/\">https://hub.docker.com/r/xriss/gamecake/</a> is now used as the base box \nfor <a href=\"https://circleci.com/gh/xriss/gamecake\">https://circleci.com/gh/xriss/gamecake</a> builds.</p>\n<p>** Due to significantly improved build time by not including SDL2 and \nLuaJIT from source, we now also build for Windows and Emscripten with \nevery push. **</p>\n<p>CircleCI has switched to a new configuration system which meant we \nneeded to update our config files before they stop working later this \nyear. It seems the build artifacts are no longer available to the \npublic. We do, however, save the actual build outputs with every build.</p>\n<p>** We have decided to dump the pagecake build. **</p>\n<p>This was an OpenResty nginx with extra libs but I did not keep nginx \nvery well up-to-date. So instead we now just use a standard OpenResty. \nExtra libraries are made available to the nginx lua host as rocks so \nthis keeps us nicely up-to-date and gives us a reason to start \npublishing rocks.</p>\n<p>** I&#39;ve decided to keep all of the libraries together in one rock.**<br>See <a href=\"https://luarocks.org/modules/xriss/gamecake\">https://luarocks.org/modules/xriss/gamecake</a> for the rocks.</p>\n<p>For now, these are just the most essential ones to keep all our websites \nrunning but eventually a luarocks install of gamecake will be the same \nas downloading one of our prebuilt executables.</p>\n<p>** We have snap builds.**</p>\n<p>These can be found at <a href=\"https://dashboard.snapcraft.io/snaps/gamecake/\">https://dashboard.snapcraft.io/snaps/gamecake/</a> \nand is probably one of the easiest ways of getting a Linux version \nwhich also supports ARM machines.</p>\n<p>Keeping all of this running is an awful amount of annoying work as no \nmatter what I do, sooner or later one of the platforms will break \nsomething we rely on. Hopefully this update will give us another few \nyears before it all begins to rot again.</p>\n\n</div>\n",
   "date_published": "2018-04-24T00:00:00.000Z",
   "id": "/blog/2018-04-24-building-in-boxes",
   "title": "Building in boxes.",
   "url": "/blog/2018-04-24-building-in-boxes"
  },
  {
   "author": {
    "name": "xix"
   },
   "content_html": "<div class=\"blog_wrap\">\n\t<div class=\"blog_info\"><a href=\"/blog/2017-12-30-beware-of-the-node\">Beware of the node.</a> by xix on 2017-12-30</div>\n\t<h2 id=\"_blog_post_jsontitle\">Beware of the node.</h2>\n<p>This is a test post to go along with the adding of plated, our \nrecursive static site builder written in node to the gamecake \nrepository.</p>\n<p>This is a node app, so be sure to npm install in the plated directory \nif you expect any of the scripts to work.</p>\n\n</div>\n",
   "date_published": "2017-12-30T00:00:00.000Z",
   "id": "/blog/2017-12-30-beware-of-the-node",
   "title": "Beware of the node.",
   "url": "/blog/2017-12-30-beware-of-the-node"
  }
 ],
 "title": "Title",
 "version": "https://jsonfeed.org/version/1"
}