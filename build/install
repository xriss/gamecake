cd `dirname $0`


getopt --test > /dev/null
if [[ $? -ne 4 ]]; then
    echo " gamecake make script failed : we need a working version of getopt "
    exit 1
fi


# default build settings


LUAJITSRC=git


SDLSRC=2.0.16



OPTIONS=
LONGOPTIONS=help,mingw,luajit:,sdl2:



PARSED=$(getopt --options=$OPTIONS --longoptions=$LONGOPTIONS --name "$0" -- "$@")
if [[ $? -ne 0 ]]; then
    exit 2
fi
eval set -- "$PARSED"

while true; do
case "$1" in
        --help)
                help=1
                shift
        ;;
        --mingw)
                MINGW="1"
                shift 1
        ;;
        --luajit)
                LUAJITSRC="$2"
                shift 2
        ;;
        --sdl2)
                SDLSRC="$2"
                shift 2
        ;;
        --)
                shift
                break
        ;;
        *)
                echo "Programming error"
                exit 3
        ;;
esac
done

if [ "$help" = "1" ] ; then

echo " Available options are : "
echo
echo " ./make --mingw     # enable mingw crosscompile "
echo " ./make --luajit=   # disable luajit "
echo " ./make --sdl2=     # disable sdl2 "
echo

exit 0

fi



# install dependencies if apt-get is available

if hash apt-get 2>/dev/null; then

	if [ ! -z "$MINGW" ]; then
		sudo apt-get install -y mingw-w64
		sudo apt-get install -y gcc-multilib
		sudo apt-get install -y g++-multilib
	fi
	
	sudo apt-get install -y luajit
	sudo apt-get install -y lua-filesystem

	sudo apt-get install -y git
	sudo apt-get install -y wget
	sudo apt-get install -y unzip
	sudo apt-get install -y build-essential
	sudo apt-get install -y libreadline-dev
	sudo apt-get install -y libgl1-mesa-dev
	sudo apt-get install -y libx11-dev
	sudo apt-get install -y libasound2-dev
	sudo apt-get install -y libudev-dev
	sudo apt-get install -y libssl-dev clang
	sudo apt-get install -y libpulse-dev
	sudo apt-get install -y libfreeimage-dev
	sudo apt-get install -y libopenal-dev
	sudo apt-get install -y libpango1.0-dev
	sudo apt-get install -y libsndfile-dev
	sudo apt-get install -y libudev-dev
	sudo apt-get install -y libasound2-dev
	sudo apt-get install -y libjpeg8-dev
	sudo apt-get install -y libwebp-dev
	sudo apt-get install -y automake
	sudo apt-get install -y libsndio-dev

#full SDL2 depends, so it builds as many drivers as possible

	sudo apt-get install -y build-essential
	sudo apt-get install -y mercurial
	sudo apt-get install -y make
	sudo apt-get install -y cmake
	sudo apt-get install -y autoconf
	sudo apt-get install -y automake
	sudo apt-get install -y libtool
	sudo apt-get install -y libasound2-dev
	sudo apt-get install -y libpulse-dev
	sudo apt-get install -y libaudio-dev
	sudo apt-get install -y libx11-dev
	sudo apt-get install -y libxext-dev
	sudo apt-get install -y libxrandr-dev
	sudo apt-get install -y libxcursor-dev
	sudo apt-get install -y libxi-dev
	sudo apt-get install -y libxinerama-dev
	sudo apt-get install -y libxxf86vm-dev
	sudo apt-get install -y libxss-dev
	sudo apt-get install -y libgl1-mesa-dev
	sudo apt-get install -y libesd0-dev
	sudo apt-get install -y libdbus-1-dev
	sudo apt-get install -y libudev-dev
	sudo apt-get install -y libgles1-mesa-dev
	sudo apt-get install -y libgles2-mesa-dev
	sudo apt-get install -y libegl1-mesa-dev
	sudo apt-get install -y libibus-1.0-dev
	sudo apt-get install -y libwayland-dev
	sudo apt-get install -y libxkbcommon-dev

fi



# make a version of luajit and install it

if [ ! -z "$LUAJITSRC" ]; then

	if [ "$LUAJITSRC" = "git" ]; then

		echo "using latest git"

		git clone https://luajit.org/git/luajit.git
		cd luajit
		git pull

	else

		if [ -f ${LUAJITSRC}.tar.gz ] ; then
			echo "using ${LUAJITSRC}.tar.gz"
		else
			wget -O ${LUAJITSRC}.tar.gz https://luajit.org/download/${LUAJITSRC}.tar.gz
		fi

		rm -rf ${LUAJITSRC}
		tar zxvf ${LUAJITSRC}.tar.gz
		cd ${LUAJITSRC}

	fi

	if [ "`uname`" = "Darwin" ] ; then

		sudo mkdir -p /usr/local/64
		make clean
		make -j$(nproc||echo 1) CC="gcc -m64" && sudo make install PREFIX=/usr/local/64

	elif [ ! -z "$MINGW" ]; then
	
		make clean
		make HOST_CC="gcc -m32" CROSS=i686-w64-mingw32- TARGET_SYS=Windows BUILDMODE=static

		sudo mkdir -p /usr/i686-w64-mingw32/include/luajit
		sudo cp src/lua*.h /usr/i686-w64-mingw32/include/luajit
		sudo cp src/lauxlib.h /usr/i686-w64-mingw32/include/luajit
		
		sudo cp src/libluajit.a /usr/i686-w64-mingw32/lib
		
	else

		make clean
		make -j$(nproc||echo 1) && sudo make install

	fi

	cd ..


	#force static link by deleting the .so or dylib

	sudo rm -f /usr/local/lib/libluajit-5.1.so
	sudo rm -f /usr/local/64/lib/libluajit-5.1.dylib
	sudo rm -f /usr/local/lib/libluajit-5.1.dylib

fi


# make a version of SDL2 and install it

if [ ! -z "$SDLSRC" ]; then

	if [ ! -z "$MINGW" ]; then

		if [ -f SDL2-devel-${SDLSRC}.tar.gz ] ; then
			echo "using SDL2-devel-${SDLSRC}.tar.gz"
		else
			wget -O SDL2-devel-${SDLSRC}.tar.gz https://www.libsdl.org/release/SDL2-devel-${SDLSRC}-mingw.tar.gz
		fi
	
		rm -rf SDL2-${SDLSRC}
		tar zxvf SDL2-devel-${SDLSRC}.tar.gz
		cd SDL2-${SDLSRC}
		
		sudo cp -r i686-w64-mingw32/ /usr/

		# force static link by deleting any dynamic versions
		sudo rm -f /usr/i686-w64-mingw32/lib/libSDL2.so
		sudo rm -f /usr/i686-w64-mingw32/lib/libSDL2.dylib
		sudo rm -f /usr/i686-w64-mingw32/lib/libSDL2.dll.a

		cd ..
	else

		if [ -f SDL2-${SDLSRC}.tar.gz ] ; then
			echo "using SDL2-${SDLSRC}.tar.gz"
		else
			wget -O SDL2-${SDLSRC}.tar.gz https://www.libsdl.org/release/SDL2-${SDLSRC}.tar.gz
		fi

		rm -rf SDL2-${SDLSRC}
		tar zxvf SDL2-${SDLSRC}.tar.gz
		cd SDL2-${SDLSRC}


		./configure --enable-static --disable-esd --disable-arts --disable-video-directfb --disable-rpath --enable-alsa --enable-alsa-shared --enable-pulseaudio --enable-pulseaudio-shared --enable-x11-shared --enable-sdl-dlopen --disable-input-tslib --disable-render-metal --disable-sndio --disable-video-rpi

		make -j$(nproc||echo 1)
		sudo make install
		cd ..

		# force static link by deleting any dynamic versions
		sudo rm -f /usr/local/lib/libSDL2.so
		sudo rm -f /usr/local/lib/libSDL2.dylib

		cd ..
	fi
fi

