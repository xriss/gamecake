{
 "_dirname": "{_root}docs",
 "_docs": [
  {
   "count": 7,
   "name": "code"
  },
  {
   "count": 6,
   "name": "code.swankyquant"
  },
  {
   "count": 1,
   "name": "code.swankyquant.algorithm"
  },
  {
   "count": 1,
   "name": "code.swankyquant.color_distance"
  },
  {
   "count": 1,
   "name": "code.swankyquant.color_distance_weight"
  },
  {
   "count": 1,
   "name": "code.swankyquant.swanky_quant"
  },
  {
   "count": 1,
   "name": "code.swankyquant.swanky_quant_remap"
  },
  {
   "count": 1,
   "name": "draw"
  },
  {
   "count": 21,
   "name": "entities"
  },
  {
   "count": 16,
   "name": "entities.systems"
  },
  {
   "count": 1,
   "name": "entities.systems.bang"
  },
  {
   "count": 1,
   "name": "entities.systems.donut"
  },
  {
   "count": 1,
   "name": "entities.systems.horde"
  },
  {
   "count": 1,
   "name": "entities.systems.invader"
  },
  {
   "count": 1,
   "name": "entities.systems.item"
  },
  {
   "count": 1,
   "name": "entities.systems.level"
  },
  {
   "count": 1,
   "name": "entities.systems.menu"
  },
  {
   "count": 1,
   "name": "entities.systems.missile"
  },
  {
   "count": 1,
   "name": "entities.systems.npc"
  },
  {
   "count": 1,
   "name": "entities.systems.player"
  },
  {
   "count": 1,
   "name": "entities.systems.score"
  },
  {
   "count": 1,
   "name": "entities.systems.space"
  },
  {
   "count": 1,
   "name": "entities.systems.stars"
  },
  {
   "count": 1,
   "name": "entities.systems.tile"
  },
  {
   "count": 1,
   "name": "entities.systems.yarn"
  },
  {
   "count": 4,
   "name": "entities.tiles"
  },
  {
   "count": 1,
   "name": "entities.tiles.npc"
  },
  {
   "count": 1,
   "name": "entities.tiles.sprite"
  },
  {
   "count": 1,
   "name": "entities.tiles.start"
  },
  {
   "count": 1,
   "name": "graphics"
  },
  {
   "count": 1,
   "name": "hardware"
  },
  {
   "count": 1,
   "name": "levels"
  },
  {
   "count": 636,
   "name": "lua"
  },
  {
   "count": 6,
   "name": "lua.glslang"
  },
  {
   "count": 1,
   "name": "lua.glslang.lint_gles2"
  },
  {
   "count": 1,
   "name": "lua.glslang.parse_chunks"
  },
  {
   "count": 1,
   "name": "lua.glslang.pp"
  },
  {
   "count": 1,
   "name": "lua.glslang.replace_include"
  },
  {
   "count": 1,
   "name": "lua.glslang.yank_shader_versions"
  },
  {
   "count": 629,
   "name": "lua.wetgenes"
  },
  {
   "count": 38,
   "name": "lua.wetgenes.bullet"
  },
  {
   "count": 9,
   "name": "lua.wetgenes.bullet.body"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.bullet.body.cgroup"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.bullet.body.change_shape"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.bullet.body.cmask"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.bullet.body.force"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.bullet.body.gravity"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.bullet.body.impulse"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.bullet.body.overlaps"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.bullet.body.support"
  },
  {
   "count": 28,
   "name": "lua.wetgenes.bullet.world"
  },
  {
   "count": 14,
   "name": "lua.wetgenes.bullet.world.body"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.bullet.world.body.active"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.bullet.world.body.angular_factor"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.bullet.world.body.angular_velocity"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.bullet.world.body.ccd"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.bullet.world.body.custom_material_callback"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.bullet.world.body.damping"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.bullet.world.body.destroy"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.bullet.world.body.factor"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.bullet.world.body.friction"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.bullet.world.body.restitution"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.bullet.world.body.sleep"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.bullet.world.body.transform"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.bullet.world.body.velocity"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.bullet.world.contacts"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.bullet.world.destroy"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.bullet.world.get"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.bullet.world.gravity"
  },
  {
   "count": 2,
   "name": "lua.wetgenes.bullet.world.mesh"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.bullet.world.mesh.destroy"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.bullet.world.ray_test"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.bullet.world.set"
  },
  {
   "count": 3,
   "name": "lua.wetgenes.bullet.world.shape"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.bullet.world.shape.destroy"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.bullet.world.shape.margin"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.bullet.world.status"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.bullet.world.step"
  },
  {
   "count": 64,
   "name": "lua.wetgenes.chipmunk"
  },
  {
   "count": 4,
   "name": "lua.wetgenes.chipmunk.arbiter"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.arbiter.ignore"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.arbiter.points"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.arbiter.surface_velocity"
  },
  {
   "count": 16,
   "name": "lua.wetgenes.chipmunk.body"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.body.angle"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.body.angular_velocity"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.body.apply_force"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.body.apply_impulse"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.body.center_of_gravity"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.body.force"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.body.mass"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.body.moment"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.body.position"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.body.position_func"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.body.shape"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.body.torque"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.body.type"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.body.velocity"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.body.velocity_func"
  },
  {
   "count": 6,
   "name": "lua.wetgenes.chipmunk.constraint"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.constraint.collide_bodies"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.constraint.error_bias"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.constraint.impulse"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.constraint.max_bias"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.constraint.max_force"
  },
  {
   "count": 11,
   "name": "lua.wetgenes.chipmunk.shape"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.shape.bounding_box"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.shape.collision_type"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.shape.elasticity"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.shape.filter"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.shape.friction"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.shape.query_point"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.shape.query_segment"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.shape.radius"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.shape.sensor"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.shape.surface_velocity"
  },
  {
   "count": 26,
   "name": "lua.wetgenes.chipmunk.space"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.space.add"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.space.add_handler"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.space.body"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.space.collision_bias"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.space.collision_persistence"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.space.collision_slop"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.space.constraint"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.space.contains"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.space.current_time_step"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.space.damping"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.space.gravity"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.space.idle_speed_threshold"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.space.iterations"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.space.locked"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.space.query_bounding_box"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.space.query_point"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.space.query_point_nearest"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.space.query_segment"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.space.query_segment_first"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.space.query_shape"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.space.reindex"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.space.remove"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.space.sleep_time_threshold"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.space.step"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.chipmunk.space.type"
  },
  {
   "count": 8,
   "name": "lua.wetgenes.csv"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.csv.build"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.csv.doesc"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.csv.doquote"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.csv.map"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.csv.parse"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.csv.unesc"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.csv.unquote"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.deepcompare"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.deepcopy"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.export"
  },
  {
   "count": 168,
   "name": "lua.wetgenes.gamecake"
  },
  {
   "count": 26,
   "name": "lua.wetgenes.gamecake.framebuffers"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.framebuffers.create"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.framebuffers.dirty"
  },
  {
   "count": 21,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.bind_depth"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.bind_depth_snapshot"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.bind_frame"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.bind_texture"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.bind_texture_snapshot"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.check"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.clean"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.download"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.free_depth"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.free_frame"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.free_snapshot"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.free_texture"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.mipmap"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.mipmap_depth"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.mipmap_texture"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.pingpong"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.render_start"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.render_stop"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.resize"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.snapshot"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.framebuffers.start"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.framebuffers.stop"
  },
  {
   "count": 43,
   "name": "lua.wetgenes.gamecake.fun"
  },
  {
   "count": 19,
   "name": "lua.wetgenes.gamecake.fun.chatdown"
  },
  {
   "count": 6,
   "name": "lua.wetgenes.gamecake.fun.chatdown.chat"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.fun.chatdown.chat.get_tag"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.fun.chatdown.chat.replace_tags"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.fun.chatdown.chat.set_tag"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.fun.chatdown.chat.set_tags"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.fun.chatdown.chat.set_topic"
  },
  {
   "count": 7,
   "name": "lua.wetgenes.gamecake.fun.chatdown.chats"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.fun.chatdown.chats.changes"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.fun.chatdown.chats.get_subject"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.fun.chatdown.chats.get_tag"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.fun.chatdown.chats.replace_tags"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.fun.chatdown.chats.set_subject"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.fun.chatdown.chats.set_tag"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.fun.chatdown.dotnames"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.fun.chatdown.parse"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.fun.chatdown.setup"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.fun.chatdown.setup_chat"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.fun.chatdown.text"
  },
  {
   "count": 23,
   "name": "lua.wetgenes.gamecake.fun.yarn"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.fun.yarn.cells"
  },
  {
   "count": 14,
   "name": "lua.wetgenes.gamecake.fun.yarn.items"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.fun.yarn.items.cells"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.fun.yarn.items.create"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.fun.yarn.items.create_pages"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.fun.yarn.items.destroy"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.fun.yarn.items.find"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.fun.yarn.items.get_big"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.fun.yarn.items.insert"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.fun.yarn.items.iterate_dotnames"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.fun.yarn.items.iterate_parents"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.fun.yarn.items.metatable"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.fun.yarn.items.prefabs"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.fun.yarn.items.remove"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.fun.yarn.items.rules"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.fun.yarn.pages"
  },
  {
   "count": 2,
   "name": "lua.wetgenes.gamecake.fun.yarn.prefabs"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.fun.yarn.prefabs.set"
  },
  {
   "count": 4,
   "name": "lua.wetgenes.gamecake.fun.yarn.rules"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.fun.yarn.rules.apply"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.fun.yarn.rules.can"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.fun.yarn.rules.set"
  },
  {
   "count": 2,
   "name": "lua.wetgenes.gamecake.oven"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.oven.bake"
  },
  {
   "count": 3,
   "name": "lua.wetgenes.gamecake.toaster"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.toaster.bake"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.toaster.newticks"
  },
  {
   "count": 59,
   "name": "lua.wetgenes.gamecake.widgets"
  },
  {
   "count": 3,
   "name": "lua.wetgenes.gamecake.widgets.button"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.button.setup"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.button.update"
  },
  {
   "count": 3,
   "name": "lua.wetgenes.gamecake.widgets.center"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.center.layout"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.center.setup"
  },
  {
   "count": 4,
   "name": "lua.wetgenes.gamecake.widgets.checkbox"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.checkbox.class_hooks"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.checkbox.setup"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.checkbox.update"
  },
  {
   "count": 17,
   "name": "lua.wetgenes.gamecake.widgets.data"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.data.add_class_hook"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.data.call_hook"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.data.call_hook_later"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.data.data_dec"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.data.data_get_pos"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.data.data_get_size"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.data.data_inc"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.data.data_set"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.data.data_snap"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.data.data_tonumber"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.data.data_tonumber_from_list"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.data.data_tostring"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.data.data_tostring_from_list"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.data.data_value"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.data.del_class_hook"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.data.new_data"
  },
  {
   "count": 12,
   "name": "lua.wetgenes.gamecake.widgets.datas"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.datas.del"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.datas.get"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.datas.get_number"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.datas.get_string"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.datas.get_value"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.datas.new"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.datas.new_datas"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.datas.set"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.datas.set_infos"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.datas.set_string"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.datas.set_value"
  },
  {
   "count": 7,
   "name": "lua.wetgenes.gamecake.widgets.defs"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.defs.add"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.defs.add_border"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.defs.copy"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.defs.create"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.defs.reset"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.defs.set"
  },
  {
   "count": 5,
   "name": "lua.wetgenes.gamecake.widgets.dialogs"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.dialogs.hide_overlay"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.dialogs.setup"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.dialogs.show"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.dialogs.show_overlay"
  },
  {
   "count": 4,
   "name": "lua.wetgenes.gamecake.widgets.drag"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.drag.drag"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.drag.setup"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.drag.update"
  },
  {
   "count": 2,
   "name": "lua.wetgenes.gamecake.widgets.paragraph"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.paragraph.setup"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.widgets.setup"
  },
  {
   "count": 34,
   "name": "lua.wetgenes.gamecake.zone"
  },
  {
   "count": 31,
   "name": "lua.wetgenes.gamecake.zone.scene"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.zone.scene.add"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.zone.scene.call"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.zone.scene.caste"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.zone.scene.create_values"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.zone.scene.find_uid"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.zone.scene.forget_uid"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.zone.scene.generate_uid"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.zone.scene.remember_uid"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.zone.scene.remove"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.zone.scene.require"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.zone.scene.require_search"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.zone.scene.reset"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.zone.scene.sortby_update"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.zone.scene.status"
  },
  {
   "count": 5,
   "name": "lua.wetgenes.gamecake.zone.scene.systems"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.zone.scene.systems.call"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.zone.scene.systems.cocall"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.zone.scene.systems.insert"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.zone.scene.systems.remove"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.zone.scene.uids"
  },
  {
   "count": 10,
   "name": "lua.wetgenes.gamecake.zone.scene.values"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.zone.scene.values.get"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.zone.scene.values.manifest"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.zone.scene.values.new"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.zone.scene.values.pull"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.zone.scene.values.push"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.zone.scene.values.set"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.zone.scene.values.tween"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.zone.scene.values.twrap"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.zone.scene.values.unpush"
  },
  {
   "count": 2,
   "name": "lua.wetgenes.gamecake.zone.system"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.gamecake.zone.system.items"
  },
  {
   "count": 37,
   "name": "lua.wetgenes.grd"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grd.adjust_contrast"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grd.adjust_hsv"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grd.adjust_rgb"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grd.attr_redux"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grd.blit"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grd.clear"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grd.clip"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grd.convert"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grd.copy_data"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grd.copy_data_layer"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grd.create"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grd.create_convert"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grd.create_normal"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grd.destroy"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grd.duplicate"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grd.fillmask"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grd.flipx"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grd.flipy"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grd.info"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grd.load"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grd.load_data"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grd.load_file"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grd.paint"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grd.palette"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grd.pixels"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grd.quant"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grd.remap"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grd.reset"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grd.resize"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grd.save"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grd.scale"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grd.shrink"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grd.slide"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grd.sort_cmap"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grd.stream"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grd.xor"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grdcanvas"
  },
  {
   "count": 2,
   "name": "lua.wetgenes.grdhistory"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grdhistory.history"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grdlayers"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grdpaint"
  },
  {
   "count": 2,
   "name": "lua.wetgenes.grdsvg"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.grdsvg.string"
  },
  {
   "count": 3,
   "name": "lua.wetgenes.json"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.json.decode"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.json.encode"
  },
  {
   "count": 10,
   "name": "lua.wetgenes.json_diff"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.json_diff.apply"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.json_diff.array_common"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.json_diff.array_match"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.json_diff.array_trim"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.json_diff.diff"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.json_diff.dupe"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.json_diff.equal"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.json_diff.similar"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.json_diff.undo"
  },
  {
   "count": 3,
   "name": "lua.wetgenes.json_pack"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.json_pack.from_data"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.json_pack.into_data"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.lookup"
  },
  {
   "count": 15,
   "name": "lua.wetgenes.midi"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.midi.clients"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.midi.create"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.midi.destroy"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.midi.event_to_string"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.midi.get"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.midi.peek"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.midi.port_create"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.midi.port_destroy"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.midi.pull"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.midi.push"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.midi.set"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.midi.string_to_clientport"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.midi.subscribe"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.midi.unsubscribe"
  },
  {
   "count": 2,
   "name": "lua.wetgenes.package"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.package.reload"
  },
  {
   "count": 15,
   "name": "lua.wetgenes.path"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.path.currentdir"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.path.dir"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.path.ext"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.path.folder"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.path.join"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.path.name"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.path.normalize"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.path.parent"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.path.parse"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.path.relative"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.path.resolve"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.path.root"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.path.setup"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.path.split"
  },
  {
   "count": 4,
   "name": "lua.wetgenes.plate"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.plate.replace_lookup"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.plate.replace_lookup_istable"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.plate.table_lookup"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.rnd64k"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.safecall"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.safewrap"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.set_env"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.snippets"
  },
  {
   "count": 3,
   "name": "lua.wetgenes.spew"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.spew.connect"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.spew.test"
  },
  {
   "count": 174,
   "name": "lua.wetgenes.tardis"
  },
  {
   "count": 36,
   "name": "lua.wetgenes.tardis.array"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.array.__add"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.array.__div"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.array.__eq"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.array.__mul"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.array.__sub"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.array.__tostring"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.array.__unm"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.array.abs"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.array.acos"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.array.add"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.array.asin"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.array.atan"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.array.ceil"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.array.compare"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.array.cos"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.array.exp"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.array.floor"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.array.fract"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.array.log"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.array.max"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.array.min"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.array.mix"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.array.new"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.array.pow"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.array.product"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.array.quantize"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.array.round"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.array.scalar"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.array.set"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.array.sin"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.array.sub"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.array.tan"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.array.trunc"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.array.unpack"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.array.zero"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.class"
  },
  {
   "count": 2,
   "name": "lua.wetgenes.tardis.line"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.line.new"
  },
  {
   "count": 10,
   "name": "lua.wetgenes.tardis.m2"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m2.adjugate"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m2.cofactor"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m2.determinant"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m2.identity"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m2.inverse"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m2.minor_xy"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m2.new"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m2.scale"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m2.transpose"
  },
  {
   "count": 12,
   "name": "lua.wetgenes.tardis.m3"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m3.adjugate"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m3.cofactor"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m3.determinant"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m3.identity"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m3.inverse"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m3.m4"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m3.minor_xy"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m3.new"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m3.scale"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m3.transpose"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m3.v3"
  },
  {
   "count": 34,
   "name": "lua.wetgenes.tardis.m4"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m4.add"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m4.adjugate"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m4.arotate"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m4.cofactor"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m4.determinant"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m4.get_rotation_q4"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m4.get_scale_v3"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m4.get_translation_v3"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m4.identity"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m4.inverse"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m4.m3"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m4.minor_xy"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m4.mix"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m4.new"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m4.prearotate"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m4.preqrotate"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m4.prerotate"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m4.prerrotate"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m4.prescale"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m4.pretranslate"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m4.pretranslate_v3"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m4.qrotate"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m4.rotate"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m4.rrotate"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m4.scale"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m4.scale_v3"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m4.setrot"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m4.setrrot"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m4.sub"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m4.translate"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m4.translate_v3"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m4.transpose"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m4.v3"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.m4_stack"
  },
  {
   "count": 2,
   "name": "lua.wetgenes.tardis.plane"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.plane.new"
  },
  {
   "count": 16,
   "name": "lua.wetgenes.tardis.q4"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.q4.get_yaw_pitch_roll"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.q4.get_yaw_pitch_roll_in_radians"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.q4.identity"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.q4.mix"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.q4.new"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.q4.prerotate"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.q4.prerrotate"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.q4.reverse"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.q4.rotate"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.q4.rrotate"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.q4.set"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.q4.set_yaw_pitch_roll"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.q4.set_yaw_pitch_roll_in_radians"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.q4.setrot"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.q4.setrrot"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.smoothstep"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.step"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.type"
  },
  {
   "count": 13,
   "name": "lua.wetgenes.tardis.v1"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v1.add"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v1.cross"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v1.distance"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v1.dot"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v1.identity"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v1.len"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v1.lenlen"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v1.mul"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v1.normalize"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v1.oo"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v1.scale"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v1.sub"
  },
  {
   "count": 14,
   "name": "lua.wetgenes.tardis.v2"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v2.add"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v2.cross"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v2.distance"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v2.dot"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v2.identity"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v2.len"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v2.lenlen"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v2.mul"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v2.new"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v2.normalize"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v2.oo"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v2.scale"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v2.sub"
  },
  {
   "count": 15,
   "name": "lua.wetgenes.tardis.v3"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v3.add"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v3.angle"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v3.cross"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v3.distance"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v3.dot"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v3.identity"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v3.len"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v3.lenlen"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v3.mul"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v3.new"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v3.normalize"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v3.oo"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v3.scale"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v3.sub"
  },
  {
   "count": 14,
   "name": "lua.wetgenes.tardis.v4"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v4.add"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v4.distance"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v4.dot"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v4.identity"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v4.len"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v4.lenlen"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v4.mul"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v4.new"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v4.normalize"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v4.oo"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v4.scale"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v4.sub"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tardis.v4.to_v3"
  },
  {
   "count": 31,
   "name": "lua.wetgenes.tasks"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tasks.add_global_thread"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tasks.add_id"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tasks.add_memo"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tasks.add_task"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tasks.add_thread"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tasks.claim_global"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tasks.client"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tasks.client_code"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tasks.cocall"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tasks.create"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tasks.create_colinda"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tasks.del_global_thread"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tasks.del_id"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tasks.del_memo"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tasks.del_task"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tasks.del_thread"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tasks.delete"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tasks.do_memo"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tasks.eject_global"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tasks.fetch_name"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tasks.global_code"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tasks.http"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tasks.http_code"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tasks.receive"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tasks.run_task"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tasks.send"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tasks.sqlite"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tasks.sqlite_code"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tasks.thread_code"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tasks.update"
  },
  {
   "count": 9,
   "name": "lua.wetgenes.tasks_msgp"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tasks_msgp.addr_to_ip_port"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tasks_msgp.addr_to_list"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tasks_msgp.clean_name"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tasks_msgp.ip6_to_addr"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tasks_msgp.ipsniff"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tasks_msgp.list_to_addr"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tasks_msgp.msgp_code"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tasks_msgp.pack"
  },
  {
   "count": 5,
   "name": "lua.wetgenes.tsv"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tsv.close"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tsv.create"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tsv.flush"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.tsv.load"
  },
  {
   "count": 23,
   "name": "lua.wetgenes.txt"
  },
  {
   "count": 5,
   "name": "lua.wetgenes.txt.diff"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.txt.diff.find"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.txt.diff.match"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.txt.diff.split"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.txt.diff.trim"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.txt.edit"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.txt.lex"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.txt.lex_js"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.txt.lex_lua"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.txt.undo"
  },
  {
   "count": 9,
   "name": "lua.wetgenes.txt.utf"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.txt.utf.char"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.txt.utf.charpattern"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.txt.utf.chars"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.txt.utf.length"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.txt.utf.map_latin0_to_unicode"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.txt.utf.map_unicode_to_latin0"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.txt.utf.size"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.txt.utf.string"
  },
  {
   "count": 3,
   "name": "lua.wetgenes.txt.words"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.txt.words.load"
  },
  {
   "count": 1,
   "name": "lua.wetgenes.txt.words.transform"
  },
  {
   "count": 1,
   "name": "prefabs"
  },
  {
   "count": 1,
   "name": "rules"
  },
  {
   "count": 1,
   "name": "setup"
  },
  {
   "count": 1,
   "name": "setup_menu"
  },
  {
   "count": 1,
   "name": "update"
  }
 ],
 "_docs_json": {
  "dirname": "{_root}docs",
  "dirs": {
   "../../lua": "",
   "../../lua_grd": ""
  },
  "ignore": {
   "node_modules": true
  },
  "urlprefix": {
   "../": "https://github.com/xriss/gamecake/blob/master/"
  }
 },
 "_filename": "{_root}docs/index.html",
 "_flags": {
  "body": {
   "trim": "ends"
  },
  "css": {
   "same": "append"
  },
  "head": {
   "trim": "ends"
  },
  "html": {
   "trim": "ends"
  },
  "menuwrap": {
   "trim": "ends"
  },
  "menuwrap_link": {
   "trim": "ends"
  },
  "menuwrap_link1": {
   "trim": "ends"
  },
  "menuwrap_link2": {
   "trim": "ends"
  },
  "title": {
   "trim": "ends"
  }
 },
 "_list": [
  {
   "body": "",
   "count": 7,
   "name": "code"
  },
  {
   "body": "",
   "count": 6,
   "name": "code.swankyquant"
  },
  {
   "body": "<h1 id=\"swankyquant\">SwankyQuant</h1>\n<p>To use this code remember to include it only once with SWANKYQUANT_C \ndefined or no code will be generated. For example.\n<br/>\n<br/></p>\n<pre><code>#define SWANKYQUANT_C\n#include &quot;swankyquant.h&quot;\n\n...\n\nswanky_quant( input, length, 256, output, palette, 6 );\n\nswanky_quant_remap( input, length, 256, output, palette, width, 6 );\n</code></pre>\n<p>The remap step is unnecessary unless you want your output image \ndithered.\n<br/>\n<br/></p>\n<p>SwankyQuant is a palette selection algorithm made of a combination of \nsimple actions, it requires a weighted compare function between two \ncolours and everything else is brute force selection based on this \ncompare. Since this compare is only used for yes/no logic then a 4d \ndistance squared between two 32bit colours is the default. Unlike the \nalternatives we fully support alpha in out palettes.</p>\n<p>The trick that makes this possible is using a byte per pixel thinking \nbuffer. Since you are presumably intending to remap the original image \ninto a buffer exactly like this I do not consider this an excessive \nextra resource, especially since this buffer is <em>also</em> the output \nindexed image when we are finished.</p>\n<p>This buffer allows us to keep track of which bucket we have assigned to \neach pixel, this combined with multiple image passes allows pixels to \njump from bucket to bucket until the allocation of pixels to available \nbuckets is reasonably optimal. We don&#39;t actually pick a palette we just \nsort pixels into buckets with other pixels of a similar colour. When \nfinished the average colour of each bucket is the resulting palette. </p>\n<p>Essentially we skip the generate a palette step and instead remap the \nimage repeatedly with the output palette automatically effected by \nevery pixels decision. Giving nice simple feedback until we hit a \nstable optimum solution.</p>\n<p>In order to reduce the number of image passes (each one is expensive) \nwe use an adjustable weight on the decision to jump so that early \npasses have more of an effect and later passes cleanup any mistakes, \nthis combined with a reasonable starting state (map by luminescence) \nhelps to reduce the cost of multiple passes and brute force searches to \nan acceptable level.</p>\n<p>Due to the brute force compares, generating a smaller palette is faster \nthan a larger palette. In Swanky Paint we are much more interested in \n16/32 colour palettes than 256 colour palettes so this is an additional \nadvantage.</p>\n<p>If the input contains only a handful of unique colours then we are very \nlikely to pick these exact colours provided there is enough room for \nthem all in the output palette.\n<br/>\n<br/></p>\n<h1 id=\"reference-links-to-other-algorithms\">REFERENCE LINKS TO OTHER ALGORITHMS</h1>\n<ol>\n<li>   <a href=\"http://www.imagemagick.org/script/quantize.php\">http://www.imagemagick.org/script/quantize.php</a></li>\n<li>   <a href=\"https://www.researchgate.net/publication/232079905_Kohonen_neural_networks_for_optimal_colour_quantization\">https://www.researchgate.net/publication/232079905_Kohonen_neural_networks_for_optimal_colour_quantization</a></li>\n<li>   <a href=\"https://scientificgems.wordpress.com/stuff/neuquant-fast-high-quality-image-quantization/\">https://scientificgems.wordpress.com/stuff/neuquant-fast-high-quality-image-quantization/</a><br/>\n<br/></li>\n</ol>\n<p>In comparison to the above I would list the following pros and cons.\n<br/>\n<br/></p>\n<pre><code>SWANKYQUANT PROS\n================\n\n    . Is simple to understand and tweak.\n\n    . Works with 32bit alpha.\n\n    . Works well with a small output palette.\n\n    . Will pick every distinct input if palette size allows.\n\n\nSWANKYQUANT CONS\n================\n\n    . Uses output memory as a thinking buffer.\n\n    . Is slower for large images and 256 colour palettes.\n</code></pre>\n<br/>\n<br/>\n\n<p>For large images I would recommend scaling the image down in size then \nusing the smaller image to generate the palette. Less precise but a \nhuge performance gain. This is the logic I use in Swanky Paint and the \ngrd library when loading larger images.</p>\n",
   "count": 1,
   "file": "../lua_grd/code/swankyquant.h",
   "line": 9,
   "name": "code.swankyquant.algorithm",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/swankyquant.h"
  },
  {
   "body": "<p>Compare two colors and return a distance value. This is non linear, as \nwe do not need to bother with the sqrt since the numbers are only used \nfor comparison.</p>\n",
   "count": 1,
   "file": "../lua_grd/code/swankyquant.h",
   "line": 163,
   "name": "code.swankyquant.color_distance",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/swankyquant.h"
  },
  {
   "body": "<p>Compare how close a match it would be if we added our color(weighted) \nto a bucket.</p>\n<p>Each bucket is 5 doubles and contains an rgba accumulator in \n[0][1][2][3]  and a number of samples in [5] Doubles must be used \nrather than floats or we will encounter number overflow for images that \nare larger than 256x256 pixels. </p>\n<p>(A float or int version for smaller images might be worthwhile.)</p>\n<p>The weight should be a natural 1.0 but since we want to encourage early \nbucket jumping we fudge it high at the start and then lower it on later \npasses to bring stability to the feedback system. This is simply to \nreduce the number of passes over the data required to get good results.</p>\n<p>This function also accounts for most of the thinking time so \ncould/should be optimised more.</p>\n",
   "count": 1,
   "file": "../lua_grd/code/swankyquant.h",
   "line": 176,
   "name": "code.swankyquant.color_distance_weight",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/swankyquant.h"
  },
  {
   "body": "<p>Reduce input rgba data to the requested number of index colors(2-256)</p>\n<p>reads data from input[4*length]</p>\n<p>writes data to output[length] and palette[4*colors]</p>\n<p>Make sure this memory is available.</p>\n<p>Quality is the number of passes and 6 or more is recommended for good \nresults.</p>\n",
   "count": 1,
   "file": "../lua_grd/code/swankyquant.h",
   "line": 209,
   "name": "code.swankyquant.swanky_quant",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/swankyquant.h"
  },
  {
   "body": "<p>Perform a final remap on a swanky_quant output image with an optional \namount of ordered dithering.</p>\n<pre><code>dither = 0  ==   1 bit pattern  ( no dithering )\ndither = 1  ==   3 bit patterns\ndither = 2  ==   5 bit patterns\ndither = 3  ==   9 bit patterns\ndither = 4  ==  17 bit patterns ( recommended dithering )\ndither = 5  ==  33 bit patterns\ndither = 6  ==  65 bit patterns ( maximum dithering )\n</code></pre>\n<p>width is the width of the image, we need to know this so we can dither \nnicely.</p>\n<p>All other values are the same as used in the swanky_quant function \ncall.</p>\n",
   "count": 1,
   "file": "../lua_grd/code/swankyquant.h",
   "line": 301,
   "name": "code.swankyquant.swanky_quant_remap",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/swankyquant.h"
  },
  {
   "body": "<pre><code>draw()\n</code></pre>\n<p>Draw called every frame, there may be any number of updates between \neach draw but hopefully we are looking at one update followed by a \ndraw, if you have an exceptionally fast computer then we may even get 0 \nupdates between some draws.</p>\n",
   "count": 1,
   "file": "../lua/fun/platobj.fun.lua",
   "line": 1988,
   "name": "draw",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/fun/platobj.fun.lua"
  },
  {
   "body": "<pre><code>entities.reset()\n</code></pre>\n<p>empty the list of entites to update and draw</p>\n<pre><code>entities.caste(caste)\n</code></pre>\n<p>get the list of entities of a given caste, eg &quot;bullets&quot; or &quot;enemies&quot;</p>\n<pre><code>entities.add(it,caste)\nentities.add(it)\n</code></pre>\n<p>add a new entity of caste or it.caste to the list of things to update </p>\n<pre><code>entities.call(fname,...)\n</code></pre>\n<p>for every entity call the function named fname like so it<a href=\"it,...\">fname</a>\n<br/>\n<br/>\n<br/></p>\n<pre><code>entities.get(name)\n</code></pre>\n<p>get a value previously saved, this is an easy way to find a unique \nentity, eg the global space but it can be used to save any values you \nwish not just to bookmark unique entities.</p>\n<pre><code>entities.set(name,value)\n</code></pre>\n<p>save a value by a unique name</p>\n<pre><code>entities.manifest(name,value)\n</code></pre>\n<p>get a value previously saved, or initalize it to the given value if it \ndoes not already exist. The default value is {} as this is intended for \nlists.\n<br/>\n<br/>\n<br/></p>\n<pre><code>entities.systems\n</code></pre>\n<p>A table to register or find a global system, these are not cleared by \nreset and should not contain any state data, just functions to create \nthe actual entity or initialise data.\n<br/>\n<br/>\n<br/></p>\n<pre><code>entities.tiles\n</code></pre>\n<p>These functions are called as we generate a level from ascii, every \nvalue in the tile legend data is checked against all the strings in \nentities.tiles and if it matches it calls that function which is then \nresponsible for adding the appropriate collision and drawing code to \nmake that tile actually add something to the level.</p>\n<p>The basic values of tile.tile and tile.back are used to write graphics \ninto the two tile layers but could still be caught here if you need to.</p>\n<p>Multiple hooks may get called for a single tile, think of each string \nas a flag to signal that something happens and its value describes what \nhappens.</p>\n",
   "count": 21,
   "file": "../lua/fun/platobj.fun.lua",
   "line": 68,
   "name": "entities",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/fun/platobj.fun.lua"
  },
  {
   "body": "<p>A global table for entity systems to live in.</p>\n<pre><code>entities.systems_call(fname,...)\n</code></pre>\n<p>Call the named function on any systems that currently exist. For \ninstance entities.systems_call(&quot;load&quot;) is used at the bottom \nof this file to prepare graphics of registered systems.</p>\n",
   "count": 16,
   "file": "../lua/fun/invaders.fun.lua",
   "line": 206,
   "name": "entities.systems",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/fun/invaders.fun.lua"
  },
  {
   "body": "<p>a bang</p>\n",
   "count": 1,
   "file": "../lua/fun/invaders.fun.lua",
   "line": 799,
   "name": "entities.systems.bang",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/fun/invaders.fun.lua"
  },
  {
   "body": "<pre><code>donut = entities.systems.donut.add(opts)\n</code></pre>\n<p>Add an donut.</p>\n",
   "count": 1,
   "file": "../lua/fun/platobj.fun.lua",
   "line": 1187,
   "name": "entities.systems.donut",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/fun/platobj.fun.lua"
  },
  {
   "body": "<p>The invading horde</p>\n",
   "count": 1,
   "file": "../lua/fun/invaders.fun.lua",
   "line": 528,
   "name": "entities.systems.horde",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/fun/invaders.fun.lua"
  },
  {
   "body": "<p>an invader</p>\n",
   "count": 1,
   "file": "../lua/fun/invaders.fun.lua",
   "line": 395,
   "name": "entities.systems.invader",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/fun/invaders.fun.lua"
  },
  {
   "body": "<pre><code>item = entities.systems.item.add()\n</code></pre>\n<p>items, can be used for general things, EG physics shapes with no special actions</p>\n",
   "count": 1,
   "file": "../lua/fun/platobj.fun.lua",
   "line": 449,
   "name": "entities.systems.item",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/fun/platobj.fun.lua"
  },
  {
   "body": "<pre><code>entities.systems.level.setup(level)\n</code></pre>\n<p>reset and setup everything for this level idx</p>\n",
   "count": 1,
   "file": "../lua/fun/platobj.fun.lua",
   "line": 1489,
   "name": "entities.systems.level",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/fun/platobj.fun.lua"
  },
  {
   "body": "<pre><code>menu = entities.systems.menu.setup()\n</code></pre>\n<p>Create a displayable and controllable menu system that can be fed chat \ndata for user display.</p>\n<p>After setup, provide it with menu items to display using \nmenu.show(items) then call update and draw each frame.</p>\n",
   "count": 1,
   "file": "../lua/fun/platobj.fun.lua",
   "line": 1614,
   "name": "entities.systems.menu",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/fun/platobj.fun.lua"
  },
  {
   "body": "<p>a missile</p>\n",
   "count": 1,
   "file": "../lua/fun/invaders.fun.lua",
   "line": 660,
   "name": "entities.systems.missile",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/fun/invaders.fun.lua"
  },
  {
   "body": "<pre><code>npc = entities.systems.npc.add(opts)\n</code></pre>\n<p>Add an npc.</p>\n",
   "count": 1,
   "file": "../lua/fun/platobj.fun.lua",
   "line": 988,
   "name": "entities.systems.npc",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/fun/platobj.fun.lua"
  },
  {
   "body": "<pre><code>entities.systems.player.controls(it,fast)\n</code></pre>\n<p>Handle player style movement, so we can reuse this code for player \nstyle monsters. it is a player or monster, fast lets us tweak the speed \nand defaults to 1</p>\n<p>movement controls are set in it</p>\n<p>it.move which is &quot;left&quot; or &quot;right&quot; to move left or right\nit.jump which is true if we should jump</p>\n",
   "count": 1,
   "file": "../lua/fun/platobj.fun.lua",
   "line": 727,
   "name": "entities.systems.player",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/fun/platobj.fun.lua"
  },
  {
   "body": "<pre><code>score = entities.systems.score.setup()\n</code></pre>\n<p>Create entity that handles the score hud update and display</p>\n",
   "count": 1,
   "file": "../lua/fun/platobj.fun.lua",
   "line": 514,
   "name": "entities.systems.score",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/fun/platobj.fun.lua"
  },
  {
   "body": "<pre><code>space = entities.systems.space.setup()\n</code></pre>\n<p>Create the space that simulates all of the physics.</p>\n",
   "count": 1,
   "file": "../lua/fun/platobj.fun.lua",
   "line": 185,
   "name": "entities.systems.space",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/fun/platobj.fun.lua"
  },
  {
   "body": "<p>The stars</p>\n",
   "count": 1,
   "file": "../lua/fun/invaders.fun.lua",
   "line": 1040,
   "name": "entities.systems.stars",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/fun/invaders.fun.lua"
  },
  {
   "body": "<p>setup background tile graphics</p>\n",
   "count": 1,
   "file": "../lua/fun/platobj.fun.lua",
   "line": 213,
   "name": "entities.systems.tile",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/fun/platobj.fun.lua"
  },
  {
   "body": "<p>Handle the main yarn setup update and draw.</p>\n",
   "count": 1,
   "file": "../lua/fun/overstep.fun.lua",
   "line": 4722,
   "name": "entities.systems.yarn",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/fun/overstep.fun.lua"
  },
  {
   "body": "",
   "count": 4,
   "name": "entities.tiles"
  },
  {
   "body": "<p>Display a npc</p>\n",
   "count": 1,
   "file": "../lua/fun/platobj.fun.lua",
   "line": 1346,
   "name": "entities.tiles.npc",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/fun/platobj.fun.lua"
  },
  {
   "body": "<p>Display a sprite</p>\n",
   "count": 1,
   "file": "../lua/fun/platobj.fun.lua",
   "line": 1324,
   "name": "entities.tiles.sprite",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/fun/platobj.fun.lua"
  },
  {
   "body": "<p>The player start point, just save the x,y</p>\n",
   "count": 1,
   "file": "../lua/fun/platobj.fun.lua",
   "line": 1313,
   "name": "entities.tiles.start",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/fun/platobj.fun.lua"
  },
  {
   "body": "<p>define all graphics in this global, we will convert and upload to tiles \nat setup although you can change tiles during a game, we try and only \nupload graphics during initial setup so we have a nice looking sprite \nsheet to be edited by artists</p>\n",
   "count": 1,
   "file": "../lua/fun/platobj.fun.lua",
   "line": 28,
   "name": "graphics",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/fun/platobj.fun.lua"
  },
  {
   "body": "<p>select the hardware we will need to run this code, eg layers of \ngraphics, colors to use, sprites, text, sound, etc etc.</p>\n<p>Here we have chosen the default 320x240 setup.</p>\n",
   "count": 1,
   "file": "../lua/fun/platobj.fun.lua",
   "line": 10,
   "name": "hardware",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/fun/platobj.fun.lua"
  },
  {
   "body": "<p>Design levels here</p>\n",
   "count": 1,
   "file": "../lua/fun/platobj.fun.lua",
   "line": 1362,
   "name": "levels",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/fun/platobj.fun.lua"
  },
  {
   "body": "",
   "count": 636,
   "name": "lua"
  },
  {
   "body": "<p>Manage string embedding and the glsl compiler and language options.</p>\n<p>This is somewhat separate to the main GLES code and can be used without \nlinking to any system dependent GL libs.</p>\n",
   "count": 6,
   "file": "../lua/glslang.lua",
   "line": 4,
   "name": "lua.glslang",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/glslang.lua"
  },
  {
   "body": "<pre><code>verr,ferr = glslang.lint_gles2(vcode,fcode)\n</code></pre>\n<p>Try and compile a vertex/fragment shader pair and return any errors.</p>\n<p>returns nil,nil on success or an error string if either shader fails to \ncompile.</p>\n<p>Note that the glslang compile step seems rather slow, not sure what it \ngets up to but do not consider using this if speed is important.</p>\n",
   "count": 1,
   "file": "../lua/glslang.lua",
   "line": 79,
   "name": "lua.glslang.lint_gles2",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/glslang.lua"
  },
  {
   "body": "<pre><code>shaders=glslang.shader_chunks(text,filename,headers,flags)\n\n    load multiple shader chunks from a single file and return a lookup\n    table of name=code for each shader we just loaded. These can then be\n    compiled or whatever.\n    \n    set flags.headers_only to true if you only care about parsing headers\n    for later inclusion and do not want to parse shader chunks.\n    \n\n#SHADER &quot;nameofshader&quot;\n\n    is used at the start of a line to say which chunk the following text\n    should go into. This is technically the same as #header but makes it\n    explicit that this should be all the code for a shader rather than just\n    a piece.\n\n#HEADER &quot;nameofheader&quot;\n\n    can be used to define part of a shader, which can later be included in\n    another shader by using\n\n#INCLUDE &quot;nameofheader&quot;\n\n    Will insert the chunk of text previously defined as a #SHADER or #HEADER\n\n#SHADER or #HEADER\n\n    without a name can be used to ignore the next part of a file, any text\n    at the start of a file before the first #SHADER or #HEADER is also\n    ignored. This enables these chunks to exist inside comments in a lua or\n    whatever file.\n</code></pre>\n",
   "count": 1,
   "file": "../lua/glslang.lua",
   "line": 105,
   "name": "lua.glslang.parse_chunks",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/glslang.lua"
  },
  {
   "body": "<pre><code>code,err = glslang.pp(code,err)\n</code></pre>\n<p>Preprocess a vertex/fragment and return the result.</p>\n<p>returns nil,error on error</p>\n",
   "count": 1,
   "file": "../lua/glslang.lua",
   "line": 62,
   "name": "lua.glslang.pp",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/glslang.lua"
  },
  {
   "body": "<p>process #include statements in src with strings found in the headers table</p>\n",
   "count": 1,
   "file": "../lua/glslang.lua",
   "line": 188,
   "name": "lua.glslang.replace_include",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/glslang.lua"
  },
  {
   "body": "<p>parse a shader source and yank any #version out of the source and into a table\nthis allows multiple attempts at compiling the same source using different #versions</p>\n",
   "count": 1,
   "file": "../lua/glslang.lua",
   "line": 24,
   "name": "lua.glslang.yank_shader_versions",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/glslang.lua"
  },
  {
   "body": "<pre><code>local wetgenes=require(&quot;wetgenes&quot;)\n</code></pre>\n<p>Simple generic functions that are intended to be useful for all \nwetgenes.* modules.</p>\n<p>Probably best to cherry pick a few functions you need and export then like so.</p>\n<pre><code>local export,lookup,deepcopy=require(&quot;wetgenes&quot;):export(&quot;export&quot;,&quot;lookup&quot;,&quot;deepcopy&quot;)\n</code></pre>\n",
   "count": 629,
   "file": "../lua/wetgenes/init.lua",
   "line": 5,
   "name": "lua.wetgenes",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/init.lua"
  },
  {
   "body": "<pre><code>local bullet=require(&quot;wetgenes.bullet&quot;)\n</code></pre>\n<p>We use bullet as the local name of this library.</p>\n<p>A lua binding to the <a href=\"https://github.com/bulletphysics/bullet3\">Bullet\nPhysics</a> library</p>\n",
   "count": 38,
   "file": "../lua/wetgenes/bullet.lua",
   "line": 14,
   "name": "lua.wetgenes.bullet",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/bullet.lua"
  },
  {
   "body": "",
   "count": 9,
   "name": "lua.wetgenes.bullet.body"
  },
  {
   "body": "<pre><code>body:cgroup(bits)\nbits=body:cgroup()\n</code></pre>\n<p>Set or get body cgroup bits. You have 31 bits, so use 0x7fffffff to set\nall. These provide simple yes/no collision control between bodies.</p>\n<pre><code>cgroup bits are all the groups this body belongs to.\ncmask bits are all the groups this body colides with.\n</code></pre>\n",
   "count": 1,
   "file": "../lua/wetgenes/bullet.lua",
   "line": 590,
   "name": "lua.wetgenes.bullet.body.cgroup",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/bullet.lua"
  },
  {
   "body": "<pre><code>body:change_shape(shape)\nbody:change_shape(shape,mass)\n</code></pre>\n<p>Change the shape assoctiated with this body and optionally change the\nmass.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/bullet.lua",
   "line": 696,
   "name": "lua.wetgenes.bullet.body.change_shape",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/bullet.lua"
  },
  {
   "body": "<pre><code>body:cmask(bits)\nbits=body:cmask()\nbody:cmask(0x7fffffff)\n</code></pre>\n<p>Set or get body cmask bits. You have 31 bits, so use 0x7fffffff to set\nall. This body will only colide with another body if the other bodys\ncgroup has a bit set that is also set in our cmask.</p>\n<pre><code>cgroup bits are all the groups this body belongs to.\ncmask bits are all the groups this body colides with.\n</code></pre>\n",
   "count": 1,
   "file": "../lua/wetgenes/bullet.lua",
   "line": 609,
   "name": "lua.wetgenes.bullet.body.cmask",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/bullet.lua"
  },
  {
   "body": "<pre><code>body:force(fx,fy,fz)\nbody:force(fx,fy,fz,lx,ly,lz)\n</code></pre>\n<p>Apply force fx,fy,fz at world relative location (subtract origin of\nobject) lx,ly,lz which will default to 0,0,0 if not given.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/bullet.lua",
   "line": 668,
   "name": "lua.wetgenes.bullet.body.force",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/bullet.lua"
  },
  {
   "body": "<pre><code>body:gravity(x,y,z)\nx,y,z = body:gravity()\n</code></pre>\n<p>Set or get body gravity vector. Fidling with this may be the easiest\nway for a player to move an object around, it certainly makes it easier\nto create &quot;magnetic fields&quot; to hover objects above the ground.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/bullet.lua",
   "line": 571,
   "name": "lua.wetgenes.bullet.body.gravity",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/bullet.lua"
  },
  {
   "body": "<pre><code>body:impulse(fx,fy,fz)\nbody:impulse(fx,fy,fz,lx,ly,lz)\n</code></pre>\n<p>Apply impulse fx,fy,fz at world relative location (subtract origin of\nobject) lx,ly,lz which will default to 0,0,0 if not given.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/bullet.lua",
   "line": 682,
   "name": "lua.wetgenes.bullet.body.impulse",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/bullet.lua"
  },
  {
   "body": "<pre><code>body:overlaps()\n</code></pre>\n<p>Get list of bodys that overlap with a ghost body object.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/bullet.lua",
   "line": 631,
   "name": "lua.wetgenes.bullet.body.overlaps",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/bullet.lua"
  },
  {
   "body": "<pre><code>x,y,z=body:support(nx,ny,nz)\n</code></pre>\n<p>Get world location of support point in given direction.</p>\n<p>EG the world location that is touching the floor when the\ndirection is up.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/bullet.lua",
   "line": 652,
   "name": "lua.wetgenes.bullet.body.support",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/bullet.lua"
  },
  {
   "body": "<pre><code>world=bullet.world()\n</code></pre>\n<p>Create the world you will be simulating physics in.</p>\n",
   "count": 28,
   "file": "../lua/wetgenes/bullet.lua",
   "line": 45,
   "name": "lua.wetgenes.bullet.world",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/bullet.lua"
  },
  {
   "body": "<pre><code>body = world:body(&quot;rigid&quot;,shape,mass,x,y,z,cgroup,cmask)\nbody = world:body({name=&quot;rigid&quot;,shape=shape,mass=mass.pos=V3(0)})\n</code></pre>\n<p>Create a body.</p>\n",
   "count": 14,
   "file": "../lua/wetgenes/bullet.lua",
   "line": 350,
   "name": "lua.wetgenes.bullet.world.body",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/bullet.lua"
  },
  {
   "body": "<pre><code>b = body:active( true )\nb = body:active( false )\nb = body:active()\n</code></pre>\n<p>get/set the active state of an object</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/bullet.lua",
   "line": 488,
   "name": "lua.wetgenes.bullet.world.body.active",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/bullet.lua"
  },
  {
   "body": "<pre><code>x,y,z = body:angular_factor( x , y , z )\nx,y,z = body:angular_factor( r )\nr = ( body:angular_factor( r ) )\n</code></pre>\n<p>get/set the angular factor of an object (which disables rotation when zero)</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/bullet.lua",
   "line": 542,
   "name": "lua.wetgenes.bullet.world.body.angular_factor",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/bullet.lua"
  },
  {
   "body": "<pre><code>x,y,z = body:angular_velocity( x,y,z )\nx,y,z = body:angular_velocity()\n</code></pre>\n<p>get/set the body angular velocity</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/bullet.lua",
   "line": 529,
   "name": "lua.wetgenes.bullet.world.body.angular_velocity",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/bullet.lua"
  },
  {
   "body": "<pre><code>r,t = body:ccd( radius,threshold )\nr,t = body:ccd()\n</code></pre>\n<p>get/set the continuos collision detection radius,threshold values</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/bullet.lua",
   "line": 475,
   "name": "lua.wetgenes.bullet.world.body.ccd",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/bullet.lua"
  },
  {
   "body": "<pre><code>b = body:custom_material_callback( b )\nb = body:custom_material_callback()\n</code></pre>\n<p>get/set the body custom_material_callback flag</p>\n<p>When set we run a custom callback to try and smooth mesh collisions.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/bullet.lua",
   "line": 556,
   "name": "lua.wetgenes.bullet.world.body.custom_material_callback",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/bullet.lua"
  },
  {
   "body": "<pre><code>l,a = body:damping( linear , angular )\nl,a = body:damping()\n</code></pre>\n<p>get/set the body damping</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/bullet.lua",
   "line": 449,
   "name": "lua.wetgenes.bullet.world.body.damping",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/bullet.lua"
  },
  {
   "body": "<pre><code>body:destroy()\n</code></pre>\n<p>Destroy body.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/bullet.lua",
   "line": 391,
   "name": "lua.wetgenes.bullet.world.body.destroy",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/bullet.lua"
  },
  {
   "body": "<pre><code>x,y,z = body:factor( x , y , z )\nx,y,z = body:factor( r )\nr = ( body:factor( r ) )\n</code></pre>\n<p>get/set the linear factor of an object (which disables movement when zero)</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/bullet.lua",
   "line": 515,
   "name": "lua.wetgenes.bullet.world.body.factor",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/bullet.lua"
  },
  {
   "body": "<pre><code>l,a,s = body:friction( linear , angular , spinning )\nl,a,s = body:friction()\n</code></pre>\n<p>get/set the body friction</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/bullet.lua",
   "line": 436,
   "name": "lua.wetgenes.bullet.world.body.friction",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/bullet.lua"
  },
  {
   "body": "<pre><code>r = body:transform( r )\nr = body:transform()\n</code></pre>\n<p>get/set the body restitution</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/bullet.lua",
   "line": 423,
   "name": "lua.wetgenes.bullet.world.body.restitution",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/bullet.lua"
  },
  {
   "body": "<pre><code>l,a = body:sleep()\nl,a = body:sleep(linear,angular)\n</code></pre>\n<p>get/set the sleep threasholds of an object, defaults are ( 0.8 , 1.0 )</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/bullet.lua",
   "line": 502,
   "name": "lua.wetgenes.bullet.world.body.sleep",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/bullet.lua"
  },
  {
   "body": "<pre><code>px,py,pz,qx,qy,qz,qw = body:transform()\npx,py,pz,qx,qy,qz,qw = body:transform(px,py,pz)\npx,py,pz,qx,qy,qz,qw = body:transform(px,py,pz,qx,qy,qz,qw)\n</code></pre>\n<p>get/set the body transform. Position and Rotation Quaternion.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/bullet.lua",
   "line": 409,
   "name": "lua.wetgenes.bullet.world.body.transform",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/bullet.lua"
  },
  {
   "body": "<pre><code>x,y,z = body:velocity( x,y,z )\nx,y,z = body:velocity()\n</code></pre>\n<p>get/set the body velocity</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/bullet.lua",
   "line": 462,
   "name": "lua.wetgenes.bullet.world.body.velocity",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/bullet.lua"
  },
  {
   "body": "<pre><code>local contacts,csiz=world:contacts()\nlocal contacts,csiz=world:contacts(min_dist)\nlocal contacts,csiz=world:contacts(min_dist,min_impulse)\n</code></pre>\n<p>Fetch all contacts in the world that are the same or closer than\nmin_dist which defaults to 0 and hit the same or harder than\nmin_impulse which also defaults to 0. This helps filter out\nuninteresting collisions before we process them.</p>\n<p>csiz, the second return allows us to put more info into each chunk in\nthe future, it will probably be 10 but may grow if it turns out that\nmore contact info for each point would help.</p>\n<p>This returns a list of contacts. Each contact is an array that\nconsists of.</p>\n<pre><code>a_body,\nb_body,\n</code></pre>\n<p>and then 1 or more chunks of csiz (which is currently 10) numbers\nrepresenting</p>\n<pre><code>ax,ay,az,\t-- world position on a_body\nbx,by,bz,\t-- world position on b_body\nnx,ny,nz,\t-- world normal on b_body\nimpulse,\t-- impulse applied by collision\n</code></pre>\n<p>So you can find the two bodys in contact[1] and contact[2] but are then\nexpected to loop over the rest of the array as chunks of csiz like so.</p>\n<pre><code>for idx=3,#contact,csiz do\n    local pos_a={ contact[idx+0] , contact[idx+1] , contact[idx+2] }\n    local pos_b={ contact[idx+3] , contact[idx+4] , contact[idx+5] }\n    local nrm_b={ contact[idx+6] , contact[idx+7] , contact[idx+8] }\n    local impulse=contact[idx+9]\n    ...\nend\n</code></pre>\n<p>This is intended to be processed and interesting collisions handled or\nsaved for later.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/bullet.lua",
   "line": 193,
   "name": "lua.wetgenes.bullet.world.contacts",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/bullet.lua"
  },
  {
   "body": "<pre><code>world:destroy()\n</code></pre>\n<p>Destroy the world and all associated data.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/bullet.lua",
   "line": 70,
   "name": "lua.wetgenes.bullet.world.destroy",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/bullet.lua"
  },
  {
   "body": "<pre><code>world:get(name)\n</code></pre>\n<p>Get a named mesh/body/shape</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/bullet.lua",
   "line": 89,
   "name": "lua.wetgenes.bullet.world.get",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/bullet.lua"
  },
  {
   "body": "<pre><code>world:gravity(x,y,z)\n\nx,y,z = world:gravity()\n</code></pre>\n<p>Set or get world gravity vector. Recommended gravity is 0,-10,0</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/bullet.lua",
   "line": 123,
   "name": "lua.wetgenes.bullet.world.gravity",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/bullet.lua"
  },
  {
   "body": "<pre><code>mesh = world:mesh()\n</code></pre>\n<p>Create a mesh.</p>\n",
   "count": 2,
   "file": "../lua/wetgenes/bullet.lua",
   "line": 248,
   "name": "lua.wetgenes.bullet.world.mesh",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/bullet.lua"
  },
  {
   "body": "<pre><code>mesh:destroy()\n</code></pre>\n<p>Destroy mesh.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/bullet.lua",
   "line": 271,
   "name": "lua.wetgenes.bullet.world.mesh.destroy",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/bullet.lua"
  },
  {
   "body": "<pre><code>local test={\n    mode=&quot;closest&quot;,\n    ray={{0,0,0},{1,1,1}},\n}\ntest=world:ray_test(test)\n\nif world:ray_test(opts).hit then ... end\n</code></pre>\n<p>Perform a ray test between the two ray vectors provided in the test table.\nfills in hit={...} if we hit something with details of the hit.</p>\n<p>Always returns the test table that was passed in, with modifications that\nprovide the result. Be carefull about reusing this table it is safest to create\na new one for each ray_test call.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/bullet.lua",
   "line": 165,
   "name": "lua.wetgenes.bullet.world.ray_test",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/bullet.lua"
  },
  {
   "body": "<pre><code>world:set(name,it)\n</code></pre>\n<p>Set a named mesh/body/shape</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/bullet.lua",
   "line": 103,
   "name": "lua.wetgenes.bullet.world.set",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/bullet.lua"
  },
  {
   "body": "<pre><code>shape = world:shape()\n</code></pre>\n<p>Create a shape.</p>\n",
   "count": 3,
   "file": "../lua/wetgenes/bullet.lua",
   "line": 287,
   "name": "lua.wetgenes.bullet.world.shape",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/bullet.lua"
  },
  {
   "body": "<pre><code>shape:destroy()\n</code></pre>\n<p>Destroy shape.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/bullet.lua",
   "line": 315,
   "name": "lua.wetgenes.bullet.world.shape.destroy",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/bullet.lua"
  },
  {
   "body": "<pre><code>r = body:margin( radius )\n</code></pre>\n<p>get/set the shapes margin size</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/bullet.lua",
   "line": 337,
   "name": "lua.wetgenes.bullet.world.shape.margin",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/bullet.lua"
  },
  {
   "body": "<pre><code>print( world:status() )\n</code></pre>\n<p>Return a debug string about allocated objects in this world.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/bullet.lua",
   "line": 723,
   "name": "lua.wetgenes.bullet.world.status",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/bullet.lua"
  },
  {
   "body": "<pre><code>world:step(seconds)\nworld:step(seconds,steps)\n</code></pre>\n<p>Move the simulation forward in time by the given amount in seconds.</p>\n<p>If steps is given then this will be repeated steps times resulting in\nmoving the world forward seconds*steps.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/bullet.lua",
   "line": 141,
   "name": "lua.wetgenes.bullet.world.step",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/bullet.lua"
  },
  {
   "body": "<pre><code>local chipmunk=require(&quot;wetgenes.chipmunk&quot;)\n</code></pre>\n<p>We use chipmunk as the local name of this library.</p>\n<p>A lua binding to the Chipmunk2D physics library <a href=\"https://chipmunk-physics.net/\">chipmunk-physics.net</a></p>\n",
   "count": 64,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 6,
   "name": "lua.wetgenes.chipmunk",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "",
   "count": 4,
   "name": "lua.wetgenes.chipmunk.arbiter"
  },
  {
   "body": "<pre><code>return arbiter:ignore()\n</code></pre>\n<p>Ignore this collision, from now until the shapes separate.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 1122,
   "name": "lua.wetgenes.chipmunk.arbiter.ignore",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>points=arbiter:points()\npoints=arbiter:points(points)\n</code></pre>\n<p>Get and/or Set the points data for this arbiter.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 1098,
   "name": "lua.wetgenes.chipmunk.arbiter.points",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>vx,vy=arbiter:surface_velocity()\nvx,vy=arbiter:surface_velocity(vx,vy)\n</code></pre>\n<p>Get and/or Set the surface velocity for this arbiter.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 1110,
   "name": "lua.wetgenes.chipmunk.arbiter.surface_velocity",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>body=chipmunk.body(mass,inertia)\n</code></pre>\n<p>Create a dynamic body, with the given mass and inertia.</p>\n<p>You will need to add the body to a space before it exists so it is \nnormally preferable to use the space:body function which will call this \nfunction and then automatically add the body into the space.</p>\n<pre><code>body=chipmunk.body(&quot;kinematic&quot;)\n</code></pre>\n<p>Create a kinematic body, these are bodies that we can move around, by \nsetting its velocity, but are not effected by collisions with other \nbodies. EG a moving platform.</p>\n<pre><code>body=chipmunk.body(&quot;static&quot;)\n</code></pre>\n<p>Create a static body, mostly you can just use space.static as the \ndefault static body but you may create more if you wish to group your \nstatic shapes into multiple bodies.</p>\n",
   "count": 16,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 92,
   "name": "lua.wetgenes.chipmunk.body",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>a=body:angle()\na=body:angle(a)\n</code></pre>\n<p>Get and/or Set the rotation angle in radians for this body.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 798,
   "name": "lua.wetgenes.chipmunk.body.angle",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>a=body:angular_velocity()\na=body:angular_velocity(a)\n</code></pre>\n<p>Get and/or Set the angular velocity in radians for this body.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 810,
   "name": "lua.wetgenes.chipmunk.body.angular_velocity",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>body:apply_force(fx,fy,px,py)\nbody:apply_force(fx,fy,px,py,&quot;world&quot;)\n</code></pre>\n<p>Apply a force to this body at a specific point, the point can be in \nworld coordinates if you include the &quot;world&quot; flag but defaults to local \nobject coordinates.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 834,
   "name": "lua.wetgenes.chipmunk.body.apply_force",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>body:apply_impulse(ix,iy,px,py)\nbody:apply_impulse(ix,iy,px,py,&quot;world&quot;)\n</code></pre>\n<p>Apply a force to this body at a specific point, the point can be in \nworld coordinates if you include the &quot;world&quot; flag but defaults to local \nobject coordinates.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 852,
   "name": "lua.wetgenes.chipmunk.body.apply_impulse",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>vx,vy=body:center_of_gravity()\nvx,vy=body:center_of_gravity(vx,vy)\n</code></pre>\n<p>Get and/or Set the center of gravity for this body.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 761,
   "name": "lua.wetgenes.chipmunk.body.center_of_gravity",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>vx,vy=body:force()\nvx,vy=body:force(vx,vy)\n</code></pre>\n<p>Get and/or Set the force for this body. This is reset back to 0 after \neach step.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 785,
   "name": "lua.wetgenes.chipmunk.body.force",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>m=body:mass()\nm=body:mass(m)\n</code></pre>\n<p>Get and/or Set the mass for this body.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 725,
   "name": "lua.wetgenes.chipmunk.body.mass",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>m=body:moment()\nm=body:moment(m)\n</code></pre>\n<p>Get and/or Set the moment for this body.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 737,
   "name": "lua.wetgenes.chipmunk.body.moment",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>vx,vy=body:position()\nvx,vy=body:position(vx,vy)\n</code></pre>\n<p>Get and/or Set the position for this body.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 749,
   "name": "lua.wetgenes.chipmunk.body.position",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>body:position_func(position_callback)\nbody:position_func()\n</code></pre>\n<p>Set or clear the position callback update function for this body.</p>\n<pre><code>position_callback(body)\n\nbody.delta_time\n</code></pre>\n<p>This callback will be called with the above values set into body, you \ncan adjust these and return true to perform a normal position update \nbut with these new values.</p>\n<p>Alternatively you can update the bodys position directly and return \nfalse so the normal position update code will not be run.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 899,
   "name": "lua.wetgenes.chipmunk.body.position_func",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>shape=body:shape(form,...)\n</code></pre>\n<p>Add a new shape to this body, returns the shape for further \nmodification.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 922,
   "name": "lua.wetgenes.chipmunk.body.shape",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>a=body:torque()\na=body:torque(a)\n</code></pre>\n<p>Get and/or Set the torque for this body.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 822,
   "name": "lua.wetgenes.chipmunk.body.torque",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>t=body:type()\nt=body:type(t)\n</code></pre>\n<p>Get and/or Set the type for this body.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 710,
   "name": "lua.wetgenes.chipmunk.body.type",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>vx,vy=body:velocity()\nvx,vy=body:velocity(vx,vy)\n</code></pre>\n<p>Get and/or Set the velocity for this body.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 773,
   "name": "lua.wetgenes.chipmunk.body.velocity",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>body:velocity_func(velocity_callback)\nbody:velocity_func()\n</code></pre>\n<p>Set or clear the velocity callback update function for this body.</p>\n<pre><code>velocity_callback(body)\n\nbody.gravity_x\nbody.gravity_y\nbody.damping\nbody.delta_time\n</code></pre>\n<p>This callback will be called with the above values set into body, you \ncan adjust these and return true to perform a normal velocity update \nbut with these new values.</p>\n<p>IE you can choose a new gravity vector for this body which is the \nsimplest change to make.</p>\n<p>Alternatively you can update the bodys velocity directly and return \nfalse so the normal velocity update code will not be run.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 870,
   "name": "lua.wetgenes.chipmunk.body.velocity_func",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>constraint=chipmunk.constraint(abody,bbody,form,...)\n</code></pre>\n<p>Create a constraint between two bodies.</p>\n<p>You will need to add the constraint to a space before it has any effect \nso it is normally preferable to use the space:constraint function which \nwill call this function and then automatically add the constraint into \nthe space.</p>\n<pre><code>constraint=chipmunk.constraint(abody,bbody,&quot;pin_join&quot;,ax,ay,bx,by)\n</code></pre>\n<p>form of &quot;pin_joint&quot; ...</p>\n<pre><code>constraint=chipmunk.constraint(abody,bbody,&quot;slide_joint&quot;,ax,ay,bx,by,fl,fh)\n</code></pre>\n<p>form of &quot;slide_joint&quot; ...</p>\n<pre><code>constraint=chipmunk.constraint(abody,bbody,&quot;pivot_joint&quot;,x,y)\nconstraint=chipmunk.constraint(abody,bbody,&quot;pivot_joint&quot;,ax,ay,bx,by)\n</code></pre>\n<p>form of &quot;pivot_joint&quot; ...</p>\n<pre><code>constraint=chipmunk.constraint(abody,bbody,&quot;groove_joint&quot;,ax,ay,bx,by,cx,cy)\n</code></pre>\n<p>form of &quot;groove_joint&quot; ...</p>\n<pre><code>constraint=chipmunk.constraint(abody,bbody,&quot;damped_spring&quot;,ax,ay,bx,by,fl,fs,fd)\n</code></pre>\n<p>form of &quot;damped_spring&quot; ...</p>\n<pre><code>constraint=chipmunk.constraint(abody,bbody,&quot;damped_rotary_spring&quot;,fa,fs,fd)\n</code></pre>\n<p>form or &quot;damped_rotary_spring&quot; ...</p>\n<pre><code>constraint=chipmunk.constraint(abody,bbody,&quot;rotary_limit_joint&quot;,fl,fh)\n</code></pre>\n<p>form of &quot;rotary_limit_joint&quot; ...</p>\n<pre><code>constraint=chipmunk.constraint(abody,bbody,&quot;ratchet_joint&quot;,fp,fr)\n</code></pre>\n<p>form of &quot;ratchet_joint&quot; ...</p>\n<pre><code>constraint=chipmunk.constraint(abody,bbody,&quot;gear_joint&quot;,fp,fr)\n</code></pre>\n<p>form of &quot;gear_joint&quot; ...</p>\n<pre><code>constraint=chipmunk.constraint(abody,bbody,&quot;simple_motor&quot;,fr)\n</code></pre>\n<p>form of &quot;simple_motor&quot; ...</p>\n",
   "count": 6,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 167,
   "name": "lua.wetgenes.chipmunk.constraint",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>v=constraint:collide_bodies()\nv=constraint:collide_bodies(v)\n</code></pre>\n<p>Get and/or Set the max collide bodies flag for this constraint.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 1170,
   "name": "lua.wetgenes.chipmunk.constraint.collide_bodies",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>v=constraint:error_bias()\nv=constraint:error_bias(v)\n</code></pre>\n<p>Get and/or Set the error bias for this constraint.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 1146,
   "name": "lua.wetgenes.chipmunk.constraint.error_bias",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>v=constraint:impulse()\n</code></pre>\n<p>Get the last impulse for this constraint.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 1182,
   "name": "lua.wetgenes.chipmunk.constraint.impulse",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>v=constraint:max_bias()\nv=constraint:max_bias(v)\n</code></pre>\n<p>Get and/or Set the max bias for this constraint.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 1158,
   "name": "lua.wetgenes.chipmunk.constraint.max_bias",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>v=constraint:max_force()\nv=constraint:max_force(v)\n</code></pre>\n<p>Get and/or Set the max force for this constraint.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 1134,
   "name": "lua.wetgenes.chipmunk.constraint.max_force",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>shape=chipmunk.shape(body,form...)\n</code></pre>\n<p>Create a shape, added to the given body. Shapes are always added to a \nbody but must be added to a space before they have any effect. So it is \nnormally preferable to use the body:shape function which will \nautomatically add the shape into the space that the body belongs to.</p>\n<pre><code>shape=chipmunk.shape(space.static,form...)\n</code></pre>\n<p>Create a static shape in world space. We use space.static as the body. </p>\n<pre><code>shape=chipmunk.shape(body,&quot;circle&quot;,radius,x,y)\n</code></pre>\n<p>Form of &quot;circle&quot; needs a radius and a centre point.</p>\n<pre><code>shape=chipmunk.shape(body,&quot;segment&quot;,ax,ay,bx,by,radius)\n</code></pre>\n<p>Form of &quot;segment&quot; needs two points and a radius.</p>\n<pre><code>shape=chipmunk.shape(body,&quot;poly&quot;,{x1,y1,x2,y2,...},radius)\n</code></pre>\n<p>Form of &quot;poly&quot; is a generic polygon defined by a table of points.</p>\n<pre><code>shape=chipmunk.shape(body,&quot;box&quot;,minx,miny,maxx,maxy,radius)\n</code></pre>\n<p>Form of &quot;box&quot; needs two points for opposite corners, lowest pair \nfollowed by highest pair and a radius. The radius should be 0 unless \nyou want rounded corners</p>\n",
   "count": 11,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 128,
   "name": "lua.wetgenes.chipmunk.shape",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>min_x,min_y,max_x,max_y=shape:bounding_box()\n</code></pre>\n<p>Get the current bounding box for this shape.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 938,
   "name": "lua.wetgenes.chipmunk.shape.bounding_box",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>f=shape:collision_type()\nf=shape:collision_type(f)\n</code></pre>\n<p>Get and/or Set the collision type for this shape.</p>\n<p>The f argument can be a string in which case it will be converted to a \nnumber via the space:type function.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 997,
   "name": "lua.wetgenes.chipmunk.shape.collision_type",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>f=shape:elasticity()\nf=shape:elasticity(f)\n</code></pre>\n<p>Get and/or Set the elasticity for this shape.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 961,
   "name": "lua.wetgenes.chipmunk.shape.elasticity",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>f=shape:filter()\nf=shape:filter(f)\n</code></pre>\n<p>Get and/or Set the filter for this shape.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 1013,
   "name": "lua.wetgenes.chipmunk.shape.filter",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>f=shape:friction()\nf=shape:friction(f)\n</code></pre>\n<p>Get and/or Set the friction for this shape.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 973,
   "name": "lua.wetgenes.chipmunk.shape.friction",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>item = shape:query_point(x,y)\n</code></pre>\n<p>Find the nearest point on the shape from the point at x,y.</p>\n<p>returns a table with the following info or nil for no hit</p>\n<pre><code>it.shape\t\t-- the shape\nit.point_x\t\t-- the point of contact (x)\nit.point_y\t\t-- the point of contact (y)\nit.distance\t\t-- the distance to the point of contact\nit.gradient_x\t-- the normalised vector to collision (x)\nit.gradient_y\t-- the normalised vector to collision (y)\n</code></pre>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 1039,
   "name": "lua.wetgenes.chipmunk.shape.query_point",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>it = shape:query_segment(sx,sy,ex,ey,r)\n</code></pre>\n<p>Find the hitpoint along this raycast segment, from (sx,sy) to \n(ex,ey) with a radius of r. </p>\n<p>Returns a table with the following info or nil for no hit</p>\n<pre><code>it.shape\t\t-- the shape\nit.point_x\t\t-- the point of contact (x)\nit.point_y\t\t-- the point of contact (y)\nit.normal_x\t\t-- the normal at contact (x)\nit.normal_y\t\t-- the normal at contact (y)\nit.alpha\t\t-- how far along the segment the contact happened (0 to 1)\n</code></pre>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 1068,
   "name": "lua.wetgenes.chipmunk.shape.query_segment",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>radius=shape:radius()\nradius=shape:radius(radius)\n</code></pre>\n<p>Get and/or Set the radius for this shape. Setting is unsafe and may \nbreak the physics simulation.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 1026,
   "name": "lua.wetgenes.chipmunk.shape.radius",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>f=shape:sensor()\nf=shape:sensor(f)\n</code></pre>\n<p>Get and/or Set the sensor flag for this shape.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 949,
   "name": "lua.wetgenes.chipmunk.shape.sensor",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>vx,vy=shape:surface_velocity()\nvx,vy=shape:surface_velocity(vx,vy)\n</code></pre>\n<p>Get and/or Set the surface velocity for this shape.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 985,
   "name": "lua.wetgenes.chipmunk.shape.surface_velocity",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>space=chipmunk.space()\n</code></pre>\n<p>Create the space you will be simulating physics in.</p>\n",
   "count": 26,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 44,
   "name": "lua.wetgenes.chipmunk.space",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>space:add(body)\nspace:add(shape)\nspace:add(constraint)\n</code></pre>\n<p>Add a body/shape/constraint to the space.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 372,
   "name": "lua.wetgenes.chipmunk.space.add",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>space:add_handler(handler,id1,id2)\nspace:add_handler(handler,id1)\nspace:add_handler(handler)\n</code></pre>\n<p>Add collision callback handler, for the given collision types.</p>\n<p>The handler table will have other values inserted in it and will be \nused as an arbiter table in callbacks. So <em>always</em> pass in a new one to \nthis function. There does not seem to be a way to free handlers so be \ncareful what you add.</p>\n<p>id1,id2 can be a string in which case it will be converted to a number \nvia the space:type function.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 345,
   "name": "lua.wetgenes.chipmunk.space.add_handler",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>space:body(...)\n</code></pre>\n<p>Create and add this body to the space.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 494,
   "name": "lua.wetgenes.chipmunk.space.body",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>v=space:collision_bias()\nv=space:collision_bias(v)\n</code></pre>\n<p>Get and/or Set the colision bias for this space.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 299,
   "name": "lua.wetgenes.chipmunk.space.collision_bias",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>v=space:collision_persistence()\nv=space:collision_persistence(v)\n</code></pre>\n<p>Get and/or Set the collision persistence for this space.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 311,
   "name": "lua.wetgenes.chipmunk.space.collision_persistence",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>v=space:collision_slop()\nv=space:collision_slop(v)\n</code></pre>\n<p>Get and/or Set the colision slop for this space.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 287,
   "name": "lua.wetgenes.chipmunk.space.collision_slop",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>space:constraint(...)\n</code></pre>\n<p>Create and add this constraint to the space.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 507,
   "name": "lua.wetgenes.chipmunk.space.constraint",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>space:contains(body)\nspace:contains(shape)\nspace:contains(constraint)\n</code></pre>\n<p>Does the space contain this body/shape/constraint, possibly superfluous \nas we can check our own records.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 438,
   "name": "lua.wetgenes.chipmunk.space.contains",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>v=space:current_time_step()\n</code></pre>\n<p>Get the current time step for this space.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 323,
   "name": "lua.wetgenes.chipmunk.space.current_time_step",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>v=space:damping()\nv=space:damping(v)\n</code></pre>\n<p>Get and/or Set the damping for this space.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 251,
   "name": "lua.wetgenes.chipmunk.space.damping",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>vx,vy=space:gravity()\nvx,vy=space:gravity(vx,vy)\n</code></pre>\n<p>Get and/or Set the gravity vector for this space.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 239,
   "name": "lua.wetgenes.chipmunk.space.gravity",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>v=space:idle_speed_threshold()\nv=space:idle_speed_threshold(v)\n</code></pre>\n<p>Get and/or Set the idle speed threshold for this space.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 263,
   "name": "lua.wetgenes.chipmunk.space.idle_speed_threshold",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>v=space:iterations()\nv=space:iterations(v)\n</code></pre>\n<p>Get and/or Set the iterations for this space.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 227,
   "name": "lua.wetgenes.chipmunk.space.iterations",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>v=space:locked()\n</code></pre>\n<p>Get the locked state for this space, if true we cannot change shapes.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 334,
   "name": "lua.wetgenes.chipmunk.space.locked",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>array = space:query_bounding_box(lx,ly,hx,hy,group,categories,mask)\n</code></pre>\n<p>Find the shapes that are within this bounding box (lx,ly) to (hx,hy).\nUse group,categories and mask to filter the results.</p>\n<p>Returns an array of shapes.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 663,
   "name": "lua.wetgenes.chipmunk.space.query_bounding_box",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>array = space:query_point(x,y,d,group,categories,mask)\n</code></pre>\n<p>Find the shapes that are within d distance from the point at x,y.\nUse group,categories and mask to filter the results.</p>\n<p>Returns an array of hit data, with each item containing the following.</p>\n<pre><code>it.shape\t\t-- the shape\nit.point_x\t\t-- the point of contact (x)\nit.point_y\t\t-- the point of contact (y)\nit.distance\t\t-- the distance to the point of contact\nit.gradient_x\t-- the normalised vector to collision (x)\nit.gradient_y\t-- the normalised vector to collision (y)\n</code></pre>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 531,
   "name": "lua.wetgenes.chipmunk.space.query_point",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>item = space:query_point_nearest(x,y,d,group,categories,mask)\n</code></pre>\n<p>Find the nearest shape that is within d distance from the point at x,y.\nUse group,categories and mask to filter the results.</p>\n<p>returns a table with the following info or nil for no hit</p>\n<pre><code>it.shape\t\t-- the shape\nit.point_x\t\t-- the point of contact (x)\nit.point_y\t\t-- the point of contact (y)\nit.distance\t\t-- the distance to the point of contact\nit.gradient_x\t-- the normalised vector to collision (x)\nit.gradient_y\t-- the normalised vector to collision (y)\n</code></pre>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 565,
   "name": "lua.wetgenes.chipmunk.space.query_point_nearest",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>array = space:query_segment(sx,sy,ex,ey,r,group,categories,mask)\n</code></pre>\n<p>Find the shapes that are along this raycast segment, from (sx,sy) to \n(ex,ey) with a radius of r. Use group,categories and mask to filter the \nresults.</p>\n<p>Returns an array of hit data, with each item containing the following.</p>\n<pre><code>it.shape\t\t-- the shape\nit.point_x\t\t-- the point of contact (x)\nit.point_y\t\t-- the point of contact (y)\nit.normal_x\t\t-- the normal at contact (x)\nit.normal_y\t\t-- the normal at contact (y)\nit.alpha\t\t-- how far along the segment the contact happened (0 to 1)\n</code></pre>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 596,
   "name": "lua.wetgenes.chipmunk.space.query_segment",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>it = space:query_segment_first(sx,sy,ex,ey,r,group,categories,mask)\n</code></pre>\n<p>Find the shapes that are along this raycast segment, from (sx,sy) to \n(ex,ey) with a radius of r. Use group,categories and mask to filter the \nresults.</p>\n<p>Returns a table with the following info or nil for no hit</p>\n<pre><code>it.shape\t\t-- the shape\nit.point_x\t\t-- the point of contact (x)\nit.point_y\t\t-- the point of contact (y)\nit.normal_x\t\t-- the normal at contact (x)\nit.normal_y\t\t-- the normal at contact (y)\nit.alpha\t\t-- how far along the segment the contact happened (0 to 1)\n</code></pre>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 631,
   "name": "lua.wetgenes.chipmunk.space.query_segment_first",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>array = space:query_shape(shape)\n</code></pre>\n<p>Find the shapes that intersect with the given shape.</p>\n<p>Returns an array of hit data, with each item containing the following.</p>\n<pre><code>it.shape\t\t-- the shape\nit.normal_x\t\t-- the normal at contact (x)\nit.normal_y\t\t-- the normal at contact (y)\nit.contacts\t\t-- array of contact points -&gt; {ax,ay,bx,by,distance,etc...}\n</code></pre>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 682,
   "name": "lua.wetgenes.chipmunk.space.query_shape",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>space:reindex(shape)\nspace:reindex(body)\nspace:reindex()\n</code></pre>\n<p>Reindex the shapes, either a specific shape, all the shapes in a body \nor just all the static shapes.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 466,
   "name": "lua.wetgenes.chipmunk.space.reindex",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>space:remove(body)\nspace:remove(shape)\nspace:remove(constraint)\n</code></pre>\n<p>Remove a body/shape/constraint from this space.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 405,
   "name": "lua.wetgenes.chipmunk.space.remove",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>v=space:sleep_time_threshold()\nv=space:sleep_time_threshold(v)\n</code></pre>\n<p>Get and/or Set the sleep time threshold for this space.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 275,
   "name": "lua.wetgenes.chipmunk.space.sleep_time_threshold",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>space:step(time)\n</code></pre>\n<p>Run the simulation for time in seconds. EG 1/60.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 520,
   "name": "lua.wetgenes.chipmunk.space.step",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>number = space:type(name)\nname = space:type(number)\n</code></pre>\n<p>Manage collision types, pass in a string and always get a number out. \nThis number is consistent only for this space.</p>\n<p>Alternatively pass in a number and get a string or nil as a result.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 70,
   "name": "lua.wetgenes.chipmunk.space.type",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>local wcsv = require(&quot;wetgenes.csv&quot;)\n</code></pre>\n<p>Load and save csv, prefrably using tab sperators. </p>\n<p>The following need to be escaped with a \\ when used in each column.</p>\n<pre><code>\\n for newline,\n\\t for tab,\n\\r for carriage return,\n\\\\ for backslash.\n</code></pre>\n<p>and when using commas a , must be placed inside a quoted string with a \ndouble &quot;&quot; to escape &quot; within this string.</p>\n<p>This is intended for &quot;small&quot; csv files that fit in memory so does not \nstream or try and do anything clever to reduce memory overheads.</p>\n",
   "count": 8,
   "file": "../lua/wetgenes/csv.lua",
   "line": 9,
   "name": "lua.wetgenes.csv",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/csv.lua"
  },
  {
   "body": "<p>Build csv data into a string from a simple table of lines where each \nline is a table of cells.</p>\n<pre><code>text = wcsv.build(lines)\ntext = wcsv.build(lines,opts)\n</code></pre>\n",
   "count": 1,
   "file": "../lua/wetgenes/csv.lua",
   "line": 155,
   "name": "lua.wetgenes.csv.build",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/csv.lua"
  },
  {
   "body": "<p>Escape special chars within a csv cell.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/csv.lua",
   "line": 33,
   "name": "lua.wetgenes.csv.doesc",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/csv.lua"
  },
  {
   "body": "<p>Wrap a string in quotes and escape any &quot; within that string using csv \nrules.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/csv.lua",
   "line": 63,
   "name": "lua.wetgenes.csv.doquote",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/csv.lua"
  },
  {
   "body": "<p>Use the first line to map all other lines into named keys, an empty \nstring will map to nil. This will return an array of items that is \nsmaller than the array of lines by at least one as we also trim \ntrailing empty objects.</p>\n<pre><code>items = wcsv.map(lines)\nitems = wcsv.map(wcsv.parse(text))\n</code></pre>\n",
   "count": 1,
   "file": "../lua/wetgenes/csv.lua",
   "line": 190,
   "name": "lua.wetgenes.csv.map",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/csv.lua"
  },
  {
   "body": "<p>Parse csv data from a chunk of text. Returns a simple table of lines \nwhere each line is a table of cells. An empty or missing string \nindicates an empty cell. The second return can be ignored or used to \nbuild a csv in a similar format to the one we read.</p>\n<pre><code>lines,opts = wcsv.parse(text)\nlines,opts = wcsv.parse(text,opts)\n</code></pre>\n<p>Opts can be used to control how the parsing is performed pass in a \nseperator value to contol how a line is split.</p>\n<pre><code>lines,opts = wcsv.parse(text,{seperator=&quot;,&quot;})\n</code></pre>\n<p>Note that we also return the seperator we used within the second return \nand will guess the right one using the first line if one is not given.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/csv.lua",
   "line": 88,
   "name": "lua.wetgenes.csv.parse",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/csv.lua"
  },
  {
   "body": "<p>Unescape special chars within a csv cell.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/csv.lua",
   "line": 48,
   "name": "lua.wetgenes.csv.unesc",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/csv.lua"
  },
  {
   "body": "<p>Remove quotes from a strine and unescape any &quot;&quot; within that string. If \nthe string is not in quotes then we return it as is.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/csv.lua",
   "line": 73,
   "name": "lua.wetgenes.csv.unquote",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/csv.lua"
  },
  {
   "body": "<pre><code>deepcompare(a,b)\n</code></pre>\n<p>Returns true if a==b , this iterates and recurses into tables.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/init.lua",
   "line": 206,
   "name": "lua.wetgenes.deepcompare",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/init.lua"
  },
  {
   "body": "<pre><code>deepcopy(tab)\n</code></pre>\n<p>Create and return a new table containing the same data as the input. If any of\nthe table values (not keys) are tables then these are also duplicated,\nrecursively.</p>\n<p>If this is called with a value that is not a table then that value is just\nreturned so it&#39;s safe to call on values without checking them.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/init.lua",
   "line": 182,
   "name": "lua.wetgenes.deepcopy",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/init.lua"
  },
  {
   "body": "<pre><code>... = wetgenes.export(table,...)\n</code></pre>\n<p>Export multiple names from this table as multiple returns, can be \nused to pull functions out of this module and into locals like so</p>\n<pre><code>local export,lookup,deepcopy=require(&quot;wetgenes&quot;):export(&quot;export&quot;,&quot;lookup&quot;,&quot;deepcopy&quot;)\n</code></pre>\n<p>Or copy it into other modules to provide them with the same functionality.</p>\n<pre><code>M.lookup=require(&quot;wetgenes&quot;).lookup\n</code></pre>\n",
   "count": 1,
   "file": "../lua/wetgenes/init.lua",
   "line": 103,
   "name": "lua.wetgenes.export",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/init.lua"
  },
  {
   "body": "",
   "count": 168,
   "name": "lua.wetgenes.gamecake"
  },
  {
   "body": "<p>Deal with FrameBuffers as render targets and textures. Color and Depth \nbuffers need to be allocated and managed.</p>\n<p>So we need to be baked within an oven so we will talk about the return \nfrom the bake function rather than the module function.</p>\n<pre><code>local framebuffers=oven.rebake(&quot;wetgenes.gamecake.framebuffers&quot;)\n\nlocal fbo=framebuffers.create(256,256,0)\t-- a 256x256 texture only\nlocal fbo=framebuffers.create(256,256,-1)\t-- a 256x256 depth only\nlocal fbo=framebuffers.create(256,256,1)\t-- a 256x256 texture and depth\nlocal fbo=framebuffers.create()\t\t\t\t-- 0x0 and we will resize later\n</code></pre>\n",
   "count": 26,
   "file": "../lua/wetgenes/gamecake/framebuffers.lua",
   "line": 10,
   "name": "lua.wetgenes.gamecake.framebuffers",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/framebuffers.lua"
  },
  {
   "body": "<pre><code>local fbo=framebuffers.dirty()\nlocal fbo=framebuffers.dirty(x,y)\nlocal fbo=framebuffers.dirty(x,y,framebuffers.NEED_TEXTURE_AND_DEPTH)\nlocal fbo=framebuffers.dirty(0,0,0,{\n    depth_format={gl.DEPTH_COMPONENT32F,gl.DEPTH_COMPONENT,gl.FLOAT},\n    texture_format={gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE},\n    TEXTURE_MIN_FILTER=gl.LINEAR,\n    TEXTURE_MAG_FILTER=gl.LINEAR,\n    TEXTURE_WRAP_S=gl.CLAMP_TO_EDGE,\n    TEXTURE_WRAP_T=gl.CLAMP_TO_EDGE,\n}) -- note this table will be returned as the fbo\n</code></pre>\n<p>Create a new framebuffer object and optionally provide an inital size \nand depth. The depth can use -1,0,1 or the following verbose flags \nframebuffers.NEED_DEPTH,framebuffers.NEED_TEXTURE or \nframebuffers.NEED_TEXTURE_AND_DEPTH to request a depth buffer(1,-1) or not(0). </p>\n<p>Finally you can pass in a table to be returned as the fbo that contains \ndefaults or set defaults in the fbo that is returned.</p>\n<pre><code>fbo.depth_format={gl.DEPTH_COMPONENT32F,gl.DEPTH_COMPONENT,gl.FLOAT}\n</code></pre>\n<p>Can be used to control exactly how a depth buffer is allocated with \ngl.TexImage2D when you care about that sort of thing, IE hardware \nissues.</p>\n<pre><code>fbo.texture_format={gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE}\n</code></pre>\n<p>Can be used to control exactly how a texture buffer is allocated with \ngl.TexImage2D when you care about that sort of thing, IE hardware \nissues.</p>\n<pre><code>fbo.TEXTURE_MIN_FILTER=gl.LINEAR\nfbo.TEXTURE_MAG_FILTER=gl.LINEAR\nfbo.TEXTURE_WRAP_S=gl.CLAMP_TO_EDGE\nfbo.TEXTURE_WRAP_T=gl.CLAMP_TO_EDGE\n</code></pre>\n<p>These can be used to control default TexParameters in the fbo.</p>\n<pre><code>fbo.no_uptwopow=true\n</code></pre>\n<p>By deafult we will use power of 2 sizes for the fbo that fit the \nrequested size. This disables that and doing so will of course cause \nproblems with some hardware. Generally if you avoid mipmaps it probably \nwont be a problem.</p>\n<p>See #lua.wetgenes.gamecake.framebuffers.fbo for all the functions you \ncan call on the fbo returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/framebuffers.lua",
   "line": 78,
   "name": "lua.wetgenes.gamecake.framebuffers.create",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/framebuffers.lua"
  },
  {
   "body": "<pre><code>framebuffers.dirty()\n</code></pre>\n<p>Mark all framebuffer objects as dirty by setting fbo.dirty to be true. We do not \ndo anything with this flag but it is used in external code and this is \na useful helper function to set the flag.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/framebuffers.lua",
   "line": 56,
   "name": "lua.wetgenes.gamecake.framebuffers.dirty",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/framebuffers.lua"
  },
  {
   "body": "",
   "count": 21,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo"
  },
  {
   "body": "<pre><code>fbo:bind_depth()\n</code></pre>\n<p>BindTexture the depth texture part of this fbo.</p>\n<p>If there is no texture we will bind 0.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/framebuffers.lua",
   "line": 299,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.bind_depth",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/framebuffers.lua"
  },
  {
   "body": "<pre><code>fbo:bind_depth_snapshot()\n</code></pre>\n<p>BindTexture the depth snapshot texture part of this fbo.</p>\n<p>If there is no snapshot texture we will bind 0.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/framebuffers.lua",
   "line": 316,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.bind_depth_snapshot",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/framebuffers.lua"
  },
  {
   "body": "<pre><code>fbo:bind_depth()\n</code></pre>\n<p>BindFramebuffer the framebuffer of this fbo.</p>\n<p>If there is no framebuffer we will bind 0.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/framebuffers.lua",
   "line": 333,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.bind_frame",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/framebuffers.lua"
  },
  {
   "body": "<pre><code>fbo:bind_texture()\n</code></pre>\n<p>BindTexture the rgba texture part of this fbo.</p>\n<p>If there is no texture we will bind 0.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/framebuffers.lua",
   "line": 265,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.bind_texture",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/framebuffers.lua"
  },
  {
   "body": "<pre><code>fbo:bind_texture_snapshot()\n</code></pre>\n<p>BindTexture the rgba snapshot texture part of this fbo.</p>\n<p>If there is no snapshot texture we will bind 0.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/framebuffers.lua",
   "line": 282,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.bind_texture_snapshot",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/framebuffers.lua"
  },
  {
   "body": "<pre><code>fbo:check()\n</code></pre>\n<p>Check and allocatie if missing and needed (eg depth texture may not be \nneeded) all our openGL buffers.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/framebuffers.lua",
   "line": 350,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.check",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/framebuffers.lua"
  },
  {
   "body": "<pre><code>fbo:clean()\n</code></pre>\n<p>Free all the opengl buffers.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/framebuffers.lua",
   "line": 248,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.clean",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/framebuffers.lua"
  },
  {
   "body": "<pre><code>fbo:download()\nfbo:download(w,h,x,y)\n</code></pre>\n<p>Read back color data from a framebuffer and return it in an RGBA \nPREMULT grd object (which is probably what it is).</p>\n<p>If a width,height is given then we will read the given pixels only from \nthe x,y location.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/framebuffers.lua",
   "line": 607,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.download",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/framebuffers.lua"
  },
  {
   "body": "<pre><code>fbo:free_depth()\n</code></pre>\n<p>Free the depth texture only, is safe to call if there is no depth \nbuffer.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/framebuffers.lua",
   "line": 184,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.free_depth",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/framebuffers.lua"
  },
  {
   "body": "<pre><code>fbo:free_frame()\n</code></pre>\n<p>Free the frame buffer only, is safe to call if there is no frame \nbuffer.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/framebuffers.lua",
   "line": 233,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.free_frame",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/framebuffers.lua"
  },
  {
   "body": "<pre><code>fbo:free_snapshot()\n</code></pre>\n<p>Free the snapshot buffers, fbo.texture_snapshot and fbo.depth_snapshot \nif they exist.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/framebuffers.lua",
   "line": 214,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.free_snapshot",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/framebuffers.lua"
  },
  {
   "body": "<pre><code>fbo:free_texture()\n</code></pre>\n<p>Free the rgba texture only, is safe to call if there is no rgba \nbuffer.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/framebuffers.lua",
   "line": 199,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.free_texture",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/framebuffers.lua"
  },
  {
   "body": "<pre><code>fbo:mipmap()\n</code></pre>\n<p>Build mipmaps for all existing texture buffers.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/framebuffers.lua",
   "line": 552,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.mipmap",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/framebuffers.lua"
  },
  {
   "body": "<pre><code>fbo:mipmap_depth()\n</code></pre>\n<p>Build mipmaps for our depth buffer if it exists and set \nTEXTURE_MIN_FILTER to LINEAR_MIPMAP_LINEAR so it will be used.</p>\n<p>It is possible this may fail (hardware issues) and the \nTEXTURE_MIN_FILTER be reset to gl.NEAREST along with a flag to stop us \neven trying in the future,</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/framebuffers.lua",
   "line": 580,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.mipmap_depth",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/framebuffers.lua"
  },
  {
   "body": "<pre><code>fbo:mipmap_texture()\n</code></pre>\n<p>Build mipmaps for our texture buffer if it exists and set \nTEXTURE_MIN_FILTER to LINEAR_MIPMAP_LINEAR so it will be used.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/framebuffers.lua",
   "line": 564,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.mipmap_texture",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/framebuffers.lua"
  },
  {
   "body": "<pre><code>fbo:pingpong(fbout,shadername,callback)\nframebuffers.pingpong({fbin1,fbin2},fbout,shadername,callback)\n</code></pre>\n<p>Render from one or more fbos into another using a fullscreen shader.</p>\n<p>Sometime you need to repeatedly copy a texture back and though applying \na shader, this is the function for you.</p>\n<p>The textures will be bound to tex1,tex2,tex3,etc and the uvs supplied \nin a_texcoord with a_vertex being set to screen coords so can be used \nas is.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/framebuffers.lua",
   "line": 701,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.pingpong",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/framebuffers.lua"
  },
  {
   "body": "<pre><code>fbo:render_start()\n</code></pre>\n<br/>\n<br/>\n\n<p>Start rendering into this fbo.</p>\n<p>Push old matrix and set the matrix mode to MODELVIEW</p>\n<p>Set fbo.view and reset the gl state.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/framebuffers.lua",
   "line": 648,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.render_start",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/framebuffers.lua"
  },
  {
   "body": "<pre><code>fbo:render_stop()\n</code></pre>\n<p>Stop rendering into this fbo and restore the last fbo so these calls \ncan be nested.</p>\n<p>Restore the old view and old gl state.</p>\n<p>Pop old matrix and set the matrix mode to MODELVIEW</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/framebuffers.lua",
   "line": 674,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.render_stop",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/framebuffers.lua"
  },
  {
   "body": "<pre><code>fbo:resize(w,h,d)\n</code></pre>\n<p>Change the size of our buffers, which probably means free and then\nreallocate them.</p>\n<p>The w,h,d use the same rules as framebuffer.create</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/framebuffers.lua",
   "line": 404,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.resize",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/framebuffers.lua"
  },
  {
   "body": "<pre><code>fbo:snapshot()\n</code></pre>\n<p>Take a current snapshot copy of the texture and depth if they exist, \nstore them in fbo.texture_snapshot and fbo.depth_snapshot for later \nbinding.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/framebuffers.lua",
   "line": 488,
   "name": "lua.wetgenes.gamecake.framebuffers.fbo.snapshot",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/framebuffers.lua"
  },
  {
   "body": "<pre><code>framebuffers.start()\n</code></pre>\n<p>Called as part of the android life cycle, since we auto reallocate this \ndoes not actually have to do anything. But may do a forced resize in \nthe future if that turns out to be more hardware compatible.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/framebuffers.lua",
   "line": 154,
   "name": "lua.wetgenes.gamecake.framebuffers.start",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/framebuffers.lua"
  },
  {
   "body": "<pre><code>framebuffers.stop()\n</code></pre>\n<p>Called as part of the android life cycle, we go through and call \nfbo.clean on each fbo to free the opengl resources.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/framebuffers.lua",
   "line": 169,
   "name": "lua.wetgenes.gamecake.framebuffers.stop",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/framebuffers.lua"
  },
  {
   "body": "",
   "count": 43,
   "name": "lua.wetgenes.gamecake.fun"
  },
  {
   "body": "",
   "count": 19,
   "name": "lua.wetgenes.gamecake.fun.chatdown"
  },
  {
   "body": "",
   "count": 6,
   "name": "lua.wetgenes.gamecake.fun.chatdown.chat"
  },
  {
   "body": "<pre><code>tag_value = chat:get_tag(tag_name)\n</code></pre>\n<p>The same as chats:get_tag but the subject of this chat is the \ndefault root.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/fun/chatdown.lua",
   "line": 278,
   "name": "lua.wetgenes.gamecake.fun.chatdown.chat.get_tag",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/fun/chatdown.lua"
  },
  {
   "body": "<pre><code>output = chat:replace_tags(input)\n</code></pre>\n<p>The same as chats:replace_tags but the subject of this chat is the \ndefault root.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/fun/chatdown.lua",
   "line": 306,
   "name": "lua.wetgenes.gamecake.fun.chatdown.chat.replace_tags",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/fun/chatdown.lua"
  },
  {
   "body": "<pre><code>tag_value = chat:set_tag(tag_name,tag_value)\n</code></pre>\n<p>The same as chats:set_tag but the subject of this chat is the \ndefault root.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/fun/chatdown.lua",
   "line": 292,
   "name": "lua.wetgenes.gamecake.fun.chatdown.chat.set_tag",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/fun/chatdown.lua"
  },
  {
   "body": "<pre><code>chat:set_tags(tags)\n</code></pre>\n<p>Set all the values in the given table of {tag_name=tag_value} pairs.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/fun/chatdown.lua",
   "line": 320,
   "name": "lua.wetgenes.gamecake.fun.chatdown.chat.set_tags",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/fun/chatdown.lua"
  },
  {
   "body": "<pre><code>chat:set_topic(topic_name)\n</code></pre>\n<p>Set the current topic for this chat object, information about this \ntopic and its gotos are built from and stored in this chat object.</p>\n<pre><code>chat.topic_name\n</code></pre>\n<p>Will be set to the given topic name.</p>\n<p>We merge all gotos found in this topic and all topic parents by \niterating over the dotnames. We only use add each topic once and each \ntopic may have a bit of logic that decides if it should be displayed.</p>\n<pre><code>&lt;topic_name?logic_test\n</code></pre>\n<p>So this would goto the topic_name if the logic_test passes. The logic \ntest is written simmilar to a url query after the question mark comes a \nnumber of tests that are then &amp; or | together in left to right order \n(no operator precedence).</p>\n<pre><code>&lt;topic_name?count&lt;10&amp;seen==false\n</code></pre>\n<p>So this would display the goto option if count is less than 10 and seen \nis set to false. These variables we are testing are tag_names and \ndefault to the current subject chat but could reference other subjects \nby explicitly including a root.</p>\n<p>Available logic tests are</p>\n<pre><code>name==value\nname=value\n</code></pre>\n<p>True if the tag is set to this value.</p>\n<pre><code>name!=value\n</code></pre>\n<p>True if the tag is not set to this value.</p>\n<pre><code>name&lt;value\n</code></pre>\n<p>True if the tag is less than this value (numeric test).</p>\n<pre><code>name&gt;value\n</code></pre>\n<p>True if the tag is more than this value (numeric test).</p>\n<pre><code>name&lt;=value\n</code></pre>\n<p>True if the tag is less than or equal to this value (numeric test).</p>\n<pre><code>name&gt;=value\n</code></pre>\n<p>True if the tag is more than or equal to  this value (numeric test).</p>\n<p>All of these tests can be preceded by a ! to negate them so</p>\n<pre><code>name!=vale\n!name==value\n</code></pre>\n<p>Are both a test for inequality.</p>\n<p>Multiple tests can be joined together by &amp; (and) or | (or) this logic \nwill be applied to a running total moving from left to right as the \nvalues are evaluated with the final value deciding if this goto will be \ndisplayed.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/fun/chatdown.lua",
   "line": 335,
   "name": "lua.wetgenes.gamecake.fun.chatdown.chat.set_topic",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/fun/chatdown.lua"
  },
  {
   "body": "",
   "count": 7,
   "name": "lua.wetgenes.gamecake.fun.chatdown.chats"
  },
  {
   "body": "<pre><code>chats.changes(chat,change,...)\n\nchats.changes(chat,&quot;subject&quot;)\nchats.changes(chat,&quot;topic&quot;,topic)\nchats.changes(chat,&quot;goto&quot;,goto)\nchats.changes(chat,&quot;tag&quot;,tag_name,tag_value)\n</code></pre>\n<p>This is a callback hook, replace to be notified of changes and possibly \nalter then, by default we print debuging information. Replace this \nfunction with an empty function to prevent this eg</p>\n<pre><code>chats.changes=function()end\n</code></pre>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/fun/chatdown.lua",
   "line": 671,
   "name": "lua.wetgenes.gamecake.fun.chatdown.chats.changes",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/fun/chatdown.lua"
  },
  {
   "body": "<pre><code>chat = chats:get_subject(subject_name)\nchat = chats:get_subject()\n</code></pre>\n<p>Get the chat for the given subject or the chat for the last subject \nselected with set_subject if no subject_name is given.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/fun/chatdown.lua",
   "line": 563,
   "name": "lua.wetgenes.gamecake.fun.chatdown.chats.get_subject",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/fun/chatdown.lua"
  },
  {
   "body": "<pre><code>tag_value = chats:get_tag(tag_name,subject_name)\n</code></pre>\n<p>Get the tag_value for the given tag_name which can either be \n&quot;tag_root/tag_name&quot; or &quot;tag_name&quot;. The subject_name is the default root \nto use if no tag_root is given in the tag_name.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/fun/chatdown.lua",
   "line": 578,
   "name": "lua.wetgenes.gamecake.fun.chatdown.chats.get_tag",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/fun/chatdown.lua"
  },
  {
   "body": "<pre><code>output = chats:replace_tags(input,subject_name)\n</code></pre>\n<p>Tags in the input text can be wrapped in {tag_name} and will be \nreplaced with the appropriate tag_value. This is done recursively so \ntag_values can contain references to other tags. If a tag does not \nexist then it will not expand and {tag_name} will remain in the output \ntext.</p>\n<p>Again if any tag name does not contain an explicit root then \nsubject_name will be used as the default chat subject.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/fun/chatdown.lua",
   "line": 639,
   "name": "lua.wetgenes.gamecake.fun.chatdown.chats.replace_tags",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/fun/chatdown.lua"
  },
  {
   "body": "<pre><code>chat = chats:set_subject(subject_name)\n</code></pre>\n<p>Set the current subject for this chats object, this subject becomes the \nchat that you will get if you call get_subject with no arguments.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/fun/chatdown.lua",
   "line": 546,
   "name": "lua.wetgenes.gamecake.fun.chatdown.chats.set_subject",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/fun/chatdown.lua"
  },
  {
   "body": "<pre><code>tag_value = chats:set_tag(tag_name,tag_value,subject_name)\n</code></pre>\n<p>Alter the value of the given tag_name. If the value string begins with \na &quot;+&quot; or a &quot;-&quot; Then the values will be treated as numbers and added or \nsubtracted from the current value. This allows for simple incremental \nflag values.</p>\n<p>Again if the tag name does not contain an explicit  root then \nsubject_name will be used as the default chat subject.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/fun/chatdown.lua",
   "line": 596,
   "name": "lua.wetgenes.gamecake.fun.chatdown.chats.set_tag",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/fun/chatdown.lua"
  },
  {
   "body": "<pre><code>for part_name in chatdown.dotnames(full_name) do\n    print(part_name)\nend\n</code></pre>\n<p>Iterate all dotnames so if given &quot;aa.bb.cc&quot; we would iterate through \n&quot;aa.bb.cc&quot; , &quot;aa.bb&quot; and &quot;aa&quot;. This is used to inherit data using just \na naming convention.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/fun/chatdown.lua",
   "line": 255,
   "name": "lua.wetgenes.gamecake.fun.chatdown.dotnames",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/fun/chatdown.lua"
  },
  {
   "body": "<pre><code>rawsubjects = chatdown.parse(text)\n</code></pre>\n<p>Parse text from flat text chatdown format into heirachical chat data, \nwhich we refer to as rawsubjects, something that can be output easily \nas json.</p>\n<p>This gives us a readonly rawsubjects structure that can be used to control \nwhat text is displayed during a chat session.</p>\n<p>This is intended to be descriptive and logic less, any real logic \nshould be added using a real language that operates on this rawsubjects and \ngets triggered by the names used. EG, filter out gotos unless certain \ncomplicated conditions are met or change topics to redirect to an \nalternative.</p>\n<p>A self documented example of chatdown formated text can be found in \nlua.wetgenes.gamecake.fun.chatdown.text</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/fun/chatdown.lua",
   "line": 19,
   "name": "lua.wetgenes.gamecake.fun.chatdown.parse",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/fun/chatdown.lua"
  },
  {
   "body": "<pre><code>chats = chatdown.setup_chats(chat_text,changes)\n</code></pre>\n<p>parse and initialise state data for every subjects chunk creating a \nglobal chats with a chat object for each subject.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/fun/chatdown.lua",
   "line": 700,
   "name": "lua.wetgenes.gamecake.fun.chatdown.setup",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/fun/chatdown.lua"
  },
  {
   "body": "<pre><code>chat = chatdown.setup_chat(chats,subject_name)\n</code></pre>\n<p>Setup the initial chat state for a subject. This is called \nautomatically by chatdown.setup and probably should not be used \nelsewhere.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/fun/chatdown.lua",
   "line": 508,
   "name": "lua.wetgenes.gamecake.fun.chatdown.setup_chat",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/fun/chatdown.lua"
  },
  {
   "body": "<p>Here is some example chatdown formatted text full of useful \ninformation, it it is intended to be a self documented example.</p>\n<pre><code>\n- This is a single line comment\n-- This is the start of a multi-line comment\n\nAll lines are now comment lines until we see a line that begins with a \ncontrol character leading white space is ignored. If for some reason \nyou need to start a text line with a special character then it can be \nescaped by preceding it with a #\n\nWhat follows is a list of these characters and a brief description \nabout the parser state they switch to.\n\n    1. - (text to ignore)\n    \n        A single line comment that does not change parser state and \n        only this line will be ignored so it can be inserted inside \n        other chunks without losing our place.\n\n    2. -- (text to ignore)\n    \n        Begin a comment chunk, this line and all lines that follow this \n        line will be considered comments and ignored until we switch to \n        a new parser state.\n\n    3. #subject_name\n\n        Begin a new subject chunk, all future topic,goto or tag chunks will \n        belong to this subject.\n        \n        The text that follows this until the next chunk is the long \n        description intended for when you examine the character.\n        \n        Although it makes sense for a subject chunk to belong to one \n        character it could also a group conversation with tags being \n        set to change the current talker as the conversation flows.\n        \n        subject names have simple cascading inheritance according to their \n        name with each level separated by a dot. A chunk named a.b.c \n        will inherit data from any chunks defined for a.b and a in that \n        order of priority.\n\n    4. &gt;topic_name\n    \n        Begin a topic chunk, all future goto or tag chunks will belong \n        to this topic, the lines that follow are how the character \n        responds when questioned about this topic followed by one or \n        more gotos as possible responses that will lead you onto \n        another topic.\n        \n        Topics can be broken into parts, to create a pause, by using an \n        unnamed goto followed by an unnamed topic which will both \n        automatically be given the same generated name and hence linked \n        together.\n        \n    5. &lt;goto_topic_name\n    \n        Begin a goto chunk, all future tag chunks will belong to this \n        goto, this is probably best thought of as a question that will \n        get a reply from the character. This is a choice made by the \n        player that causes a logical jump to another topic.\n        \n        Essentially this means GOTO another topic and there can be \n        multiple GOTO options associated with each topic which the \n        reader is expected to choose between.\n        \n    6. =set_tag_name to this value\n    \n        If there is any text on the rest of this line then it will be \n        assigned to the tag without changing the current parse state so \n        it can be used in the middle of another chunk without losing \n        our place.\n        \n        This single line tag assignment is usually all you need. \n        Alternatively, if there is no text on the rest of this first \n        line, only white space, then the parse state will change and \n        text on all following lines will be assigned to the named tag.\n        \n        This assignment can happen at various places, for instance if \n        it is part of the subject then it will be the starting \n        value for a tag but if it is linked to a topic or goto then the \n        value will be a change as the conversation happens. In all \n        cases the tags are set in a single batch as the state changes \n        so the placement and order makes no difference.\n        \n        Tags can be used inside text chunks or even GOTO labels by \n        tightly wrapping with {} eg {name} would be replaced with the \n        value of name. Tags from other subjects can be referenced by \n        prefixing the tag name with the subject name followed by a forward \n        slash like so {subject/tag}\n                \n\nThe hierarchy of these chunks can be expressed by indentation as all \nwhite space is ignored and combined into a single space. Each SUBJECT will \nhave multiple TOPICs associated with it and each TOPIC will have \nmultiple GOTOs as options to jump between TOPICs. TAGs can be \nassociated with any of these 3 levels and will be evaluated as the \nconversation flows through these points.\n\nSo the chunk hierarchy expressed using indentation to denote children \nof.\n\n    SUBJECT\n        TAG\n        GOTO\n            TAG\n        TOPIC\n            TAG\n            GOTO\n                TAG\n\nThe GOTO chunks in the root SUBJECT chunk are used as prototypes so if a \nGOTO is used in multiple topics its text can be placed within a GOTO \ninside the main SUBJECT chunk rather than repeated constantly. This will \nthen be inherited by a GOTO with no text. An alternative to this \nshorthand is to assign an oft-used piece of text to a tag and reference \nthat in each topic instead.\n\nSUBJECTs and TOPICs also have simple inheritance based on their names this \nenables the building of a prototype which is later expanded. Each \ninheritance level is separated by a dot so aa.bb.cc will inherit from \naa.bb and aa with the data in the longer names having precedence. This \ninheritance is additive only so for instance a TAG can not be unset and \nwould have to be changed to another value by aa.bb.cc if it existed in \naa.bb or aa.\n\nIn practise this means\n&lt;br/&gt;\n&lt;br/&gt;\n</code></pre>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/fun/chatdown.lua",
   "line": 731,
   "name": "lua.wetgenes.gamecake.fun.chatdown.text",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/fun/chatdown.lua"
  },
  {
   "body": "",
   "count": 23,
   "name": "lua.wetgenes.gamecake.fun.yarn"
  },
  {
   "body": "<pre><code>cells = require(&quot;wetgenes.gamecake.fun.yarn.cells&quot;).create(items)\n</code></pre>\n<p>This module contains only one function which can be used to create an \ncells instance and the rest of this documentation concerns the return \nfrom this create function, not the module itself.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/fun/yarn/cells.lua",
   "line": 6,
   "name": "lua.wetgenes.gamecake.fun.yarn.cells",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/fun/yarn/cells.lua"
  },
  {
   "body": "<pre><code>items = require(&quot;wetgenes.gamecake.fun.yarn.items&quot;).create()\n</code></pre>\n<p>This module contains only one function which can be used to create an \nitems instance and the rest of this documentation concerns the return \nfrom this create function, not the module itself.</p>\n",
   "count": 14,
   "file": "../lua/wetgenes/gamecake/fun/yarn/items.lua",
   "line": 6,
   "name": "lua.wetgenes.gamecake.fun.yarn.items",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/fun/yarn/items.lua"
  },
  {
   "body": "<pre><code>items.cells\n</code></pre>\n<p>We automatically create a cells object bound to this set of items, this \ncells object should be used to define all your custom game cells.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/fun/yarn/items.lua",
   "line": 259,
   "name": "lua.wetgenes.gamecake.fun.yarn.items.cells",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/fun/yarn/items.lua"
  },
  {
   "body": "<pre><code>item = items.create()\nitem = items.create({})\nitem = items.create({},metatable)\n</code></pre>\n<p>Create a single item, optionally pass in a base item table that will be \nturned into a proper item (using setmetatable to add methods). This \nshould always be a new table and will also be returned. If no \nmetatable is provided then items.metatable will be used.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/fun/yarn/items.lua",
   "line": 73,
   "name": "lua.wetgenes.gamecake.fun.yarn.items.create",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/fun/yarn/items.lua"
  },
  {
   "body": "<pre><code>items.pages\n</code></pre>\n<p>We automatically create a pages object bound to this set of items, this \npages object should be used to define all your custom game pages.</p>\n<p>This can be considered a level and you may need multiple pages which \nare moved in and out of items.pages</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/fun/yarn/items.lua",
   "line": 271,
   "name": "lua.wetgenes.gamecake.fun.yarn.items.create_pages",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/fun/yarn/items.lua"
  },
  {
   "body": "<pre><code>item = items.destroy(item)\nitem = item:destroy()\n</code></pre>\n<p>Destroy an item, remove it from the master table dump so it will be \ngarbage collected.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/fun/yarn/items.lua",
   "line": 101,
   "name": "lua.wetgenes.gamecake.fun.yarn.items.destroy",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/fun/yarn/items.lua"
  },
  {
   "body": "<pre><code>child_item = item:find(keyname)\n</code></pre>\n<p>Get the first child item that has a [keyname] value in it. All child \nitems are searched, but this is not recursive.</p>\n<p>returns nil if no child item is found.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/fun/yarn/items.lua",
   "line": 215,
   "name": "lua.wetgenes.gamecake.fun.yarn.items.find",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/fun/yarn/items.lua"
  },
  {
   "body": "<pre><code>big_item = item:get_big()\n</code></pre>\n<p>Get the first big item from this container, returns nil if we do not \ncontain a big item.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/fun/yarn/items.lua",
   "line": 199,
   "name": "lua.wetgenes.gamecake.fun.yarn.items.get_big",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/fun/yarn/items.lua"
  },
  {
   "body": "<pre><code>item = item:insert(parent)\n</code></pre>\n<p>Insert this item into the given parent. Item will automatically be \nremoved from its current parent. If the item is_big then it will be \ninserted into the front of the list otherwise it will go at the end. \nThis is to help with finding big items, since there should only be one \nper container we only have to check the first child.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/fun/yarn/items.lua",
   "line": 173,
   "name": "lua.wetgenes.gamecake.fun.yarn.items.insert",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/fun/yarn/items.lua"
  },
  {
   "body": "<pre><code>for name,tail in items.iterate_dotnames(names) do ... end\n</code></pre>\n<p>Iterator over a names string, start with the full string and cut off \nthe tail on each iteration. This is used for simple inheritance merging \nof named prefabs and rules or anything else.</p>\n<p>Second return value is the tail of the string or the string if not \ntail.</p>\n<p>for example the following input string</p>\n<pre><code>&quot;one.two.three.four&quot;\n</code></pre>\n<p>would get you the following iteration loops, one line per loop</p>\n<pre><code>&quot;one.two.three.four&quot; , &quot;four&quot;\n&quot;one.two.three&quot;      , &quot;three&quot;\n&quot;one.two&quot;            , &quot;two&quot;\n&quot;one&quot;                , &quot;one&quot;\n</code></pre>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/fun/yarn/items.lua",
   "line": 24,
   "name": "lua.wetgenes.gamecake.fun.yarn.items.iterate_dotnames",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/fun/yarn/items.lua"
  },
  {
   "body": "<pre><code>for it in item:iterate_parents() do\n    ...\nend\n</code></pre>\n<p>Iterate over the parent chain going upwards. The first iteration is the \nparent of this object and so on.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/fun/yarn/items.lua",
   "line": 128,
   "name": "lua.wetgenes.gamecake.fun.yarn.items.iterate_parents",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/fun/yarn/items.lua"
  },
  {
   "body": "<pre><code>items.metatable\n</code></pre>\n<p>Expose the item metatable so more methods can easily be added.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/fun/yarn/items.lua",
   "line": 59,
   "name": "lua.wetgenes.gamecake.fun.yarn.items.metatable",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/fun/yarn/items.lua"
  },
  {
   "body": "<pre><code>items.prefabs\n</code></pre>\n<p>We automatically create a prefabs object bound to this set of items, this \nprefabs object should be used to define all your custom game prefabs.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/fun/yarn/items.lua",
   "line": 247,
   "name": "lua.wetgenes.gamecake.fun.yarn.items.prefabs",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/fun/yarn/items.lua"
  },
  {
   "body": "<pre><code>item = item:remove()\n</code></pre>\n<p>Remove this item from its parents table or do nothing if the item does \nnot have a parent.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/fun/yarn/items.lua",
   "line": 146,
   "name": "lua.wetgenes.gamecake.fun.yarn.items.remove",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/fun/yarn/items.lua"
  },
  {
   "body": "<pre><code>items.rules\n</code></pre>\n<p>We automatically create a rules object bound to this set of items, this \nrules object should be used to define all your custom game rules.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/fun/yarn/items.lua",
   "line": 235,
   "name": "lua.wetgenes.gamecake.fun.yarn.items.rules",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/fun/yarn/items.lua"
  },
  {
   "body": "<pre><code>pages = require(&quot;wetgenes.gamecake.fun.yarn.pages&quot;).create(items)\n</code></pre>\n<p>This module contains only one function which can be used to create an \npages instance and the rest of this documentation concerns the return \nfrom this create function, not the module itself.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/fun/yarn/pages.lua",
   "line": 8,
   "name": "lua.wetgenes.gamecake.fun.yarn.pages",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/fun/yarn/pages.lua"
  },
  {
   "body": "<pre><code>prefabs = require(&quot;wetgenes.gamecake.fun.yarn.prefabs&quot;).create(items)\n</code></pre>\n<p>This module contains only one function which can be used to create an \nprefabs instance and the rest of this documentation concerns the return \nfrom this create function, not the module itself.</p>\n",
   "count": 2,
   "file": "../lua/wetgenes/gamecake/fun/yarn/prefabs.lua",
   "line": 7,
   "name": "lua.wetgenes.gamecake.fun.yarn.prefabs",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/fun/yarn/prefabs.lua"
  },
  {
   "body": "<pre><code>prefab = prefabs:get(name)\nprefab = prefabs:get(name,prefab)\n</code></pre>\n<p>Build and return a table with all prefab values inherited from all its \nparents. Optionally pass in a prefab to override values and also have \nit returned.</p>\n<p>If name doesn&#39;t exist at any level and a table is not passed in then nil \nwill be returned.</p>\n<p>Names are hierarchical, separated by dots, see items.iterate_dotnames</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/fun/yarn/prefabs.lua",
   "line": 44,
   "name": "lua.wetgenes.gamecake.fun.yarn.prefabs.set",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/fun/yarn/prefabs.lua"
  },
  {
   "body": "<pre><code>rules = require(&quot;wetgenes.gamecake.fun.yarn.rules&quot;).create(items)\n</code></pre>\n<p>This module contains only one function which can be used to create an \nrules instance and the rest of this documentation concerns the return \nfrom this create function, not the module itself.</p>\n",
   "count": 4,
   "file": "../lua/wetgenes/gamecake/fun/yarn/rules.lua",
   "line": 6,
   "name": "lua.wetgenes.gamecake.fun.yarn.rules",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/fun/yarn/rules.lua"
  },
  {
   "body": "<pre><code>item = rules.apply(item,method,...)\n</code></pre>\n<p>item.rules must be a list of rule names and the order in which they should \nbe applied to this item.</p>\n<p>Call the given method in each rule with the item and the remaining arguments.</p>\n<p>If the method returns a value then no more methods will be applied even \nif more rules are listed.</p>\n<p>We always return the passed in item so that calls can be chained.</p>\n<pre><code>item = item:apply(method,...)\n</code></pre>\n<p>This function is inserted into the items.metatable so it can be called \ndirectly from an item.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/fun/yarn/rules.lua",
   "line": 62,
   "name": "lua.wetgenes.gamecake.fun.yarn.rules.apply",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/fun/yarn/rules.lua"
  },
  {
   "body": "<pre><code>yes = rules.can(item,method)\n</code></pre>\n<p>Returns true if any rule in this item has the given method.</p>\n<pre><code>yes = item:can(method)\n</code></pre>\n<p>This function is inserted into the items.metatable so it can be called \ndirectly from an item.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/fun/yarn/rules.lua",
   "line": 96,
   "name": "lua.wetgenes.gamecake.fun.yarn.rules.can",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/fun/yarn/rules.lua"
  },
  {
   "body": "<pre><code>rule = rules.set(rule)\n</code></pre>\n<p>Set this base rule into the name space using rule.name which must \nbe a string.</p>\n<p>Multiple rules can be applied to an item and each rule will be applied \nin the order listed.</p>\n<p>A rule is a table of named functions that can be applied to an item.</p>\n<pre><code>rule.setup(item)\n</code></pre>\n<p>Must setup the item so that it is safe to call the other rules on it.</p>\n<pre><code>rule.clean(item)\n</code></pre>\n<p>Should cleanup anything that needs cleaning.</p>\n<pre><code>rule.tick(item)\n</code></pre>\n<p>Should perform a single time tick update on the item.\n<br/>\n<br/></p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/fun/yarn/rules.lua",
   "line": 28,
   "name": "lua.wetgenes.gamecake.fun.yarn.rules.set",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/fun/yarn/rules.lua"
  },
  {
   "body": "<pre><code>oven=require(&quot;wetgenes.gamecake.oven&quot;).bake(opts)\n</code></pre>\n<p>The oven module must be baked so only exposes a bake function.</p>\n<p>All the other functions are returned from within the bake function.</p>\n<p>possible ENV settings</p>\n<pre><code>gamecake_tongue=english\ngamecake_flavour=sdl\n</code></pre>\n",
   "count": 2,
   "file": "../lua/wetgenes/gamecake/oven.lua",
   "line": 38,
   "name": "lua.wetgenes.gamecake.oven",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/oven.lua"
  },
  {
   "body": "<pre><code>oven=wetgenes.gamecake.oven.bake(opts)\n</code></pre>\n<p>Bake creates an instance of a lua module bound to a state. Here we\nare creating the main state that other modules will then bind to.</p>\n<p>We call each state an OVEN to fit into the gamecake naming scheme\nthen we bake a module in this oven to bind them to the common state.</p>\n<p>Think of it as a sub version of require, so require gets the global\npointer for a module and bake is used to get the a module bound to\nan oven.</p>\n<p>By using this bound state we reduce the verbosity of connecting\nmodules and sharing state between them.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/oven.lua",
   "line": 160,
   "name": "lua.wetgenes.gamecake.oven.bake",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/oven.lua"
  },
  {
   "body": "<pre><code>oven=require(&quot;wetgenes.gamecake.toaster&quot;).bake(opts)\n</code></pre>\n<p>A cut down oven without opengl or even file access intended to be used \nin a sub process or task.</p>\n",
   "count": 3,
   "file": "../lua/wetgenes/gamecake/toaster.lua",
   "line": 14,
   "name": "lua.wetgenes.gamecake.toaster",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/toaster.lua"
  },
  {
   "body": "<pre><code>oven=wetgenes.gamecake.toaster.bake(opts)\n</code></pre>\n<p>Bake creates an instance of a lua module bound to an oven state. Here \nwe are creating the main state that other modules will then bind to.</p>\n<p>Modules are then bound together using rebake...</p>\n<pre><code>b=oven.rebake(nameb)\nc=oven.rebake(namec)\n</code></pre>\n<p>All of these will be connected by the same oven and circular \ndependencies should work with the caveat that just because you have the \ntable for a baked module does not mean that it has all been filled in \nyet.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/toaster.lua",
   "line": 81,
   "name": "lua.wetgenes.gamecake.toaster.bake",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/toaster.lua"
  },
  {
   "body": "<pre><code>ticks=require(&quot;wetgenes.gamecake.toaster&quot;).newticks(rate,jump)\n</code></pre>\n<p>create a ticks time controller for updates.</p>\n<p>rate is time between steps , jump is how far behind we should get \nbefore giving up ( eg callback takes longer than rate allows ) these \nvalues are in seconds and default to 1/60 and 1 respectively.</p>\n<p>Then we perform one or more update steps like so</p>\n<pre><code>ticks.step( callback ) -- callback may be called zero or more times\n</code></pre>\n<p>After that we should wait a bit (maybe draw a frame) and then call \nagain.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/toaster.lua",
   "line": 32,
   "name": "lua.wetgenes.gamecake.toaster.newticks",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/toaster.lua"
  },
  {
   "body": "<pre><code>local widgets=oven.rebake(&quot;wetgenes.gamecake.widgets&quot;)\n</code></pre>\n<p>A collection of widgets, rendered using gles2 code and controlled \nusing the mouse, keyboard or a joystick. EG click fire and move \nleft/right to adjust a slider value.</p>\n<p>Widgets must be created and bound to an oven, using the \noven.rebake function.</p>\n<p>This has undergone a number of rewrites as we try to simplify the \nwidget creation and layout process. Eventually we ended up with a \nfixed size system of widget placement so every widget must have a \nknown size in advance, however we allow scaling to occur so for \ninstance building a 256x256 widget does not mean that it has to be \ndisplayed at 256x256 it just means it will be square.</p>\n<p>The basic layout just lets you place these widgets in other widgets \nas left to right lines. So as long as you get your sizes right you \ncan easily place things just using a list and without keeping track \nof the current position.</p>\n<p>Other layout options are available, such as absolute positioning for \nfull control and we have simple custom skin versions of the buttons \nas well rather than the built in skins.</p>\n<p>All value data is handled by data structures that contain ranges and \nresolutions for data allowing the same data to be bound to multiple \ndisplay widgets. For instance the same data can be linked to the \nposition of a slider as well as the content of a text display. I \nthink the kids call this sort of thing an MVC pattern but that&#39;s a \nterribly dull name.</p>\n<p>Swanky paint is probably the most advanced used of the widgets so far\nbut I suspect we will be making a simple text editor in the near \nfuture. Designed for advanced in game tweaking of text files.</p>\n",
   "count": 59,
   "file": "../lua/wetgenes/gamecake/widgets/init.lua",
   "line": 13,
   "name": "lua.wetgenes.gamecake.widgets",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/init.lua"
  },
  {
   "body": "<pre><code>local master=oven.rebake(&quot;wetgenes.gamecake.widgets&quot;).setup()\nlocal widget=master:add{class=&quot;button&quot;,...}\n</code></pre>\n<p>A button for pressing and such.</p>\n",
   "count": 3,
   "file": "../lua/wetgenes/gamecake/widgets/button.lua",
   "line": 7,
   "name": "lua.wetgenes.gamecake.widgets.button",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/button.lua"
  },
  {
   "body": "<pre><code>see lua.wetgenes.gamecake.widgets.meta.setup for generic options\n</code></pre>\n<p>As a button we always need to be solid so this is forced to true.</p>\n<p>Also cursor will be set to &quot;hand&quot; if it is not already set so you can \ntell it is a button when you hover over it.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/button.lua",
   "line": 37,
   "name": "lua.wetgenes.gamecake.widgets.button.setup",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/button.lua"
  },
  {
   "body": "<pre><code>this function will also call lua.wetgenes.gamecake.widgets.meta.update\n</code></pre>\n<p>If we have a data assigned to this button then make sure that the \ndisplayed text is up to date. We should really hook into the data so \nany change there is copied here instead?</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/button.lua",
   "line": 19,
   "name": "lua.wetgenes.gamecake.widgets.button.update",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/button.lua"
  },
  {
   "body": "<pre><code>local master=oven.rebake(&quot;wetgenes.gamecake.widgets&quot;).setup()\nlocal widget=master:add{class=&quot;center&quot;,...}\n</code></pre>\n<p>A layout class for very centered children.</p>\n",
   "count": 3,
   "file": "../lua/wetgenes/gamecake/widgets/center.lua",
   "line": 7,
   "name": "lua.wetgenes.gamecake.widgets.center",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/center.lua"
  },
  {
   "body": "<pre><code>this function will also call lua.wetgenes.gamecake.widgets.meta.layout\n</code></pre>\n<p>Place any children in the center of this widget. Multiple children will \noverlap so probably best to only have one child.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/center.lua",
   "line": 19,
   "name": "lua.wetgenes.gamecake.widgets.center.layout",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/center.lua"
  },
  {
   "body": "<pre><code>see lua.wetgenes.gamecake.widgets.meta.setup for generic options\n</code></pre>\n<p>If not explicetly set we will use a size of &quot;full&quot; ie the size of \nparent as that is probably how this class will always be used.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/center.lua",
   "line": 41,
   "name": "lua.wetgenes.gamecake.widgets.center.setup",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/center.lua"
  },
  {
   "body": "<pre><code>local master=oven.rebake(&quot;wetgenes.gamecake.widgets&quot;).setup()\nlocal widget=master:add{class=&quot;checkbox&quot;,...}\n</code></pre>\n<p>A button that can be used to display and toggle a single bit of data.</p>\n",
   "count": 4,
   "file": "../lua/wetgenes/gamecake/widgets/checkbox.lua",
   "line": 10,
   "name": "lua.wetgenes.gamecake.widgets.checkbox",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/checkbox.lua"
  },
  {
   "body": "<p>We catch and react to the click hook as we can toggle the data_mask bit \nin the data.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/checkbox.lua",
   "line": 45,
   "name": "lua.wetgenes.gamecake.widgets.checkbox.class_hooks",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/checkbox.lua"
  },
  {
   "body": "<pre><code>see lua.wetgenes.gamecake.widgets.meta.setup for generic options\n</code></pre>\n<p>As a button we always need to be solid so this is forced to true.</p>\n<p>cursor will be set to &quot;hand&quot; if it is not already set so you can \ntell it is a button when you hover over it.</p>\n<p>data_mask defaults to 1 and represents the bit (or bits) that should be \ntested and toggled in the data. The default of 1 and assuming your data \nstarts at 0 means that the data will toggle between 0 and 1 using this \ncheckbox.</p>\n<p>text_false defaults to &quot; &quot; and is the text that will be displayed when \na data_mask test is false.</p>\n<p>text_true defaults to &quot;X&quot; and is the text that will be displayed when \na data_mask test is true.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/checkbox.lua",
   "line": 60,
   "name": "lua.wetgenes.gamecake.widgets.checkbox.setup",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/checkbox.lua"
  },
  {
   "body": "<pre><code>this function will also call lua.wetgenes.gamecake.widgets.meta.update\n</code></pre>\n<p>If we have a data assigned to this checkbox then make sure that the \ndisplayed text is up to date. We should really hook into the data so \nany change there is copied here instead?</p>\n<p>We use data_mask to check a single bit and then set the text to either \ntext_false or text_true depending on the result.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/checkbox.lua",
   "line": 22,
   "name": "lua.wetgenes.gamecake.widgets.checkbox.update",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/checkbox.lua"
  },
  {
   "body": "<pre><code>local master=oven.rebake(&quot;wetgenes.gamecake.widgets&quot;).setup()\nlocal data=master.new_data{}\n</code></pre>\n<p>A number or string that can be shared between multiple widgets given \nbasic limits and watched for changes.</p>\n<p>This alows the same data to be linked and displayed in multiple widgets \nsimultaneously.</p>\n",
   "count": 17,
   "file": "../lua/wetgenes/gamecake/widgets/data.lua",
   "line": 7,
   "name": "lua.wetgenes.gamecake.widgets.data",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/data.lua"
  },
  {
   "body": "",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/data.lua",
   "line": 58,
   "name": "lua.wetgenes.gamecake.widgets.data.add_class_hook",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/data.lua"
  },
  {
   "body": "",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/data.lua",
   "line": 40,
   "name": "lua.wetgenes.gamecake.widgets.data.call_hook",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/data.lua"
  },
  {
   "body": "",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/data.lua",
   "line": 26,
   "name": "lua.wetgenes.gamecake.widgets.data.call_hook_later",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/data.lua"
  },
  {
   "body": "<p>adjust number (may trigger hook)</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/data.lua",
   "line": 142,
   "name": "lua.wetgenes.gamecake.widgets.data.data_dec",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/data.lua"
  },
  {
   "body": "<p>get display pos, given the size of the parent and our size?</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/data.lua",
   "line": 223,
   "name": "lua.wetgenes.gamecake.widgets.data.data_get_pos",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/data.lua"
  },
  {
   "body": "<p>how wide or tall should the handle be given the size of the parent?</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/data.lua",
   "line": 203,
   "name": "lua.wetgenes.gamecake.widgets.data.data_get_size",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/data.lua"
  },
  {
   "body": "<p>adjust number (may trigger hook)</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/data.lua",
   "line": 132,
   "name": "lua.wetgenes.gamecake.widgets.data.data_inc",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/data.lua"
  },
  {
   "body": "<p>set a number value and min/max range probably without any triggers</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/data.lua",
   "line": 153,
   "name": "lua.wetgenes.gamecake.widgets.data.data_set",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/data.lua"
  },
  {
   "body": "<p>given the parents size and our relative position/size within it update \ndat.num and return a new position (for snapping)</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/data.lua",
   "line": 244,
   "name": "lua.wetgenes.gamecake.widgets.data.data_snap",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/data.lua"
  },
  {
   "body": "<p>get a number from the string</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/data.lua",
   "line": 184,
   "name": "lua.wetgenes.gamecake.widgets.data.data_tonumber",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/data.lua"
  },
  {
   "body": "",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/data.lua",
   "line": 192,
   "name": "lua.wetgenes.gamecake.widgets.data.data_tonumber_from_list",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/data.lua"
  },
  {
   "body": "<p>get a string from the number</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/data.lua",
   "line": 168,
   "name": "lua.wetgenes.gamecake.widgets.data.data_tostring",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/data.lua"
  },
  {
   "body": "",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/data.lua",
   "line": 176,
   "name": "lua.wetgenes.gamecake.widgets.data.data_tostring_from_list",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/data.lua"
  },
  {
   "body": "<p>set number (may trigger hook unless nohook is set)</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/data.lua",
   "line": 78,
   "name": "lua.wetgenes.gamecake.widgets.data.data_value",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/data.lua"
  },
  {
   "body": "",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/data.lua",
   "line": 65,
   "name": "lua.wetgenes.gamecake.widgets.data.del_class_hook",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/data.lua"
  },
  {
   "body": "",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/data.lua",
   "line": 282,
   "name": "lua.wetgenes.gamecake.widgets.data.new_data",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/data.lua"
  },
  {
   "body": "<p>Handle a collection of data (IE in the master widget)</p>\n",
   "count": 12,
   "file": "../lua/wetgenes/gamecake/widgets/datas.lua",
   "line": 7,
   "name": "lua.wetgenes.gamecake.widgets.datas",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/datas.lua"
  },
  {
   "body": "",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/datas.lua",
   "line": 46,
   "name": "lua.wetgenes.gamecake.widgets.datas.del",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/datas.lua"
  },
  {
   "body": "",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/datas.lua",
   "line": 60,
   "name": "lua.wetgenes.gamecake.widgets.datas.get",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/datas.lua"
  },
  {
   "body": "",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/datas.lua",
   "line": 95,
   "name": "lua.wetgenes.gamecake.widgets.datas.get_number",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/datas.lua"
  },
  {
   "body": "",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/datas.lua",
   "line": 75,
   "name": "lua.wetgenes.gamecake.widgets.datas.get_string",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/datas.lua"
  },
  {
   "body": "",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/datas.lua",
   "line": 67,
   "name": "lua.wetgenes.gamecake.widgets.datas.get_value",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/datas.lua"
  },
  {
   "body": "",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/datas.lua",
   "line": 53,
   "name": "lua.wetgenes.gamecake.widgets.datas.new",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/datas.lua"
  },
  {
   "body": "",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/datas.lua",
   "line": 23,
   "name": "lua.wetgenes.gamecake.widgets.datas.new_datas",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/datas.lua"
  },
  {
   "body": "",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/datas.lua",
   "line": 39,
   "name": "lua.wetgenes.gamecake.widgets.datas.set",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/datas.lua"
  },
  {
   "body": "",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/datas.lua",
   "line": 118,
   "name": "lua.wetgenes.gamecake.widgets.datas.set_infos",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/datas.lua"
  },
  {
   "body": "",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/datas.lua",
   "line": 83,
   "name": "lua.wetgenes.gamecake.widgets.datas.set_string",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/datas.lua"
  },
  {
   "body": "",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/datas.lua",
   "line": 103,
   "name": "lua.wetgenes.gamecake.widgets.datas.set_value",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/datas.lua"
  },
  {
   "body": "<p>Helpers to define defaults for each class of widget </p>\n",
   "count": 7,
   "file": "../lua/wetgenes/gamecake/widgets/defs.lua",
   "line": 7,
   "name": "lua.wetgenes.gamecake.widgets.defs",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/defs.lua"
  },
  {
   "body": "",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/defs.lua",
   "line": 69,
   "name": "lua.wetgenes.gamecake.widgets.defs.add",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/defs.lua"
  },
  {
   "body": "",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/defs.lua",
   "line": 76,
   "name": "lua.wetgenes.gamecake.widgets.defs.add_border",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/defs.lua"
  },
  {
   "body": "",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/defs.lua",
   "line": 48,
   "name": "lua.wetgenes.gamecake.widgets.defs.copy",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/defs.lua"
  },
  {
   "body": "",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/defs.lua",
   "line": 19,
   "name": "lua.wetgenes.gamecake.widgets.defs.create",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/defs.lua"
  },
  {
   "body": "",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/defs.lua",
   "line": 40,
   "name": "lua.wetgenes.gamecake.widgets.defs.reset",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/defs.lua"
  },
  {
   "body": "",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/defs.lua",
   "line": 30,
   "name": "lua.wetgenes.gamecake.widgets.defs.set",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/defs.lua"
  },
  {
   "body": "<p>handle a collection of dialogs that all live in the same place</p>\n",
   "count": 5,
   "file": "../lua/wetgenes/gamecake/widgets/dialogs.lua",
   "line": 7,
   "name": "lua.wetgenes.gamecake.widgets.dialogs",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/dialogs.lua"
  },
  {
   "body": "",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/dialogs.lua",
   "line": 31,
   "name": "lua.wetgenes.gamecake.widgets.dialogs.hide_overlay",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/dialogs.lua"
  },
  {
   "body": "",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/dialogs.lua",
   "line": 145,
   "name": "lua.wetgenes.gamecake.widgets.dialogs.setup",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/dialogs.lua"
  },
  {
   "body": "",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/dialogs.lua",
   "line": 40,
   "name": "lua.wetgenes.gamecake.widgets.dialogs.show",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/dialogs.lua"
  },
  {
   "body": "",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/dialogs.lua",
   "line": 22,
   "name": "lua.wetgenes.gamecake.widgets.dialogs.show_overlay",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/dialogs.lua"
  },
  {
   "body": "<pre><code>local master=oven.rebake(&quot;wetgenes.gamecake.widgets&quot;).setup()\nlocal widget=master:add{class=&quot;drag&quot;,...}\n</code></pre>\n<p>A button to drag arround.</p>\n",
   "count": 4,
   "file": "../lua/wetgenes/gamecake/widgets/drag.lua",
   "line": 7,
   "name": "lua.wetgenes.gamecake.widgets.drag",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/drag.lua"
  },
  {
   "body": "",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/drag.lua",
   "line": 22,
   "name": "lua.wetgenes.gamecake.widgets.drag.drag",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/drag.lua"
  },
  {
   "body": "",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/drag.lua",
   "line": 68,
   "name": "lua.wetgenes.gamecake.widgets.drag.setup",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/drag.lua"
  },
  {
   "body": "",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/drag.lua",
   "line": 55,
   "name": "lua.wetgenes.gamecake.widgets.drag.update",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/drag.lua"
  },
  {
   "body": "<pre><code>local master=oven.rebake(&quot;wetgenes.gamecake.widgets&quot;).setup()\nlocal widget=master:add{class=&quot;paragraph&quot;,...}\n</code></pre>\n<p>A layout class for a paragraph of wordwrapped text that ignores \nquantity of whitespace and possibly child widgets insereted into the \ntext and apropriate control points.</p>\n<p>We will be the full width of our parent and as tall as we need to be to \nfit the given text.</p>\n",
   "count": 2,
   "file": "../lua/wetgenes/gamecake/widgets/paragraph.lua",
   "line": 7,
   "name": "lua.wetgenes.gamecake.widgets.paragraph",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/paragraph.lua"
  },
  {
   "body": "<pre><code>see lua.wetgenes.gamecake.widgets.meta.setup for generic options\n</code></pre>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/paragraph.lua",
   "line": 46,
   "name": "lua.wetgenes.gamecake.widgets.paragraph.setup",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/paragraph.lua"
  },
  {
   "body": "<pre><code>master=oven.rebake(&quot;wetgenes.gamecake.widgets&quot;).setup()\n\nmaster=oven.rebake(&quot;wetgenes.gamecake.widgets&quot;).setup(\n    {font=&quot;Vera&quot;,text_size=16,grid_size=32,skin=0} )\n</code></pre>\n<p>Create a master widget, this widget which is considered the root of \nyour GUI. It will be filled with functions/data and should contain all \nthe functions you need to add data and widgets.</p>\n<p>You can pass in these configuration values in a table, the example \nshown above has soom good defaults.</p>\n<pre><code>font=&quot;Vera&quot;\n</code></pre>\n<p>The default font to use, this must have already been loaded via \nwetgenes.gamecake.fonts functions.</p>\n<pre><code>text_size=16\n</code></pre>\n<p>The default pixel height to render text at.</p>\n<pre><code>grid_size=32\n</code></pre>\n<p>The size in pixels that we try and create buttons at.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/widgets/init.lua",
   "line": 79,
   "name": "lua.wetgenes.gamecake.widgets.setup",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/widgets/init.lua"
  },
  {
   "body": "",
   "count": 34,
   "name": "lua.wetgenes.gamecake.zone"
  },
  {
   "body": "<pre><code>zone_scene = require(&quot;wetgenes.gamecake.zone.scene&quot;)\n</code></pre>\n<p>Manage a simple structure to help group, update and draw discrete game objects.</p>\n<p>This module contains only one function which can be used to create a scene\ninstance and the rest of this documentation concerns the return from this\ncreate function, not the module</p>\n<pre><code>scene = zone_scene.create()\nscene = zone_scene.create( { sortby={&quot;first&quot;,&quot;second&quot;,...} } )\n</code></pre>\n<p>Create and return a scene object. A base object can be passed in and will\nbe filled in and returned. This can used to supply a sortby table to help\ncontrol the order of updates of different castes.</p>\n<p>If passed in sortby is a table of [caste_name]=weight values to help control\nthe order of updates by caste and make it consistent. For instance you might\nfind it useful to force monsters to update before the player.</p>\n",
   "count": 31,
   "file": "../lua/wetgenes/gamecake/zone/scene.lua",
   "line": 6,
   "name": "lua.wetgenes.gamecake.zone.scene",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/zone/scene.lua"
  },
  {
   "body": "<pre><code>scene:add(it)\nscene:add(it,caste)\nscene:add(it,caste,boot)\n</code></pre>\n<p>Add a new item of caste or it.caste to the list of things to update.</p>\n<p>The optional boot table contains initialisation/reset values and will\nbe remembered in item.boot. If boot.id is given then we will remember\nthis item with a call to scene.set(id,it)</p>\n<p>The actual act of initalising the item from the boot table is left to\ncustom code which ideally should initalize it and then just call\nscene.add(it) as the auto shortcuts are unnecesary.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/zone/scene.lua",
   "line": 396,
   "name": "lua.wetgenes.gamecake.zone.scene.add",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/zone/scene.lua"
  },
  {
   "body": "<pre><code>scene:call(fname,...)\n</code></pre>\n<p>If fname is a string then that method will be invoked for every item\nwhere it exists like so. Only the first item of each caste is tested,\nif the function exists there then it is expected to exist for all items\nof a given caste. This enables us to skip entire castes whilst still\nmaking all functions optional.</p>\n<pre><code>if it[fname] then it[fname](it,...) end\n</code></pre>\n<p>if fname is a function then it will result in every item geting called with\nthat function like so.</p>\n<pre><code>fname(it,...)\n</code></pre>\n<p>The calls are always made backwards through the table so that an item can\nchoose to delete itself.</p>\n<p>Finally we return the number of calls we made so you can keep track of\ncurrently active items.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/zone/scene.lua",
   "line": 465,
   "name": "lua.wetgenes.gamecake.zone.scene.call",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/zone/scene.lua"
  },
  {
   "body": "<pre><code>scene:caste(caste)\n</code></pre>\n<p>Get the list of items of a given caste, eg &quot;bullets&quot; or &quot;enemies&quot;</p>\n<p>This list will be created if it does not already exist.</p>\n<p>scene.sortby is used to keep this list in order and an empty system\nwill be autocreated if needed.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/zone/scene.lua",
   "line": 371,
   "name": "lua.wetgenes.gamecake.zone.scene.caste",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/zone/scene.lua"
  },
  {
   "body": "<pre><code>Copy of the create_values function from the main zone_scene module.\n</code></pre>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/zone/scene.lua",
   "line": 66,
   "name": "lua.wetgenes.gamecake.zone.scene.create_values",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/zone/scene.lua"
  },
  {
   "body": "<pre><code>local it = scene:find_uid( uid )\n</code></pre>\n<p>Return the item with the given uid or nil if no such item has been\nremembered or a nil uid has been passed in.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/zone/scene.lua",
   "line": 179,
   "name": "lua.wetgenes.gamecake.zone.scene.find_uid",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/zone/scene.lua"
  },
  {
   "body": "<pre><code>local it = scene:forget_uid( {uid=uid} )\n</code></pre>\n<p>Remove the item from the map of uids. Returns the item or nil if uid was\ninvalid unset or our map was not pointing to the correct item.</p>\n<pre><code>local it = scene:forget_uid( scene.find_uid( uid ) )\n</code></pre>\n<p>Chain with find_uid to forget an item by uid and this is safe even if the item\ndoes not exist.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/zone/scene.lua",
   "line": 158,
   "name": "lua.wetgenes.gamecake.zone.scene.forget_uid",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/zone/scene.lua"
  },
  {
   "body": "<pre><code>local uid = scene:generate_uid()\n\nlocal uid = scene:generate_uid(uid)\n</code></pre>\n<p>Simple unique incremental IDs for items to be used instead of\npointers, starts at 1 and goes up as items are added.</p>\n<p>Ideally you will also need extra code for compacting these ids (\nprobably as an export, renumber, import cycle ) to stop them getting\nhuge and breaking. So a save/load system which is out of scope for this\ncode.</p>\n<p>Generally, unless we are creating and destroying millions of items we\nwill run out of memory way before this number gets too big.</p>\n<p>If a uid is passed in then we will return uid+1 and continue on upwards\nfor subsequent calls.</p>\n<p>The point of uids is so we can refer to and lazy link items as weak\nvalues making it easy to delete an item without worrying too much about\nwhere it has been used. So instead of putting the item table inside\nanother item table we can use a uid reference instead.</p>\n<p>Good for serialising data as well.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/zone/scene.lua",
   "line": 106,
   "name": "lua.wetgenes.gamecake.zone.scene.generate_uid",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/zone/scene.lua"
  },
  {
   "body": "<pre><code>local it = scene:remember_uid( {} )\n</code></pre>\n<p>Remember an item in the uids table, generating a uid and setting it.uid to this\nvalue if one does not already exist.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/zone/scene.lua",
   "line": 143,
   "name": "lua.wetgenes.gamecake.zone.scene.remember_uid",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/zone/scene.lua"
  },
  {
   "body": "<pre><code>scene:remove(it)\n</code></pre>\n<p>Remove this item, this is slightly expensive as we need to search in a table\nto find it before calling table.remove which then has to shuffle the table to\nfill in the hole.</p>\n<p>With very dynamic items it can be faster to allocate all the items you need at\nthe start and then flag them on/off rather than add and remove dynamically.</p>\n<p>It may make more sense to create a system which handles its own list of\nobjects, such as particles. Then only use the items to keep track of a\nmaster particles item that contains many particles and can add/remove/recycle\nas it sees fit.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/zone/scene.lua",
   "line": 435,
   "name": "lua.wetgenes.gamecake.zone.scene.remove",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/zone/scene.lua"
  },
  {
   "body": "<pre><code>all=scene:require(&quot;all&quot;)\n\nPerform a require using scene.require_search as a list of places to\nfind the module\n</code></pre>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/zone/scene.lua",
   "line": 47,
   "name": "lua.wetgenes.gamecake.zone.scene.require",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/zone/scene.lua"
  },
  {
   "body": "<pre><code>A table of where to look for system modules\n</code></pre>\n<p>Replace or modify with list of prefxes to try. Defaults to a table with\none entry of &quot;unzone.system.&quot; a string will be appeneded to the end of\nthese and a require attempted so it should terminate in a &quot;.&quot; and\nincluding a &quot;&quot; at the end will allow a full path to be used as a\nrequire.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/zone/scene.lua",
   "line": 33,
   "name": "lua.wetgenes.gamecake.zone.scene.require_search",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/zone/scene.lua"
  },
  {
   "body": "<pre><code>scene:reset()\n</code></pre>\n<p>Empty the list of items to update and draw, this does not reset the systems\ntable that should be modified with the insert and remove functions.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/zone/scene.lua",
   "line": 355,
   "name": "lua.wetgenes.gamecake.zone.scene.reset",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/zone/scene.lua"
  },
  {
   "body": "<pre><code>scene:sortby_update(newtab)\n</code></pre>\n<p>A function that takes the array part of newtab and reverses the\nkey=value so a simple order list can be provided without any explicit weights.\nThe first caste name in the array gets a weight of 1, second 2 and so on.</p>\n<p>Newtab is coppied into scene.sortby for use a s aweight lookuptable of name to weight.</p>\n<p>If newtab is not provided then scene.sortby is used by default.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/zone/scene.lua",
   "line": 329,
   "name": "lua.wetgenes.gamecake.zone.scene.sortby_update",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/zone/scene.lua"
  },
  {
   "body": "<pre><code>print( scene:status() )\n</code></pre>\n<p>Return a debug string giving details about the system order and current number\nof items of each caste.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/zone/scene.lua",
   "line": 521,
   "name": "lua.wetgenes.gamecake.zone.scene.status",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/zone/scene.lua"
  },
  {
   "body": "<pre><code>scene.systems={name=system,[1]=system}\n</code></pre>\n<p>A sorted table and lookup by caste name of each system. Table is sorted so it\nwill be traversed backwards, backwards traversal allows the current item to\ndelete itself.</p>\n",
   "count": 5,
   "file": "../lua/wetgenes/gamecake/zone/scene.lua",
   "line": 86,
   "name": "lua.wetgenes.gamecake.zone.scene.systems",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/zone/scene.lua"
  },
  {
   "body": "<pre><code>scene:systems_call(fname,...)\n</code></pre>\n<p>For every system call the function called fname like so.</p>\n<pre><code>system[fname](system,...)\n</code></pre>\n<p>Returns the number of calls made, which will be the number of systems that had\nan fname function to call.</p>\n<p>If fname is a function then it will be called as if it was a method.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/zone/scene.lua",
   "line": 241,
   "name": "lua.wetgenes.gamecake.zone.scene.systems.call",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/zone/scene.lua"
  },
  {
   "body": "<pre><code>scene:systems_cocall(fname,...)\n</code></pre>\n<p>For every system call the function called fname inside a coroutine like\nso.</p>\n<pre><code>system[fname](system,...)\n</code></pre>\n<p>This function can yield and should do so if it is waiting for another\nsystem to do something. All coroutines will be run in a round robin\nstyle until they all complete.</p>\n<p>Returns the number of calls made, which will be the number of systems that had\nan fname function to call.</p>\n<p>If fname is a function then it will be called as if it was a method.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/zone/scene.lua",
   "line": 275,
   "name": "lua.wetgenes.gamecake.zone.scene.systems.cocall",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/zone/scene.lua"
  },
  {
   "body": "<pre><code>scene:systems_insert(system)\n</code></pre>\n<p>Insert a new system replacing any system of the same caste. system.caste should\nbe set to the caste of the system for this to work.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/zone/scene.lua",
   "line": 210,
   "name": "lua.wetgenes.gamecake.zone.scene.systems.insert",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/zone/scene.lua"
  },
  {
   "body": "<pre><code>system = scene:systems_remove(caste)\n</code></pre>\n<p>Remove and return the system of the given caste.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/zone/scene.lua",
   "line": 193,
   "name": "lua.wetgenes.gamecake.zone.scene.systems.remove",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/zone/scene.lua"
  },
  {
   "body": "<pre><code>scene.uids={[uid]=item,...}\n</code></pre>\n<p>A map of currently remembered uids to items.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/zone/scene.lua",
   "line": 97,
   "name": "lua.wetgenes.gamecake.zone.scene.uids",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/zone/scene.lua"
  },
  {
   "body": "<pre><code>zone_scene = require(&quot;wetgenes.gamecake.zone.scene&quot;)\n\nvalues = zone_scene.create_values()\n</code></pre>\n<p>Create and return a values object.</p>\n<p>This is an array of objects representing the main object in values[1]\nand future predictions in values[2],values[3] etc etc.</p>\n<p>The key values in the higher numbers overide key values in the lower\nnumbers so essentially only changes need to be written into the\npredicted slots.</p>\n",
   "count": 10,
   "file": "../lua/wetgenes/gamecake/zone/scene.lua",
   "line": 856,
   "name": "lua.wetgenes.gamecake.zone.scene.values",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/zone/scene.lua"
  },
  {
   "body": "<pre><code>value=values:get(key)\nvalue=values:get(key,topidx)\n</code></pre>\n<p>Get the current value for this key by searching from the top of the\nstack to the bottom and returning the first non nil value we find.</p>\n<p>If topidx is given then get the value at this idx, this would normally\nbe negative in which it counts back from the end. So it is easy to\ntime travel back a frame into the cached values with -1 as the idx.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/zone/scene.lua",
   "line": 657,
   "name": "lua.wetgenes.gamecake.zone.scene.values.get",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/zone/scene.lua"
  },
  {
   "body": "<pre><code>value=values:manifest(key,value)\n</code></pre>\n<p>Get the current value for this key if there is no current value then\nset the current value.</p>\n<p>This uses values:get and values:set to perform these actions.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/zone/scene.lua",
   "line": 683,
   "name": "lua.wetgenes.gamecake.zone.scene.values.manifest",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/zone/scene.lua"
  },
  {
   "body": "<pre><code>values2 = values:new()\n</code></pre>\n<p>Create and return a new values object with a single slot containing an\nempty object.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/zone/scene.lua",
   "line": 585,
   "name": "lua.wetgenes.gamecake.zone.scene.values.new",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/zone/scene.lua"
  },
  {
   "body": "<pre><code>values:pull()\n</code></pre>\n<p>Merge bottom 2 changesets and replae with just 1 shifting all values down one.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/zone/scene.lua",
   "line": 599,
   "name": "lua.wetgenes.gamecake.zone.scene.values.pull",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/zone/scene.lua"
  },
  {
   "body": "<pre><code>values:push()\n</code></pre>\n<p>Add a new slot to the end of the values array. Future values will be\nwriten into this new slot.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/zone/scene.lua",
   "line": 615,
   "name": "lua.wetgenes.gamecake.zone.scene.values.push",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/zone/scene.lua"
  },
  {
   "body": "<pre><code>values:set(key,value)\n</code></pre>\n<p>If this is different from the current value then write the value into\nthe key of the object at the top of the stack. Hence future gets will\nget this new value.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/zone/scene.lua",
   "line": 638,
   "name": "lua.wetgenes.gamecake.zone.scene.values.set",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/zone/scene.lua"
  },
  {
   "body": "<pre><code>value=values:tween(key,tween)\n</code></pre>\n<p>Tween between the current value(1) and the previous value(0).</p>\n<p>A tween of 0 gets the previous value, a tween of 1 gets the current\nvalue and any other tween will get a mix between the two if that is\npossible.</p>\n<p>We can only mix numbers or tardis values, other values will round to\neither 0 or 1 whichever is closest and then get that whole value.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/zone/scene.lua",
   "line": 700,
   "name": "lua.wetgenes.gamecake.zone.scene.values.tween",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/zone/scene.lua"
  },
  {
   "body": "<pre><code>value=values:twrap(key,nmax,tween)\n</code></pre>\n<p>Tween wrap between the current value and the previous value.</p>\n<p>Result will be in rang of 0&gt;= n &lt;nmax , blended in the shortest\ndirection.</p>\n<p>nmax may be a number or a tardis value for nmax per dimension</p>\n<p>A tween of 0 gets the previous value, a tween of 1 gets the current\nvalue and any other tween will get a mix between the two if that is\npossible.</p>\n<p>We can only mix numbers or tardis values, other values will round to\neither 0 or 1 whichever is closest and then get that whole value.\n<br/>\n<br/></p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/zone/scene.lua",
   "line": 750,
   "name": "lua.wetgenes.gamecake.zone.scene.values.twrap",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/zone/scene.lua"
  },
  {
   "body": "<pre><code>values:unpush()\n</code></pre>\n<p>Remove top pushed slot.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/zone/scene.lua",
   "line": 627,
   "name": "lua.wetgenes.gamecake.zone.scene.values.unpush",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/zone/scene.lua"
  },
  {
   "body": "",
   "count": 2,
   "name": "lua.wetgenes.gamecake.zone.system"
  },
  {
   "body": "<p>Generic game objects, IE things that exist in game and can be interacted with \nby the players.</p>\n<p>Some times these exist in world, sometimes they exist in bags or inventory etc \nso are not visible world objects.</p>\n<p>As such this item <em>always</em> exists here and will be moved in and out of world \nobjects as necessary.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/gamecake/zone/system/old/items.lua",
   "line": 7,
   "name": "lua.wetgenes.gamecake.zone.system.items",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/gamecake/zone/system/old/items.lua"
  },
  {
   "body": "<pre><code>local wgrd=require(&quot;wetgenes.grd&quot;)\n</code></pre>\n<p>We use wgrd as the local name of this library.</p>\n<p>Handle bitmap creation, loading, saving and blitting. The bitmap and \nthe colormap for indexed bitmaps are represented by the same data \nstructure which describes a continuous chunk of memory with optional \nability to select an area of a larger chunk using simple byte spans.</p>\n<p>Swanky Paint uses this to manage its bitmaps and its also used to \nconvert art into data at build time for use in the GameCake engine. The \nPageCake engine uses this for image management, creating live thumbnails \nand so on.</p>\n<p>We load and save jpeg, png and gif. The png lib contains extensions for \napng which allows animation chunks. Animations are contained in the Z \n(depth) dimension of the grd.</p>\n<p>The following are possible format options that we support. Most of them \nare OpenGL friendly.</p>\n<pre><code>wgrd.FMT_U8_RGBA\n</code></pre>\n<p>32 bits per pixel with a byte order of red, green, blue, alpha and a \nlittle endian U32 of ABGR. We prefer this byte order because OpenGL.</p>\n<pre><code>wgrd.FMT_U8_ARGB\n</code></pre>\n<p>32 bits per pixel with a byte order of alpha, red, green, blue and a \nlittle endian U32 of BGRA.</p>\n<pre><code>wgrd.FMT_U8_RGB\n</code></pre>\n<p>24 bits per pixel with a byte order of red, green, blue.</p>\n<pre><code>wgrd.FMT_U8_INDEXED\n</code></pre>\n<p>8 bits per pixel which indexes a wgrd.FMT_U8_RGBA palette.</p>\n<pre><code>wgrd.FMT_U8_LUMINANCE\n</code></pre>\n<p>8 bits per pixel, grey scale only.</p>\n<pre><code>wgrd.FMT_U8_ALPHA\n</code></pre>\n<p>8 bits per pixel, alpha only.</p>\n<pre><code>wgrd.FMT_U16_RGBA_5551\n</code></pre>\n<p>16 bits per pixel with 5 bits each of red,green,blue and 1 bit of alpha \npacked into a single U16.</p>\n<pre><code>wgrd.FMT_U16_RGBA_4444\n</code></pre>\n<p>16 bits per pixel with 4 bits each of red,green,blue,alpha packed into \na single U16.</p>\n<pre><code>wgrd.FMT_U16_RGBA_5650\n</code></pre>\n<p>16 bits per pixel with 4 bits of red, 5 bits of green and 4 bits of \nblue packed into a single U16.\n<br/>\n<br/></p>\n<pre><code>wgrd.FMT_U8_RGBA_PREMULT\nwgrd.FMT_U8_ARGB_PREMULT\nwgrd.FMT_U8_INDEXED_PREMULT\nwgrd.FMT_U16_RGBA_5551_PREMULT\nwgrd.FMT_U16_RGBA_4444_PREMULT\nwgrd.FMT_U16_RGBA_5650_PREMULT\n</code></pre>\n<p>Are all just pre-multiplied alpha versions of the base format described \nabove.</p>\n<p>Check this link out for why pre-multiplied alpha is a good idea for any \nimage that will be used as a texture \n<a href=\"http://blogs.msdn.com/b/shawnhar/archive/2009/11/06/premultiplied-alpha.aspx\">http://blogs.msdn.com/b/shawnhar/archive/2009/11/06/premultiplied-alpha.aspx</a>\n<br/>\n<br/></p>\n<pre><code>wgrd.GRD_FMT_HINT_PNG\nwgrd.GRD_FMT_HINT_JPG\nwgrd.GRD_FMT_HINT_GIF\n</code></pre>\n<p>These are used to choose a specific file format when loading or saving.</p>\n",
   "count": 37,
   "file": "../lua_grd/code/grd.lua",
   "line": 6,
   "name": "lua.wetgenes.grd",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/grd.lua"
  },
  {
   "body": "<pre><code>ga:adjust_contrast(sub,con)\n</code></pre>\n<p>sub is the middle grey value, probably 127, and con is the amount of \ncontrast.</p>\n<p>A con of 0 should have no effect, a con of -1 will be a flat grey and a \ncon of 1 will give a huge contrast increase.</p>\n",
   "count": 1,
   "file": "../lua_grd/code/grd.lua",
   "line": 1120,
   "name": "lua.wetgenes.grd.adjust_contrast",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/grd.lua"
  },
  {
   "body": "<pre><code>ga:adjust_hsv(hue,saturation,value)\n</code></pre>\n<p>Add hue and adjust -1 to +1 in for saturation and value.</p>\n",
   "count": 1,
   "file": "../lua_grd/code/grd.lua",
   "line": 1107,
   "name": "lua.wetgenes.grd.adjust_hsv",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/grd.lua"
  },
  {
   "body": "<pre><code>ga:adjust_rgb(red,green,blue)\n</code></pre>\n<p>Adjust -1 to +1 in for each RGB component.</p>\n",
   "count": 1,
   "file": "../lua_grd/code/grd.lua",
   "line": 1094,
   "name": "lua.wetgenes.grd.adjust_rgb",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/grd.lua"
  },
  {
   "body": "<pre><code>g:attr_redux(cw,ch,num,sub,bak)\n</code></pre>\n<p>Perform attribute clash simulation on an indexed image.</p>\n<p>cw,ch are the width and height of each character we are simulating, 8x8 \nis the right size for spectrum attrs but could be 4x8 for c64 multicolor \nmode.</p>\n<p>num is the number of colors allowed within this area, so 2 for spectrum mode.</p>\n<p>sub is the size of sub pallete groups, eg 16 in nes mode or 8 in \nspectrum mode, EG bright simulation in spectrum mode requires all \ncolors in a attr block to be from the bright palette or the dark \npalette no mixing so this forces that grouping. Set to 0 or 256 and \nthis restriction will be disabled.</p>\n<p>bak is the index of the background color that is shared across all \ncharacters, set to -1 if there is no shared background color.</p>\n<p>Returns nil,error if something goes wrong so can be used with assert \notherwise returns g so that we can chain the result.</p>\n",
   "count": 1,
   "file": "../lua_grd/code/grd.lua",
   "line": 609,
   "name": "lua.wetgenes.grd.attr_redux",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/grd.lua"
  },
  {
   "body": "<pre><code>g:blit(gb,x,y,cx,cy,cw,ch)\n</code></pre>\n<p>Blit a 2D area from one grd into another.</p>\n<p>gb is the grd to blit from.</p>\n<p>x,y is the location to blit too.</p>\n<p>cx,cy,cw,ch is a clip area that should be applied to gb before it is \nblitted. EG to specify an area within gb. If not provided it will \ndefault to the entirety of gb,</p>\n<p>g (destination) must be FMT_U8_RGBA and gb (source) must be \nFMT_U8_RGBA_PREMULT this function will blend the images using normal \nalpha blending.</p>\n<p>This is not overly optimised but should be reasonably fast.</p>\n",
   "count": 1,
   "file": "../lua_grd/code/grd.lua",
   "line": 854,
   "name": "lua.wetgenes.grd.blit",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/grd.lua"
  },
  {
   "body": "<pre><code>g:clear(color)\n</code></pre>\n<p>Fill this grd with a single color, the color passed in depends on the \nformat of the grd, it could be an index value for 8bit images or a \n32bit value for rgba images.</p>\n<p>Returns nil,error if something goes wrong so can be used with assert \notherwise returns g so that we can chain the result.</p>\n",
   "count": 1,
   "file": "../lua_grd/code/grd.lua",
   "line": 575,
   "name": "lua.wetgenes.grd.clear",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/grd.lua"
  },
  {
   "body": "<pre><code>gr=g:clip(x,y,z,w,h,d)\n</code></pre>\n<p>create a clipped window into this grd</p>\n<p>the actual data is still stored in the original, so any changes there will effect the newly returned grd</p>\n<p>x,y,z are the staring pixel and w,h,d are the width height and depth in pixels.</p>\n<p>If you intend to use this clipped area for an extended period of time then you should duplicate this grd once you do this.</p>\n<p>This returns a new grd with gr.parent set to g (the original grd)</p>\n<p>This is a very shallow dangerous copy and should only really be used for temporary actions.</p>\n",
   "count": 1,
   "file": "../lua_grd/code/grd.lua",
   "line": 995,
   "name": "lua.wetgenes.grd.clip",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/grd.lua"
  },
  {
   "body": "<pre><code>g:convert(fmt)\n</code></pre>\n<p>Convert this grd to a new format, eg start with an 8 bit indexed grd \nand convert it to 32 bit like by passing in wgrd.FMT_U8_RGBA as the fmt.</p>\n<p>Returns nil,error if something goes wrong so can be used with assert \notherwise returns g so that we can chain the result.</p>\n",
   "count": 1,
   "file": "../lua_grd/code/grd.lua",
   "line": 540,
   "name": "lua.wetgenes.grd.convert",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/grd.lua"
  },
  {
   "body": "<pre><code>g:copy_data(gb)\n</code></pre>\n<p>Copy all of the bitmap data from gb into g.</p>\n",
   "count": 1,
   "file": "../lua_grd/code/grd.lua",
   "line": 972,
   "name": "lua.wetgenes.grd.copy_data",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/grd.lua"
  },
  {
   "body": "<pre><code>g:copy_data_layer(gb,z,zb)\n</code></pre>\n<p>Copy one layer (frame) of the bitmap data from gb into g. z is the \ndepth of the layer to copy into zb is the depth of the layer to copy \nfrom.</p>\n",
   "count": 1,
   "file": "../lua_grd/code/grd.lua",
   "line": 982,
   "name": "lua.wetgenes.grd.copy_data_layer",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/grd.lua"
  },
  {
   "body": "<pre><code>ga=wgrd.create(gb)\n</code></pre>\n<p>Duplicate the grd.</p>\n<pre><code>ga=wgrd.create(format,width,height,depth)\n</code></pre>\n<p>Create a grd in the given format with the given width height and depth. </p>\n<pre><code>ga=wgrd.create(filename,opts)\n</code></pre>\n<p>Load an image from the file system.</p>\n<pre><code>ga=wgrd.create()\n</code></pre>\n<p>Create a blank grd of 0 dimensions.</p>\n<p>This is usually the only wgrd function you would need to call as once you \nhave a grd you can use the : calling convention to modify it. The other \nfunctions will be shown as examples using the : calling convention.</p>\n<pre><code>wgrd.create():load(opts)\n</code></pre>\n<p>For instance could be used if you wish to perform a more esoteric load \nthan from the file system.</p>\n<p>Returns nil,error if something goes wrong so can be used with assert \notherwise returns a grd object.</p>\n",
   "count": 1,
   "file": "../lua_grd/code/grd.lua",
   "line": 278,
   "name": "lua.wetgenes.grd.create",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/grd.lua"
  },
  {
   "body": "<pre><code>g:create_convert(fmt)\n</code></pre>\n<p>Like convert but returns a new grd rather than converting in place.</p>\n",
   "count": 1,
   "file": "../lua_grd/code/grd.lua",
   "line": 560,
   "name": "lua.wetgenes.grd.create_convert",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/grd.lua"
  },
  {
   "body": "<pre><code>gr=g:create_normal()\n</code></pre>\n<p>convert a greyscale height map  into an rgb normal map using the sobel filter.</p>\n",
   "count": 1,
   "file": "../lua_grd/code/grd.lua",
   "line": 1028,
   "name": "lua.wetgenes.grd.create_normal",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/grd.lua"
  },
  {
   "body": "<pre><code>g:destroy()\n</code></pre>\n<p>Free the grd and associated memory. This will of course be done \nautomatically by garbage collection but you can force it explicitly \nusing this function.\n    </p>\n",
   "count": 1,
   "file": "../lua_grd/code/grd.lua",
   "line": 356,
   "name": "lua.wetgenes.grd.destroy",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/grd.lua"
  },
  {
   "body": "<pre><code>ga = g:duplicate()\n</code></pre>\n<p>Create a duplicate of this grd and return it.</p>\n<p>Returns nil,error if something goes wrong so can be used with assert \notherwise returns g so that we can chain the result.</p>\n",
   "count": 1,
   "file": "../lua_grd/code/grd.lua",
   "line": 526,
   "name": "lua.wetgenes.grd.duplicate",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/grd.lua"
  },
  {
   "body": "<pre><code>ga:fillmask(gb,seedx,seedy)\n</code></pre>\n<p>Fill gb with a fillmask version of ga that starts the floodfill at \nseedx,seedy</p>\n",
   "count": 1,
   "file": "../lua_grd/code/grd.lua",
   "line": 1149,
   "name": "lua.wetgenes.grd.fillmask",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/grd.lua"
  },
  {
   "body": "<pre><code>g:flipx()\n</code></pre>\n<p>This function flips the image reversing the x axis.\n    </p>\n",
   "count": 1,
   "file": "../lua_grd/code/grd.lua",
   "line": 785,
   "name": "lua.wetgenes.grd.flipx",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/grd.lua"
  },
  {
   "body": "<pre><code>g:flipy()\n</code></pre>\n<p>This function flips the image reversing the y axis.</p>\n<p>Some image formats and rendering engines like to use upside down images \nso this is rather useful.</p>\n",
   "count": 1,
   "file": "../lua_grd/code/grd.lua",
   "line": 769,
   "name": "lua.wetgenes.grd.flipy",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/grd.lua"
  },
  {
   "body": "<pre><code>g:info()\n</code></pre>\n<p>This function looks at the userdata stored in g[0] and fills in the g \ntable with its values. So it refreshes the width height etc values to \nreflect any changes. This should not need to be called explicitly as it \nis called whenever we change anything.</p>\n",
   "count": 1,
   "file": "../lua_grd/code/grd.lua",
   "line": 839,
   "name": "lua.wetgenes.grd.info",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/grd.lua"
  },
  {
   "body": "<pre><code>g:load(opts)\n</code></pre>\n<p>Load an image from memory or file system depending on settings in opts.</p>\n<pre><code>opts.fmt\n</code></pre>\n<p>Lets you choose an image format, the strings &quot;jpg&quot;,&quot;png&quot; or &quot;gif&quot; will \nbe converted to the appropriate wgrd.FMT_HINT_* value.</p>\n<pre><code>opts.data\n</code></pre>\n<p>Flags this as a load from memory and provides the data string to load \nfrom.</p>\n<pre><code>opts.filename\n</code></pre>\n<p>Flags this as a load the file system and provides the file name to \nopen.</p>\n<p>Returns nil,error if something goes wrong so can be used with assert \notherwise returns g so that we can chain the result.</p>\n",
   "count": 1,
   "file": "../lua_grd/code/grd.lua",
   "line": 414,
   "name": "lua.wetgenes.grd.load",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/grd.lua"
  },
  {
   "body": "<pre><code>g:load_data(datastring,format)\n</code></pre>\n<p>Load an image from memory.</p>\n<p>Returns nil,error if something goes wrong so can be used with assert \notherwise returns g so that we can chain the result.</p>\n",
   "count": 1,
   "file": "../lua_grd/code/grd.lua",
   "line": 400,
   "name": "lua.wetgenes.grd.load_data",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/grd.lua"
  },
  {
   "body": "<pre><code>g:load_file(filename,format)\n</code></pre>\n<p>Load an image from the file system.</p>\n<p>Returns nil,error if something goes wrong so can be used with assert \notherwise returns g so that we can chain the result.\n </p>\n",
   "count": 1,
   "file": "../lua_grd/code/grd.lua",
   "line": 386,
   "name": "lua.wetgenes.grd.load_file",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/grd.lua"
  },
  {
   "body": "<pre><code>g:paint(gb,x,y,cx,cy,cw,ch,mode,trans,color)\n</code></pre>\n<p>Blit a 2D area from one grd into another using dpaint style paint modes.</p>\n<p>Both grids must be indexed - FMT_U8_INDEXED</p>\n<p>gb is the grd to blit from.</p>\n<p>x,y is the location to blit too.</p>\n<p>cx,cy,cw,ch is a clip area that should be applied to gb before it is \nblitted. EG to specify an area within gb. If not provided it will \ndefault to the entirety of gb,</p>\n<p>mode is one of the following</p>\n<pre><code>PAINT_MODE_TRANS\n</code></pre>\n<p>Skip the transparent color.</p>\n<pre><code>GRD_PAINT_MODE_COLOR\n</code></pre>\n<p>Skip the transparent color and make every solid pixel the same color.</p>\n<pre><code>GRD_PAINT_MODE_COPY\n</code></pre>\n<p>Copy the entire area.</p>\n<pre><code>GRD_PAINT_MODE_XOR\n</code></pre>\n<p>XOR the values. (Can be used to find differences in an image)</p>\n<pre><code>GRD_PAINT_MODE_ALPHA\n</code></pre>\n<p>Skip the transparent colors as defined in the palette.\n<br/>\n<br/></p>\n<p>trans is the index of the transparent color, bground color, for use in \nthe appropriate modes.</p>\n<p>color is the index of the drawing color, foreground color, for use in \nthe appropriate modes. \n<br/>\n<br/></p>\n<p>This is not overly optimised but should be reasonably fast.</p>\n",
   "count": 1,
   "file": "../lua_grd/code/grd.lua",
   "line": 899,
   "name": "lua.wetgenes.grd.paint",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/grd.lua"
  },
  {
   "body": "<pre><code>g:palette(x,w)\ng:palette(x,w,&quot;&quot;)\ng:palette(x,w,tab)\ng:palette(x,w,str)\ng:palette(x,w,grd)\n</code></pre>\n<p>These are the same as g:pixels() but refer to the palette information \nwhich is stored as a 1 pixel high 256 pixel wide rgba image. The use of \n&quot;&quot; to read a string of bytes and passing in either a table of numerical \nvalues or string of bytes to write into the palette is the same system \nas used with pixels.</p>\n",
   "count": 1,
   "file": "../lua_grd/code/grd.lua",
   "line": 694,
   "name": "lua.wetgenes.grd.palette",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/grd.lua"
  },
  {
   "body": "<pre><code>g:pixels(x,y,w,h)\ng:pixels(x,y,z,w,h,d)\n</code></pre>\n<p>Read the area of pixels as a table of numerical values, the amount of \nnumbers you get per pixel <em>depends</em> on the format of the grd.</p>\n<pre><code>g:pixels(x,y,w,h,&quot;&quot;)\ng:pixels(x,y,z,w,h,d,&quot;&quot;)\n</code></pre>\n<p>Read the area of pixels as a string of byte values, the amount of bytes \nyou get per pixel <em>depends</em> on the format of the grd. Note the passing \nin of an empty string to indicate that you with to receive a string.</p>\n<pre><code>g:pixels(x,y,w,h,tab)\ng:pixels(x,y,z,w,h,d,tab)\n</code></pre>\n<p>Write the area of pixels from a table of numerical values which is \nprovided in tab, the amount of numbers you need to provide per pixel \n<em>depends</em> on the format of the grd.</p>\n<pre><code>g:pixels(x,y,w,h,str)\ng:pixels(x,y,z,w,h,d,str)\n</code></pre>\n<p>Write the area of pixels from a string of bytes which is provided in \nstr, the amount of bytes you need to provide per pixel <em>depends</em> on the \nformat of the grd.</p>\n<pre><code>g:pixels(x,y,w,h,grd)\ng:pixels(x,y,z,w,h,d,grd)\n</code></pre>\n<p>Write the area of pixels from a grd which is provided in grd. use \nclip/layer functions to select a portion of a larger grd.</p>\n<p>As you can see depending on the arguments given this does one of two \nthings, read some pixels or write some pixels. The area that is to be \nused is provided first, as a 2d(x,y,w,h) or 3d(x,y,z,w,h,d) area. To \nread or write the entire 2d image or the first frame of an animation \nuse (0,0,g.width,g.height)</p>\n<p>Returns nil,error if something goes wrong so can be used with assert \notherwise returns the requested data.</p>\n",
   "count": 1,
   "file": "../lua_grd/code/grd.lua",
   "line": 640,
   "name": "lua.wetgenes.grd.pixels",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/grd.lua"
  },
  {
   "body": "<pre><code>g:quant(num)\n</code></pre>\n<p>Convert to an 8bit indexed image containing a palette of the requested size.</p>\n<p>Returns nil,error if something goes wrong so can be used with assert \notherwise returns g so that we can chain the result.</p>\n",
   "count": 1,
   "file": "../lua_grd/code/grd.lua",
   "line": 593,
   "name": "lua.wetgenes.grd.quant",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/grd.lua"
  },
  {
   "body": "<pre><code>ga:remap(gb)\n</code></pre>\n<p>Fill gb with a remaped version of ga, each pixel is mapped to the closest palette entry.</p>\n",
   "count": 1,
   "file": "../lua_grd/code/grd.lua",
   "line": 1080,
   "name": "lua.wetgenes.grd.remap",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/grd.lua"
  },
  {
   "body": "<pre><code>g:reset()\n</code></pre>\n<p>Reset the grd which will now be a blank image of 0 dimensions.</p>\n<p>Returns nil,error if something goes wrong so can be used with assert \notherwise returns g so that we can chain the result.</p>\n",
   "count": 1,
   "file": "../lua_grd/code/grd.lua",
   "line": 370,
   "name": "lua.wetgenes.grd.reset",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/grd.lua"
  },
  {
   "body": "<pre><code>g:resize(w,h,d)\n</code></pre>\n<p>Resize the image to the given dimensions, this does not scale the image \ndata so instead each pixel will be in the same place after the resize. \nThis gives a crop effect when shrinking and extra blank area at the \nbottom right when growing. Useful if for instance you want to upload a \ntexture to OpenGL and need to change the size to be a power of two in \nwidth and height so you can mipmap it.\n    </p>\n",
   "count": 1,
   "file": "../lua_grd/code/grd.lua",
   "line": 719,
   "name": "lua.wetgenes.grd.resize",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/grd.lua"
  },
  {
   "body": "<pre><code>g:save(opts)\n</code></pre>\n<p>Save an image to memory or filesytem depending on settings in opts.</p>\n<pre><code>opts.fmt\n</code></pre>\n<p>Lets you choose an image format, the strings &quot;jpg&quot;,&quot;png&quot; or &quot;gif&quot; will \nbe converted to the appropriate wgrd.FMT_HINT_* value.</p>\n<p>We will guess opts.fmt from the file name extension if it is not \nprovided and a file name is.</p>\n<pre><code>opts.filename\n</code></pre>\n<p>Flags this as a load the file system and provides the file name to \nwrite to. If no filename is given then we will be saving into memory \nand be returning that data string as the first return value.</p>\n<p>Returns nil,error if something goes wrong so can be used with assert.</p>\n<p>If no file name is given then we <em>return</em> the data string that we saved.</p>\n",
   "count": 1,
   "file": "../lua_grd/code/grd.lua",
   "line": 461,
   "name": "lua.wetgenes.grd.save",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/grd.lua"
  },
  {
   "body": "<pre><code>g:scale(w,h,d)\n</code></pre>\n<p>Scale the image to the given dimensions, this is currently using a \nterrible scale filter that is only any good at halving or doubling the \nsize.</p>\n<p>This should only be used to create mipmaps until it is replaced with a \nbetter scale filter.\n    </p>\n",
   "count": 1,
   "file": "../lua_grd/code/grd.lua",
   "line": 737,
   "name": "lua.wetgenes.grd.scale",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/grd.lua"
  },
  {
   "body": "<pre><code>g:shrink(area)\n</code></pre>\n<p>area is an {x=0,y=0,z=0,w=100,h=100,d=100} style table specifying a 3D\narea, set {z=0,d=1} for a 2D area.</p>\n<p>You should set this to the full size of the image.</p>\n<p>This function looks at the pixels in that area and shrinks each edge \ninwards if it is fully transparent then return this new area in the \nsame table that was passed in.</p>\n<p>You can then use this information to crop this image resulting in a \nsmaller sized grd containing all the solid pixels.</p>\n",
   "count": 1,
   "file": "../lua_grd/code/grd.lua",
   "line": 816,
   "name": "lua.wetgenes.grd.shrink",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/grd.lua"
  },
  {
   "body": "<pre><code>g:slide(dx,dy,dz)\n</code></pre>\n<p>Slide the image along the x,y,z axis by the given amounts. The image wraps around the edges \nso no pixels are lost just moved around.</p>\n",
   "count": 1,
   "file": "../lua_grd/code/grd.lua",
   "line": 755,
   "name": "lua.wetgenes.grd.slide",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/grd.lua"
  },
  {
   "body": "<pre><code>ga:sort_cmap()\n</code></pre>\n<p>Sort cmap into a &quot;good&quot; order and remap the image.</p>\n",
   "count": 1,
   "file": "../lua_grd/code/grd.lua",
   "line": 1136,
   "name": "lua.wetgenes.grd.sort_cmap",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/grd.lua"
  },
  {
   "body": "<pre><code>stream=g:stream(filename)\nstream=g:stream({filename=filename,...})\n</code></pre>\n<p>Open a GIF stream, returns a table with the following functions,</p>\n<pre><code>stream:write(ga)\n</code></pre>\n<p>Add a frame to the gif, each frame should be the same size and color map.</p>\n<pre><code>stream:close()\n</code></pre>\n<p>Close the stream and finalise the GIF.</p>\n",
   "count": 1,
   "file": "../lua_grd/code/grd.lua",
   "line": 1041,
   "name": "lua.wetgenes.grd.stream",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/grd.lua"
  },
  {
   "body": "<pre><code>g:xor(ga)\n</code></pre>\n<p>Set our image data to the XOR of the image/palette data from ga and g.</p>\n<p>This is intended to be combined with g:shrink to work out the area of \nchange between the two images.</p>\n<p>Both grds must be the same size and format.</p>\n",
   "count": 1,
   "file": "../lua_grd/code/grd.lua",
   "line": 798,
   "name": "lua.wetgenes.grd.xor",
   "url": "https://github.com/xriss/gamecake/blob/master/lua_grd/code/grd.lua"
  },
  {
   "body": "<pre><code>local wgrdcanvas=require(&quot;wetgenes.grdcanvas&quot;)\n</code></pre>\n<p>We use wgrdcanvas as the local name of this library.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/grdcanvas.lua",
   "line": 6,
   "name": "lua.wetgenes.grdcanvas",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/grdcanvas.lua"
  },
  {
   "body": "<pre><code>local wgrdhistory=require(&quot;wetgenes.grdhistory&quot;)\n</code></pre>\n<p>We use wgrdhistory as the local name of this library.</p>\n<p>Add extra functionality to wetgenes.grd primarily these are functions that \nare used by swanky paint to manage its internal data.</p>\n",
   "count": 2,
   "file": "../lua/wetgenes/grdhistory.lua",
   "line": 6,
   "name": "lua.wetgenes.grdhistory",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/grdhistory.lua"
  },
  {
   "body": "<pre><code>local history=grdhistory.history(grd)\n</code></pre>\n<p>Create and bind a history object to the given grd object. The history \nlives inside the grd and can be accesd as grd.history just as the grd can \nbe accessed through the history as history.grd</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/grdhistory.lua",
   "line": 102,
   "name": "lua.wetgenes.grdhistory.history",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/grdhistory.lua"
  },
  {
   "body": "<pre><code>local wgrdlayers=require(&quot;wetgenes.grdlayers&quot;)\n</code></pre>\n<p>We use wgrdlayers as the local name of this library.</p>\n<p>Add extra functionality to wetgenes.grd primarily these are functions that \nare used by swanky paint to manage its internal data.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/grdlayers.lua",
   "line": 6,
   "name": "lua.wetgenes.grdlayers",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/grdlayers.lua"
  },
  {
   "body": "<pre><code>local wgrdpaint=require(&quot;wetgenes.grdpaint&quot;)\n</code></pre>\n<p>We use wgrdpaint as the local name of this library.</p>\n<p>Add extra functionality to wetgenes.grd primarily these are functions that \nare used by swanky paint to manage its internal data.</p>\n<p>Primarily we add a concept of &quot;layers&quot; and &quot;history&quot; these interfaces \nare added to a grd via a new object that lives inside the grd table and \nbinds them together.</p>\n<p>EG grd.history contains history data and functions.</p>\n<p>As these are written first for swankypaint they may only work with \nindexed images and are currently in state of flux so may take a while \nto settle down.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/grdpaint.lua",
   "line": 6,
   "name": "lua.wetgenes.grdpaint",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/grdpaint.lua"
  },
  {
   "body": "<pre><code>wgrdsvg=require(&quot;wetgenes.grdsvg&quot;)\n</code></pre>\n<p>Build svg files from grd data (bitmaps)</p>\n",
   "count": 2,
   "file": "../lua/wetgenes/grdsvg.lua",
   "line": 8,
   "name": "lua.wetgenes.grdsvg",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/grdsvg.lua"
  },
  {
   "body": "<pre><code>local svgstring=wgrdsvg.string(grd,opts)\n</code></pre>\n<p>Return an svg formated string that represents the input grd which must \nbe an indexed (8bit) format. Each pixel will be converted into a filled \nsvg rectangle element. Opts can contain the following options to \ncontrol the generation of the svg file.</p>\n<pre><code>opts.skip_transparent_pixels=true\n</code></pre>\n<p>Do not export a rectangle for fully transparent pixels.</p>\n<pre><code>opts.scalex=1\n</code></pre>\n<p>Width of each exported pixel.</p>\n<pre><code>opts.scaley=1\n</code></pre>\n<p>Height of each exported pixel.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/grdsvg.lua",
   "line": 21,
   "name": "lua.wetgenes.grdsvg.string",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/grdsvg.lua"
  },
  {
   "body": "<pre><code>local wjson=require(&quot;wetgenes.json&quot;)\n\n-- or export the main functions like so\nlocal json_encode,json_decode=require(&quot;wetgenes.json&quot;):export(&quot;encode&quot;,&quot;decode&quot;)\n</code></pre>\n<p>other json encode/decode using pure lua library seemed too slow, \nhere is a fast and loose one lets see if it goes any faster :) \nshould be a direct replacement for JSON4Lua which is what I was \nusing before I profiled where all the time was getting spent...</p>\n<p>I needed it to be pure json as I was running it on googles appengine so\nthe lua was actually running in java, no C available.</p>\n<p>Anyhow I hope it is useful, in order to get it running faster I cut \nacross some corners so you may find some obscure problems.</p>\n",
   "count": 3,
   "file": "../lua/wetgenes/json.lua",
   "line": 44,
   "name": "lua.wetgenes.json",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/json.lua"
  },
  {
   "body": "<pre><code>json_table = wjson.decode(json_string)\njson_table = wjson.decode(json_string,opts)\n</code></pre>\n<p>Convert a json string into a lua table.</p>\n<p>Set opts.null to wetgenes.json.null (or indeed any other value) if you \nwould like to have this as nulls in your results. By default nulls are \nreplaced with nil and therefore invisible.</p>\n<p>Any object key string that looks like a number will be converted to a \nnumber. This will probably reverse any numbers we converted to strings \nwhen encoding. Set opts.keystring=true to turn off this behaviour.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/json.lua",
   "line": 172,
   "name": "lua.wetgenes.json.decode",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/json.lua"
  },
  {
   "body": "<pre><code>json_string = wjson.encode(json_table)\njson_string = wjson.encode(json_table,opts)\n</code></pre>\n<p>Convert a lua table into a json string. Note it must be valid json, \nprimarily make sure that the table is either an array or a dictionary \nbut never both. Note that we can not tell the difference between an \nempty array and an empty object and will assume it is an object.</p>\n<p>An array must have a length&gt;0 and contain an element in the first slot, \neg array[1] and only contain numerical integer keys between 1 and the \nlength. This allows for the possibility of some nil holes depending on \nthe length lua returns but holes are not a good idea in arrays in lua. \nBest to use false or the special wjson.null value and avoid holes.</p>\n<p>Also some of the internal lua types will cause errors, eg functions \nas these can not be converted into json.</p>\n<p>include nulls in the output by using wetgenes.json.null</p>\n<p>opts is an optional table that can set the following options.</p>\n<pre><code>ops.pretty=true\nops.pretty=&quot; &quot;\n    Enable pretty printing, line feeds and indents and set each \n    indent level to multiples of the given string or &quot; &quot;.\n    \nops.white=true\nops.white=&quot; &quot;\n    Enable white space but not lines or indents, just a single space \n    between value assignment to make line wrapping easier.\n\nops.sort=true\n    Sort the keys, so we can create stable output for better diffing.\n</code></pre>\n",
   "count": 1,
   "file": "../lua/wetgenes/json.lua",
   "line": 320,
   "name": "lua.wetgenes.json.encode",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/json.lua"
  },
  {
   "body": "<p>(C) 2024 Kriss Blank and released under the MIT license, see \n<a href=\"http://opensource.org/licenses/MIT\">http://opensource.org/licenses/MIT</a> for full license text.</p>\n<p>I assume we are not competing in the lua json_diff library world so \njust call it json_diff</p>\n<pre><code>local json_diff=require(&quot;wetgenes.json_diff&quot;)\n</code></pre>\n<p>When we talk of json objects or json values we mean that the values \nmust be valid json. So no storing of functions/etc or mixxing of tables \nand objects. Infinite recursion where data links back into itself is \nalso not possible in json so not allowed/expected here.</p>\n<p>We assume we have data that could be validly serialised as json but \nthis is not enforced. If you want to be 100% safe then convert your \ndata to json text and back again before handing it to these functions.</p>\n<p>If a table has a length of more than 0 then it is considered a json \narray otherwise it is a json object. An empty table is considered an \nempty object there is no lua equivalent to an empty json array.</p>\n<p>Lua is not good with holes in its arrays, so that is also not suported.</p>\n<p>We do try and diff arrays of objects, but, since arrays may shift up \nand down it would be better if you had object maps of id to data and \narrays of ids that references these maps rather than arrays of objects.</p>\n<p>Json arrays must be normal lua tables, so first index is 1 not 0 this \nmay cause problems if your data is made of objects that have been \naccidently converted into arrays. Probably wont have happened but best \nto be aware of possible sharp edges.</p>\n",
   "count": 10,
   "file": "../lua/wetgenes/json_diff.lua",
   "line": 1,
   "name": "lua.wetgenes.json_diff",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/json_diff.lua"
  },
  {
   "body": "<p>apply a diff , please dupe a before handing it to this function as we \nwill be altering it.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/json_diff.lua",
   "line": 384,
   "name": "lua.wetgenes.json_diff.apply",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/json_diff.lua"
  },
  {
   "body": "<p>Given two arrays of json data, return the length , starta , startb of \nthe longest common subsequence in table indexes or nil if not similar.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/json_diff.lua",
   "line": 45,
   "name": "lua.wetgenes.json_diff.array_common",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/json_diff.lua"
  },
  {
   "body": "<p>Given two arrays of json data, return two synced arrays of arrays where \nas much json data as possible match in each sub batch.</p>\n<p>each of these arrays can be concatonated to create the original array.</p>\n<p>When stepping thoigh bothe arrays, matches are shown by the sub array \nhaving equality and differences will be insertions or deletions \ndepending on which of the two has the empty array.</p>\n<p>EG these two lists</p>\n<pre><code>[a,b,c,d,e,f]\n[a,b,e,f]\n</code></pre>\n<p>would become</p>\n<pre><code>[ [a,b] , [c,d] , [e,f] ]\n[ [a,b] , [] , [e,f] ]\n</code></pre>\n<p>The two [a,b] arrays will be equal to each other when tested with a \nsimple == compare as they are references to the same table.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/json_diff.lua",
   "line": 138,
   "name": "lua.wetgenes.json_diff.array_match",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/json_diff.lua"
  },
  {
   "body": "<p>Given two arrays of json data, return the length at the start and at the \nend that are the same. This tends to be a good first step when \ncomparing two chunks of text.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/json_diff.lua",
   "line": 102,
   "name": "lua.wetgenes.json_diff.array_trim",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/json_diff.lua"
  },
  {
   "body": "<p>Return a diff of two values</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/json_diff.lua",
   "line": 294,
   "name": "lua.wetgenes.json_diff.diff",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/json_diff.lua"
  },
  {
   "body": "<p>create a (possible) deep copy duplicate of a json value</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/json_diff.lua",
   "line": 370,
   "name": "lua.wetgenes.json_diff.dupe",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/json_diff.lua"
  },
  {
   "body": "<p>Compare two json values and return true if they are equal, this may \ndecend into a tree of tables and objects so can be an expensive test.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/json_diff.lua",
   "line": 230,
   "name": "lua.wetgenes.json_diff.equal",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/json_diff.lua"
  },
  {
   "body": "<p>Compare two json values and return true if they are similar arrays or \nobjects, this may descend into a tree of tables and objects so can be \nan expensive test.</p>\n<p>An array or object is similar if it contains at least one value that is \nthe same in both.</p>\n<p>Will return false if not given two objects or two arrays.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/json_diff.lua",
   "line": 265,
   "name": "lua.wetgenes.json_diff.similar",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/json_diff.lua"
  },
  {
   "body": "<p>undo a diff which <em>must</em> have been created with the both flag set in \norder to have undo data available.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/json_diff.lua",
   "line": 440,
   "name": "lua.wetgenes.json_diff.undo",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/json_diff.lua"
  },
  {
   "body": "<p>(C) 2024 Kriss Blank and released under the MIT license, see \n<a href=\"http://opensource.org/licenses/MIT\">http://opensource.org/licenses/MIT</a> for full license text.</p>\n<pre><code>local json_pack=require(&quot;wetgenes.json_pack&quot;)\n</code></pre>\n<p>Turn a valid json table into a binary data string and visa versa.</p>\n<p>A valid json table...</p>\n<pre><code>Does not include functions/userdata/etc.\n\nDoes not self reference.\n\nEach table should be an array or an object never both.\n\nMay have metatables as long as it is not too funky so added \nfunction calls for a class should be fine but this will obviously \nbe lost. Please test and check outputs if including meta.\n</code></pre>\n<p>So normal json style data.\n<br/>\n<br/></p>\n<p>Currently we are using cmsgpack and zlib, this may be changed if a \nbetter way is found.</p>\n",
   "count": 3,
   "file": "../lua/wetgenes/json_pack.lua",
   "line": 1,
   "name": "lua.wetgenes.json_pack",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/json_pack.lua"
  },
  {
   "body": "<pre><code>j=json_pack.from_data(d)\n</code></pre>\n<p>Where j is some json data and d is a binary string of the same data.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/json_pack.lua",
   "line": 57,
   "name": "lua.wetgenes.json_pack.from_data",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/json_pack.lua"
  },
  {
   "body": "<pre><code>d=json_pack.into_data(j)\n</code></pre>\n<p>Where j is some json data and d is a binary string of the same data.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/json_pack.lua",
   "line": 45,
   "name": "lua.wetgenes.json_pack.into_data",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/json_pack.lua"
  },
  {
   "body": "<pre><code>value = wetgenes.lookup(table,...)\n</code></pre>\n<p>Safe recursive lookup within a table that returns nil if any part of \nthe lookup is nil so we never cause an error but just return nil. \nThis is intended to replace the following sort of code</p>\n<pre><code>a = b and b.c and b.c.d and b.c.d.e\n</code></pre>\n<p>To get e only if all of its parent bits exist and not to cause any \nerror if they do not. instead use</p>\n<pre><code>a = lookup(b,&quot;c&quot;,&quot;d&quot;,&quot;e&quot;)\n</code></pre>\n",
   "count": 1,
   "file": "../lua/wetgenes/init.lua",
   "line": 128,
   "name": "lua.wetgenes.lookup",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/init.lua"
  },
  {
   "body": "",
   "count": 15,
   "name": "lua.wetgenes.midi"
  },
  {
   "body": "<pre><code>m:clients()\n</code></pre>\n<p>fetch table of clients</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/midi.lua",
   "line": 184,
   "name": "lua.wetgenes.midi.clients",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/midi.lua"
  },
  {
   "body": "<pre><code>m=wmidi.create()\n</code></pre>\n<p>Returns nil,error if something goes wrong so can be used with assert \notherwise returns a midi object.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/midi.lua",
   "line": 149,
   "name": "lua.wetgenes.midi.create",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/midi.lua"
  },
  {
   "body": "<pre><code>m:destroy()\n</code></pre>\n<p>Free the midi and associated memory. This will of course be done \nautomatically by garbage collection but you can force it explicitly \nusing this function.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/midi.lua",
   "line": 171,
   "name": "lua.wetgenes.midi.destroy",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/midi.lua"
  },
  {
   "body": "<pre><code>str = m:event_to_string(event)\n</code></pre>\n<p>Convert an event to a single line string for printing to the console.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/midi.lua",
   "line": 708,
   "name": "lua.wetgenes.midi.event_to_string",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/midi.lua"
  },
  {
   "body": "<pre><code>m:get()\n</code></pre>\n<p>get all values for this connection and store them in m</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/midi.lua",
   "line": 240,
   "name": "lua.wetgenes.midi.get",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/midi.lua"
  },
  {
   "body": "<pre><code>m:peek(it)\n</code></pre>\n<p>Returns a event if there is one or null if none are currently \navailable.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/midi.lua",
   "line": 568,
   "name": "lua.wetgenes.midi.peek",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/midi.lua"
  },
  {
   "body": "<pre><code>p = m:port_create(name,caps,type)\n</code></pre>\n<p>Create a port with the given name and capability bits and type.</p>\n<p>bits and type are either a number or a table of bitnames.</p>\n<p>Returns the number of the port created which should be used in \nport_destroy or nil if something went wrong.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/midi.lua",
   "line": 264,
   "name": "lua.wetgenes.midi.port_create",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/midi.lua"
  },
  {
   "body": "<pre><code>m:port_destroy(num)\n</code></pre>\n<p>Destroy a previously created port. Returns nil on failure, true on \nsuccess.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/midi.lua",
   "line": 290,
   "name": "lua.wetgenes.midi.port_destroy",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/midi.lua"
  },
  {
   "body": "<pre><code>m:pull(it)\n</code></pre>\n<p>Receive an input midi event, blocking until there is one.</p>\n<p>Occasionally, for &quot;reasons&quot; this may return nil.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/midi.lua",
   "line": 553,
   "name": "lua.wetgenes.midi.pull",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/midi.lua"
  },
  {
   "body": "<pre><code>m:push(it)\n</code></pre>\n<p>Send an output midi event.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/midi.lua",
   "line": 539,
   "name": "lua.wetgenes.midi.push",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/midi.lua"
  },
  {
   "body": "<pre><code>m:set()\n</code></pre>\n<p>set all values for this connection from values found in m</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/midi.lua",
   "line": 252,
   "name": "lua.wetgenes.midi.set",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/midi.lua"
  },
  {
   "body": "<pre><code>client,port = m:string_to_clientport(str)\n</code></pre>\n<p>Convert a &quot;client:port&quot; string to two numbers client,port this can \neither be two decimal numbers or, if a m:scan() has been performed, \nthen a partial case insensitive matching to the name of existing \nclients and ports may get a port number.</p>\n<p>Will return a nil if we can not work out which client or port you mean.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/midi.lua",
   "line": 640,
   "name": "lua.wetgenes.midi.string_to_clientport",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/midi.lua"
  },
  {
   "body": "<pre><code>m:subscribe{\n    source_client=0,\tsource_port=0,\n    dest_client=1,\t\tdest_port=0,\n}\n\nm:subscribe{\n    source=&quot;0:0&quot;,\n    dest=&quot;1:0&quot;,\n}\n</code></pre>\n<p>Creates a persistent subscription between two ports.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/midi.lua",
   "line": 582,
   "name": "lua.wetgenes.midi.subscribe",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/midi.lua"
  },
  {
   "body": "<pre><code>m:unsubscribe{\n    source_client=0,\tsource_port=0,\n    dest_client=1,\t\tdest_port=0,\n}\n\nm:unsubscribe{\n    source=&quot;0:0&quot;,\n    dest=&quot;1:0&quot;,\n}\n</code></pre>\n<p>Removes a persistent subscription from between two ports.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/midi.lua",
   "line": 611,
   "name": "lua.wetgenes.midi.unsubscribe",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/midi.lua"
  },
  {
   "body": "<pre><code>wpackage=require(&quot;wetgenes.package&quot;)\n</code></pre>\n<p>Some generic lowlevel functions for messing about with how lua works, \neg how modules are loaded.</p>\n",
   "count": 2,
   "file": "../lua/wetgenes/package.lua",
   "line": 8,
   "name": "lua.wetgenes.package",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/package.lua"
  },
  {
   "body": "<pre><code>local module=wpackage.reload(modulename)\n</code></pre>\n<p>A wrapper for require that forces a very dumb module reload by merging \na newly loaded module into the old module table if one already exists \nthis can easily break everything but should mostly work out of dumb \nluck.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/package.lua",
   "line": 21,
   "name": "lua.wetgenes.package.reload",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/package.lua"
  },
  {
   "body": "<p>Manage file paths under linux or windows, so we need to deal with \\ or \n/ and know the root difference between / and C:\\</p>\n<pre><code>local wpath=require(&quot;wetgenes.path&quot;)\n</code></pre>\n",
   "count": 15,
   "file": "../lua/wetgenes/path.lua",
   "line": 7,
   "name": "lua.wetgenes.path",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/path.lua"
  },
  {
   "body": "<p>Get the current working directory, this requires lfs and if lfs is not \navailable then it will return wpath.root this path will have a trailing \nseparator so can be joined directly to a filename.</p>\n<pre><code>wpath.currentdir()..&quot;filename.ext&quot;\n</code></pre>\n",
   "count": 1,
   "file": "../lua/wetgenes/path.lua",
   "line": 247,
   "name": "lua.wetgenes.path.currentdir",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/path.lua"
  },
  {
   "body": "<pre><code>local dir=wpath.dir(path)\n</code></pre>\n<p>This is a small utility function to perform a wpath.resolve then \nwpath.parse and return the dir component of the result.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/path.lua",
   "line": 340,
   "name": "lua.wetgenes.path.dir",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/path.lua"
  },
  {
   "body": "<pre><code>local ext=wpath.ext(path)\n</code></pre>\n<p>This is a small utility function to perform a wpath.resolve then \nwpath.parse and return the ext component of the result.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/path.lua",
   "line": 400,
   "name": "lua.wetgenes.path.ext",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/path.lua"
  },
  {
   "body": "<pre><code>local folder=wpath.folder(path)\n</code></pre>\n<p>This is a small utility function to perform a wpath.resolve then \nwpath.parse and return the folder component of the result.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/path.lua",
   "line": 376,
   "name": "lua.wetgenes.path.folder",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/path.lua"
  },
  {
   "body": "<p>join a split path, tables are auto expanded</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/path.lua",
   "line": 99,
   "name": "lua.wetgenes.path.join",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/path.lua"
  },
  {
   "body": "<pre><code>local name=wpath.name(path)\n</code></pre>\n<p>This is a small utility function to perform a wpath.resolve then \nwpath.parse and return the name component of the result.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/path.lua",
   "line": 388,
   "name": "lua.wetgenes.path.name",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/path.lua"
  },
  {
   "body": "<p>remove &quot;..&quot; and &quot;.&quot; components from the path string</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/path.lua",
   "line": 205,
   "name": "lua.wetgenes.path.normalize",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/path.lua"
  },
  {
   "body": "<p>Resolve input and go up a single directory level, ideally you should \npass in a directory, IE a string that ends in / or \\ and we will return \nthe parent of this directory.</p>\n<p>If called repeatedly, then eventually we will return wpath.root</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/path.lua",
   "line": 327,
   "name": "lua.wetgenes.path.parent",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/path.lua"
  },
  {
   "body": "<p>split a path into named parts like so</p>\n<pre><code>|--------------------------------------------|\n|                     path                   |\n|-----------------------|--------------------|\n|         dir           |        file        |\n|----------|------------|----------|---------|\n| root [1] | folder [2] | name [3] | ext [4] |\n|----------|------------|----------|---------|\n| /        | home/user/ | file     | .txt    |\n|----------|------------|----------|---------|\n</code></pre>\n<p>this can be reversed with simple joins and checks for nil, note that \n[1][2][3][4] are forced strings so will be &quot;&quot; rather than nil unlike \ntheir named counterparts. This means you may use wpath.join to reverse \nthis parsing.</p>\n<pre><code>dir = (root or &quot;&quot;)..(folder or &quot;&quot;)\nfile = (name or &quot;&quot;)..(ext or &quot;&quot;)\npath = (dir or &quot;&quot;)..(file or &quot;&quot;)\npath = (root or &quot;&quot;)..(folder or &quot;&quot;)..(name or &quot;&quot;)..(ext or &quot;&quot;)\npath = [1]..[2]..[3]..[4]\npath = wpath.join(it)\n</code></pre>\n<p>if root is set then it implies an absolute path and will be something \nlike C:\\ under windows.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/path.lua",
   "line": 123,
   "name": "lua.wetgenes.path.parse",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/path.lua"
  },
  {
   "body": "<p>Build a relative path from point a to point b this will probably be a \nbunch of ../../../ followed by some of the ending of the second \nargument.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/path.lua",
   "line": 291,
   "name": "lua.wetgenes.path.relative",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/path.lua"
  },
  {
   "body": "<p>Join all path segments and resolve them to absolute using wpath.join \nand wpath.normalize with a prepended wpath.currentdir as necessary.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/path.lua",
   "line": 273,
   "name": "lua.wetgenes.path.resolve",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/path.lua"
  },
  {
   "body": "<pre><code>local root=wpath.root(path)\n</code></pre>\n<p>This is a small utility function to perform a wpath.resolve then \nwpath.parse and return the root component of the result.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/path.lua",
   "line": 364,
   "name": "lua.wetgenes.path.root",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/path.lua"
  },
  {
   "body": "<p>setup for windows or linux style paths, to force one or the other use</p>\n<pre><code>wpath.setup(&quot;win&quot;)\nwpath.setup(&quot;nix&quot;)\n</code></pre>\n<p>We automatically call this at startup and make a best guess, you can \nrevert to this best guess with</p>\n<pre><code>wpath.setup()\n</code></pre>\n<p>This is a global setting, so be careful with changes. Mostly its \nprobably best to stick with the best guess unless we are mistakenly \nguessing windows.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/path.lua",
   "line": 21,
   "name": "lua.wetgenes.path.setup",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/path.lua"
  },
  {
   "body": "<p>split a path into numbered components</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/path.lua",
   "line": 73,
   "name": "lua.wetgenes.path.split",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/path.lua"
  },
  {
   "body": "",
   "count": 4,
   "name": "lua.wetgenes.plate"
  },
  {
   "body": "<pre><code>value=wetgenes.plate.replace_lookup(name,data)\n</code></pre>\n<p>Calls &quot;wetgenes.plate.table_lookup&quot; then performs special formatting on \ntable returns.</p>\n<p>Always returns a string or nil, so number values will converted to a \nstring.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/plate.lua",
   "line": 91,
   "name": "lua.wetgenes.plate.replace_lookup",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/plate.lua"
  },
  {
   "body": "<pre><code>bool=wetgenes.plate.replace_lookup_istable(name,data)\n</code></pre>\n<p>Test if the return from &quot;wplate.table_lookup&quot; is a table.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/plate.lua",
   "line": 75,
   "name": "lua.wetgenes.plate.replace_lookup_istable",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/plate.lua"
  },
  {
   "body": "<pre><code>value=wetgenes.plate.table_lookup(name,data)\n</code></pre>\n<p>look up name inside data and return the value we found if we don&#39;t \nfind anything then we return nil</p>\n<p>name.name.name syntax may be used to reference tables within tables.</p>\n<p>A name that looks like a number may be converted into a number if it \ndoesnt exist as a string key, so &quot;array.1&quot; can be used to return the \nfirst item from an array.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/plate.lua",
   "line": 15,
   "name": "lua.wetgenes.plate.table_lookup",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/plate.lua"
  },
  {
   "body": "<pre><code>rnd = wetgenes.rnd64k(seed)\n\nr\t= rnd()\t\t-- a fraction between 0 and 1 inclusive\nr\t= rnd(a)\t-- an integer between 1 and a inclusive\nr\t= rnd(a,b)\t-- an integer between a and b inclusive\n</code></pre>\n<p>a sequence of 65536 numbers starting at seed which should be an integer \nbetween 0 and 65535 or a string which will be used to generate this \nnumber.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/init.lua",
   "line": 21,
   "name": "lua.wetgenes.rnd64k",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/init.lua"
  },
  {
   "body": "<pre><code>... = wetgenes.safecall(func,...)\n</code></pre>\n<p>Call a function func(...) wrapped in an xpcall to catch and ignore \nerrors, the errors are printed to stderr with a traceback and the \nfunction returns nil on an error.</p>\n<p>So provided the function returns not nil on success then you can still \ntell if the function completed OK. Best to use for things that are OK \nto fail and the rest of the code will work around it.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/init.lua",
   "line": 65,
   "name": "lua.wetgenes.safecall",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/init.lua"
  },
  {
   "body": "<pre><code>savefunc = wetgenes.safecall(func)\n</code></pre>\n<p>Wrap a funciton in safecall, so it will never generate errors but can \nbe called as normal.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/init.lua",
   "line": 87,
   "name": "lua.wetgenes.safewrap",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/init.lua"
  },
  {
   "body": "<pre><code>gamecake -e&quot; require(&#39;wetgenes&#39;).savescripts(&#39;./&#39;) &quot;\n</code></pre>\n<p>Run the above from the command line.</p>\n<p>This will export all the gamecake internal strings into the file system \nit is saved into the current directory so be careful where you run it.</p>\n<p>Game Cake checks the files system first so, these files can be modified \nand they will replace the built in versions.</p>\n<pre><code>gamecake -e&quot; require(&#39;wetgenes&#39;).savescripts(&#39;./internal/&#39;) &quot;\n</code></pre>\n<p>This is a safer version that will save the files to ./internal/lua/* \ninstead of just ./lua/*</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/init.lua",
   "line": 234,
   "name": "lua.wetgenes.set_env",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/init.lua"
  },
  {
   "body": "<pre><code>-- copy all globals into locals, some locals are prefixed with a G to reduce name clashes\nlocal coroutine,package,string,table,math,io,os,debug,assert,dofile,error,_G,getfenv,getmetatable,ipairs,Gload,loadfile,loadstring,next,pairs,pcall,print,rawequal,rawget,rawset,select,setfenv,setmetatable,tonumber,tostring,type,unpack,_VERSION,xpcall,module,require=coroutine,package,string,table,math,io,os,debug,assert,dofile,error,_G,getfenv,getmetatable,ipairs,load,loadfile,loadstring,next,pairs,pcall,print,rawequal,rawget,rawset,select,setfenv,setmetatable,tonumber,tostring,type,unpack,_VERSION,xpcall,module,require\n\n-- grab some util functions\nlocal export,lookup,set_env=require(&quot;wetgenes&quot;):export(&quot;export&quot;,&quot;lookup&quot;,&quot;set_env&quot;)\n\n-- single line replacement for the module creation function\nlocal M={} ; package.loaded[(...)]=M ; M.module_name=(...) ; M.export=export\n</code></pre>\n<br/>\n<br/>\n\n<p>A place to keep bits of code that needs to be copypasta into most \nmodules, for instance above is the current boilerplate code to be \nused when starting a new module.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/snipets.lua",
   "line": 13,
   "name": "lua.wetgenes.snippets",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/snipets.lua"
  },
  {
   "body": "<pre><code>local spew=require(&quot;wetgenes.spew&quot;).connect(oven.tasks)\n</code></pre>\n<p>You must pass in a previously created tasks object that you will be \ncalling update on regually so that our coroutines can run. eg oven.tasks</p>\n<p>Connect and talk to the wetgenes spew server using wetgenes.tasks \ntask for meta state and a thread for lowlevel sockets.</p>\n<p>You push messages in and can pull messages out or, setup a hook \nfunction to auto pull and process messages in our coroutine as they are \nreceived.</p>\n",
   "count": 3,
   "file": "../lua/wetgenes/spew.lua",
   "line": 11,
   "name": "lua.wetgenes.spew",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/spew.lua"
  },
  {
   "body": "<pre><code>local spew=require(&quot;wetgenes.spew&quot;).connect(oven.tasks)\nlocal spew=require(&quot;wetgenes.spew&quot;).connect(oven.tasks,host)\nlocal spew=require(&quot;wetgenes.spew&quot;).connect(oven.tasks,host,port)\n</code></pre>\n<p>You must pass in an active tasks object.</p>\n<p>Create task and thread connection to the host. host and port \ndefault to wetgenes.com and 5223 so can be left blank unless you want \nto connect to a local host for debugging.</p>\n<p>There are now 3 ways to handle msgs</p>\n<pre><code>spew.push(msg)\n</code></pre>\n<p>To send a msg</p>\n<pre><code>local msg,s=spew.pull()\n</code></pre>\n<p>To receive a message, will return nil if no messages available. The \nsecond return value is the input string packet for this decoded \nmessage.</p>\n<pre><code>spew.hook=function(msg,s) print(msg) end\n</code></pre>\n<p>Set a hook functions to auto pull all available messages durring tasks \nupdate. Note that if you do this spew.pull() will no longer work as all \nmessages are auto pulled and sent to this hook function.</p>\n<p>Note when receiving a msg you must not alter or cache the table you \nare given as it is internal data and is reused. You must duplicate it \nif you want to keep it arround.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/spew.lua",
   "line": 32,
   "name": "lua.wetgenes.spew.connect",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/spew.lua"
  },
  {
   "body": "<p>test</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/spew.lua",
   "line": 279,
   "name": "lua.wetgenes.spew.test",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/spew.lua"
  },
  {
   "body": "<p>Time And Relative Dimensions In Space is of course the perfect name for\na library of matrix based math functions.</p>\n<pre><code>local tardis=require(&quot;wetgenes.tardis&quot;)\n</code></pre>\n<p>This tardis is a lua library for manipulating time and space with numbers.\nDesigned to work as pure lua but with a faster, but less accurate, f32 core by\ndefault. ( this core seems to be slightly faster/same speed as vanilla lua but\nslower than luajit , so is currently disabled )</p>\n<p>Recoil in terror as we use two glyph names for classes whilst typing in\nrandom strings of numbers and operators that may or may not contain\ntyops.</p>\n<pre><code>v# vector [#]\nm# matrix [#][#]\nq4 quaternion\n</code></pre>\n<p>Each class is a table of # values [1] to [#] the 2d number streams are\nformatted the same as opengl (row-major) and metatables are used to\nprovide methods.</p>\n<p>The easy way of remembering the opengl 4x4 matrix layout is that the\ntranslate x,y,z values sit at 13,14,15 and 4,8,12,16 is normally set\nto the constant 0,0,0,1 for most transforms.</p>\n<pre><code>     | 1  5  9  13 |\n     | 2  6  10 14 |\nm4 = | 3  7  11 15 |\n     | 4  8  12 16 |\n</code></pre>\n<p>This seems to be the simplest (programmer orientated) description of\nmost of the maths used here so go read it if you want to know what the\nfunny words mean.</p>\n<p><a href=\"http://www.j3d.org/matrix_faq/matrfaq_latest.html\">http://www.j3d.org/matrix_faq/matrfaq_latest.html</a></p>\n",
   "count": 174,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 26,
   "name": "lua.wetgenes.tardis",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<p>Array is the base class for all other tardis classes, it is just a\nstream of numbers, probably in a table but possibly a chunk of f32\nvalues in a userdata.</p>\n",
   "count": 36,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 133,
   "name": "lua.wetgenes.tardis.array",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>r = array.__add(a,b)\n</code></pre>\n<p>Add a to b and return a a.new(result) so the class returned will match the\ninput class of a and neither a or b will be modified.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 162,
   "name": "lua.wetgenes.tardis.array.__add",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>r = array.__div(a,b)\n</code></pre>\n<p>Replace b with 1/b and then call the appropriate product function depending on\nthe argument classes. Always creates and returns a.new() value.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 222,
   "name": "lua.wetgenes.tardis.array.__div",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>r = array.__eq(a,b)\n</code></pre>\n<p>meta to call a:compare(b) and return the result</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 198,
   "name": "lua.wetgenes.tardis.array.__eq",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>r = array.__mul(a,b)\n</code></pre>\n<p>Call the appropriate product function depending on the argument classes. Always\ncreates and returns a.new() value.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 209,
   "name": "lua.wetgenes.tardis.array.__mul",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>r = array.__sub(a,b)\n</code></pre>\n<p>Subtract b from a and return a a.new(result) so the class returned will match the\ninput class of a and neither a or b will be modified.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 174,
   "name": "lua.wetgenes.tardis.array.__sub",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>string = array.__tostring(it)\n</code></pre>\n<p>Convert an array to a string this is called by the lua tostring() function,</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 143,
   "name": "lua.wetgenes.tardis.array.__tostring",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>r = array.__unm(a)\n</code></pre>\n<p>Subtract b from 0 and return a a.new(result) so the class returned will match the\ninput class of a but a will not be modified</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 186,
   "name": "lua.wetgenes.tardis.array.__unm",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>r=it:abs(r)\nr=it:abs(it.new())\n</code></pre>\n<p>Perform math.abs on all values of this array.</p>\n<p>If r is provided then the result is written into r and returned otherwise it is\nmodified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 468,
   "name": "lua.wetgenes.tardis.array.abs",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>r=it:acos(r)\nr=it:acos(it.new())\n</code></pre>\n<p>Perform math.acos on all values of this array.</p>\n<p>If r is provided then the result is written into r and returned otherwise it is\nmodified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 633,
   "name": "lua.wetgenes.tardis.array.acos",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>r=it:add(b,r)\nr=it:add(b,it.new())\n</code></pre>\n<p>Add b to it. b may be a number or another array of the same size as this array.</p>\n<p>If r is provided then the result is written into r and returned otherwise it is\nmodified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 352,
   "name": "lua.wetgenes.tardis.array.add",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>r=it:asin(r)\nr=it:asin(it.new())\n</code></pre>\n<p>Perform math.asin on all values of this array.</p>\n<p>If r is provided then the result is written into r and returned otherwise it is\nmodified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 600,
   "name": "lua.wetgenes.tardis.array.asin",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>r=it:atan(r)\nr=it:atan(it.new())\n</code></pre>\n<p>Perform math.atan on all values of this array.</p>\n<p>If r is provided then the result is written into r and returned otherwise it is\nmodified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 666,
   "name": "lua.wetgenes.tardis.array.atan",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>r=it:ceil(r)\nr=it:ceil(it.new())\n</code></pre>\n<p>Perform math.ceil on all values of this array.</p>\n<p>If r is provided then the result is written into r and returned otherwise it is\nmodified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 502,
   "name": "lua.wetgenes.tardis.array.ceil",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>a=a:compare(b)\na=a:compare(1,2,3,4)\n</code></pre>\n<p>Are the numbers in b the same as the numbers in a, this function will\nreturn true if they are and false if they are not.</p>\n<p>If the arrays are of different lengths then this will return false.</p>\n<p>Numbers to test for can be given explicitly in the arguments and we\nfollow the same one level of tables rule as we do with array.set so any\nclass derived from array can be used.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 717,
   "name": "lua.wetgenes.tardis.array.compare",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>r=it:cos(r)\nr=it:cos(it.new())\n</code></pre>\n<p>Perform math.cos on all values of this array.</p>\n<p>If r is provided then the result is written into r and returned otherwise it is\nmodified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 617,
   "name": "lua.wetgenes.tardis.array.cos",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>r=it:exp(r)\nr=it:exp(it.new())\n</code></pre>\n<p>Perform math.exp on all values of this array.</p>\n<p>If r is provided then the result is written into r and returned otherwise it is\nmodified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 451,
   "name": "lua.wetgenes.tardis.array.exp",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>r=it:floor(r)\nr=it:floor(it.new())\n</code></pre>\n<p>Perform math.floor on all values of this array.</p>\n<p>If r is provided then the result is written into r and returned otherwise it is\nmodified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 485,
   "name": "lua.wetgenes.tardis.array.floor",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>r=it:fract(r)\nr=it:fract(it.new())\n</code></pre>\n<p>Return the fractional part of each value using math.modf.</p>\n<p>If r is provided then the result is written into r and returned otherwise it is\nmodified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 395,
   "name": "lua.wetgenes.tardis.array.fract",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>r=it:log(r)\nr=it:log(it.new())\n</code></pre>\n<p>Perform math.log on all values of this array.</p>\n<p>If r is provided then the result is written into r and returned otherwise it is\nmodified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 434,
   "name": "lua.wetgenes.tardis.array.log",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>r=it:max()\n</code></pre>\n<p>Return a single number value that is the maximum of all values in this array.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 340,
   "name": "lua.wetgenes.tardis.array.max",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>r=it:min()\n</code></pre>\n<p>Return a single number value that is the minimum of all values in this array.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 329,
   "name": "lua.wetgenes.tardis.array.min",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>r=a:mix(b,s,r)\n</code></pre>\n<p>Mix values between a and b where a is returned if s=0 and b is returned if s=1</p>\n<p>If r is provided then the result is written into r and returned otherwise a is\nmodified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 699,
   "name": "lua.wetgenes.tardis.array.mix",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>a = tardis.array.new()\na = tardis.array.new(1,2,3)\n</code></pre>\n<p>Create a new array and optionally set it to the given values which will\nalso control its base length.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 234,
   "name": "lua.wetgenes.tardis.array.new",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>r=it:pow(p,r)\nr=it:pow(p,it.new())\n</code></pre>\n<p>Perform math.pow(it,p) on all values of this array. p may be a number or\nanother array of the same size as this array.</p>\n<p>If r is provided then the result is written into r and returned otherwise it is\nmodified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 412,
   "name": "lua.wetgenes.tardis.array.pow",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>ma = ma:product(mb)\nma = ma:product(mb,r)\n</code></pre>\n<p>Look at the type and call the appropriate product function, to produce</p>\n<pre><code>mb x ma\n</code></pre>\n<p>Note the right to left application and default returning of the\nleftmost term for chaining. This seems to make the most sense.</p>\n<p>If r is provided then the result is written into r and returned\notherwise ma is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 749,
   "name": "lua.wetgenes.tardis.array.product",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>r=it:quantize(1/1024,r)\nr=it:quantize(s,it.new())\n</code></pre>\n<p>Perform a trunc(v/s)*s on all values of this array. We recomended the\nuse of a power of two, eg 1/1024 rather than 1/1000 if you wanted 3\ndecimal digits.</p>\n<p>If r is provided then the result is written into r and returned\notherwise it is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 560,
   "name": "lua.wetgenes.tardis.array.quantize",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>r=it:round(r)\nr=it:round(it.new())\n</code></pre>\n<p>Perform math.floor( v+0.5 ) on all values of this array. Which will\nround up or down to the nearest integer.</p>\n<p>If r is provided then the result is written into r and returned otherwise it is\nmodified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 519,
   "name": "lua.wetgenes.tardis.array.round",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>r=a:scalar(s,r)\n</code></pre>\n<p>Multiply all value in array by number.</p>\n<p>If r is provided then the result is written into r and returned otherwise a is\nmodified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 683,
   "name": "lua.wetgenes.tardis.array.scalar",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>a=a:set(1,2,3,4)\na=a:set({1,2,3,4})\na=a:set({1,2},{3,4})\na=a:set(function(i) return i end)\n</code></pre>\n<p>Assign some numbers to an array, all the above examples will assign 1,2,3,4 to\nthe first four slots in the given array, as you can see we allow one level of\ntables. Any class that is based on this array class can be used instead of an\nexplicit table. So we can use a v2 or v3 or m4 etc etc.</p>\n<p>if more numbers are given than the size of the array then they will be\nignored.</p>\n<p>if less numbers are given than the size of the array then the last number will\nbe repeated.</p>\n<p>if no numbers are given then nothing will be done</p>\n<p>if a function is given it will be called with the index and should\nreturn a number.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 245,
   "name": "lua.wetgenes.tardis.array.set",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>r=it:sin(r)\nr=it:sin(it.new())\n</code></pre>\n<p>Perform math.sin on all values of this array.</p>\n<p>If r is provided then the result is written into r and returned otherwise it is\nmodified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 584,
   "name": "lua.wetgenes.tardis.array.sin",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>r=it:sub(b,r)\nr=it:sub(b,it.new())\n</code></pre>\n<p>Subtract b from it. b may be a number or another array of the same size as this\narray.</p>\n<p>If r is provided then the result is written into r and returned otherwise it is\nmodified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 373,
   "name": "lua.wetgenes.tardis.array.sub",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>r=it:tan(r)\nr=it:tan(it.new())\n</code></pre>\n<p>Perform math.tan on all values of this array.</p>\n<p>If r is provided then the result is written into r and returned otherwise it is\nmodified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 650,
   "name": "lua.wetgenes.tardis.array.tan",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>r=it:trunc(r)\nr=it:trunc(it.new())\n</code></pre>\n<p>Perform math.floor on positive values and math ceil on negative values\nfor all values of this array. So a trunication that will always error\ntowards 0.</p>\n<p>If r is provided then the result is written into r and returned otherwise it is\nmodified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 537,
   "name": "lua.wetgenes.tardis.array.trunc",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>a1,a2=v2:unpack()\na1,a2,a3=v3:unpack()\na1,a2,a3,a4=v4:unpack()\n</code></pre>\n<p>Return all values in this array. Note this should be used instead of\nthe unpack function for future optimisation safety.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 303,
   "name": "lua.wetgenes.tardis.array.unpack",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>a=a:zero()\n</code></pre>\n<p>Set all values in this array to zero.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 317,
   "name": "lua.wetgenes.tardis.array.zero",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>metatable=tardis.class(name,class,...)\n</code></pre>\n<p>Create a new metatable for an object class, optionally inheriting from other previously\ndeclared classes.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 103,
   "name": "lua.wetgenes.tardis.class",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<p>A 3d space line class.</p>\n<p>[1]position , [2]normal</p>\n<p>We also inherit all the functions from tardis.array</p>\n",
   "count": 2,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2945,
   "name": "lua.wetgenes.tardis.line",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>line = tardis.line.new(p,n)\n</code></pre>\n<p>Create a new line and optionally set it to the given values.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2957,
   "name": "lua.wetgenes.tardis.line.new",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<p>The metatable for a 2x2 matrix class, use the new function to actually create an object.</p>\n<p>We also inherit all the functions from tardis.array</p>\n",
   "count": 10,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 781,
   "name": "lua.wetgenes.tardis.m2",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m2 = m2:adjugate()\nm2 = m2:adjugate(r)\n</code></pre>\n<p>Adjugate this m2.</p>\n<p>If r is provided then the result is written into r and returned\notherwise m2 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 893,
   "name": "lua.wetgenes.tardis.m2.adjugate",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m2 = m2:cofactor()\nm2 = m2:cofactor(r)\n</code></pre>\n<p>Cofactor this m2.</p>\n<p>If r is provided then the result is written into r and returned\notherwise m2 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 866,
   "name": "lua.wetgenes.tardis.m2.cofactor",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>value = m2:determinant()\n</code></pre>\n<p>Return the determinant value of this m2.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 809,
   "name": "lua.wetgenes.tardis.m2.determinant",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m2 = m2:identity()\n</code></pre>\n<p>Set this m2 to the identity matrix.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 800,
   "name": "lua.wetgenes.tardis.m2.identity",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m2 = m2:inverse()\nm2 = m2:inverse(r)\n</code></pre>\n<p>Inverse this m2.</p>\n<p>If r is provided then the result is written into r and returned\notherwise m2 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 909,
   "name": "lua.wetgenes.tardis.m2.inverse",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>value = m2:minor_xy()\n</code></pre>\n<p>Return the minor_xy value of this m2.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 823,
   "name": "lua.wetgenes.tardis.m2.minor_xy",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m2 = tardis.m2.new()\n</code></pre>\n<p>Create a new m2 and optionally set it to the given values, m2 methods\nusually return the input m2 for easy function chaining.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 790,
   "name": "lua.wetgenes.tardis.m2.new",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m2 = m2:scale(s)\nm2 = m2:scale(s,r)\n</code></pre>\n<p>Scale this m2 by s.</p>\n<p>If r is provided then the result is written into r and returned\notherwise m2 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 850,
   "name": "lua.wetgenes.tardis.m2.scale",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m2 = m2:transpose()\nm2 = m2:transpose(r)\n</code></pre>\n<p>Transpose this m2.</p>\n<p>If r is provided then the result is written into r and returned\notherwise m2 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 834,
   "name": "lua.wetgenes.tardis.m2.transpose",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<p>The metatable for a 3x3 matrix class, use the new function to actually\ncreate an object.</p>\n<p>We also inherit all the functions from tardis.array</p>\n",
   "count": 12,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 928,
   "name": "lua.wetgenes.tardis.m3",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m3 = m3:adjugate()\nm3 = m3:adjugate(r)\n</code></pre>\n<p>Adjugate this m3.</p>\n<p>If r is provided then the result is written into r and returned\notherwise m3 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1081,
   "name": "lua.wetgenes.tardis.m3.adjugate",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m3 = m3:cofactor()\nm3 = m3:cofactor(r)\n</code></pre>\n<p>Cofactor this m3.</p>\n<p>If r is provided then the result is written into r and returned\notherwise m3 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1054,
   "name": "lua.wetgenes.tardis.m3.cofactor",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>value = m3:determinant()\n</code></pre>\n<p>Return the determinant value of this m3.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 987,
   "name": "lua.wetgenes.tardis.m3.determinant",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m3 = m3:identity()\n</code></pre>\n<p>Set this m3 to the identity matrix.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 948,
   "name": "lua.wetgenes.tardis.m3.identity",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m3 = m3:inverse()\nm3 = m3:inverse(r)\n</code></pre>\n<p>Inverse this m3.</p>\n<p>If r is provided then the result is written into r and returned\notherwise m3 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1097,
   "name": "lua.wetgenes.tardis.m3.inverse",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m4 = m3:m4()\n</code></pre>\n<p>Expand an m3 matrix into an m4 matrix.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 957,
   "name": "lua.wetgenes.tardis.m3.m4",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>value = m3:minor_xy()\n</code></pre>\n<p>Return the minor_xy value of this m3.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1003,
   "name": "lua.wetgenes.tardis.m3.minor_xy",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m3 = tardis.m3.new()\n</code></pre>\n<p>Create a new m3 and optionally set it to the given values, m3 methods\nusually return the input m3 for easy function chaining.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 938,
   "name": "lua.wetgenes.tardis.m3.new",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m3 = m3:scale(s)\nm3 = m3:scale(s,r)\n</code></pre>\n<p>Scale this m3 by s.</p>\n<p>If r is provided then the result is written into r and returned\notherwise m3 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1038,
   "name": "lua.wetgenes.tardis.m3.scale",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m3 = m3:transpose()\nm3 = m3:transpose(r)\n</code></pre>\n<p>Transpose this m3.</p>\n<p>If r is provided then the result is written into r and returned\notherwise m3 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1022,
   "name": "lua.wetgenes.tardis.m3.transpose",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v3 = m3:v3(n)\n</code></pre>\n<p>Extract and return a &quot;useful&quot; v3 from an m3 matrix. The first vector is the x\naxis, then y axis , then z axis.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 968,
   "name": "lua.wetgenes.tardis.m3.v3",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<p>The metatable for a 4x4 matrix class, use the new function to actually\ncreate an object.</p>\n<p>We also inherit all the functions from tardis.array</p>\n",
   "count": 34,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1114,
   "name": "lua.wetgenes.tardis.m4",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m4 = m4:add(m4b)\nm4 = m4:add(m4b,r)\n</code></pre>\n<p>Add m4b this m4.</p>\n<p>If r is provided then the result is written into r and returned\notherwise m4 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1234,
   "name": "lua.wetgenes.tardis.m4.add",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m4 = m4:adjugate()\nm4 = m4:adjugate(r)\n</code></pre>\n<p>Adjugate this m4.</p>\n<p>If r is provided then the result is written into r and returned\notherwise m4 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1321,
   "name": "lua.wetgenes.tardis.m4.adjugate",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m4 = m4:arotate(degrees,v3a)\nm4 = m4:arotate(degrees,v3a,r)\n</code></pre>\n<p>Apply a rotation in degres around the given axis to this matrix.</p>\n<p>If r is provided then the result is written into r and returned\notherwise m4 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1676,
   "name": "lua.wetgenes.tardis.m4.arotate",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m4 = m4:cofactor()\nm4 = m4:cofactor(r)\n</code></pre>\n<p>Cofactor this m4.</p>\n<p>If r is provided then the result is written into r and returned\notherwise m4 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1294,
   "name": "lua.wetgenes.tardis.m4.cofactor",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>value = m4:determinant()\n</code></pre>\n<p>Return the determinant value of this m4.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1177,
   "name": "lua.wetgenes.tardis.m4.determinant",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>q4 = m4:get_rotation_q4(r)\n</code></pre>\n<p>Get quaternion rotation from a scale/rot/trans matrix. Note that scale\nis assumed to be uniform which it usually is. If that is not the case\nthen remove the scale first.</p>\n<p>If r is provided then the result is written into r and returned\notherwise a new q4 is created and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1568,
   "name": "lua.wetgenes.tardis.m4.get_rotation_q4",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v3 = m4:get_scale_v3(r)\n</code></pre>\n<p>Get v3 scale from a scale/rot/trans matrix</p>\n<p>If r is provided then the result is written into r and returned\notherwise a new v3 is created and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1549,
   "name": "lua.wetgenes.tardis.m4.get_scale_v3",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v3 = m4:get_translation_v3(r)\n</code></pre>\n<p>Get v3 translation from a scale/rot/trans matrix</p>\n<p>If r is provided then the result is written into r and returned\notherwise a new v3 is created and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1534,
   "name": "lua.wetgenes.tardis.m4.get_translation_v3",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m4 = m4:identity()\n</code></pre>\n<p>Set this m4 to the identity matrix.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1134,
   "name": "lua.wetgenes.tardis.m4.identity",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m4 = m4:inverse()\nm4 = m4:inverse(r)\n</code></pre>\n<p>Inverse this m4.</p>\n<p>If r is provided then the result is written into r and returned\notherwise m4 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1337,
   "name": "lua.wetgenes.tardis.m4.inverse",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m4 = m4:m3()\n</code></pre>\n<p>Grab tthe top,left parts of the m4 matrix as an m3 matrix.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1143,
   "name": "lua.wetgenes.tardis.m4.m3",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>value = m4:minor_xy()\n</code></pre>\n<p>Return the minor_xy value of this m4.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1199,
   "name": "lua.wetgenes.tardis.m4.minor_xy",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m4 = m4:mix(m4b,s)\nm4 = m4:mix(m4b,s,r)\n</code></pre>\n<p>Lerp from m4 to m4b by s.</p>\n<p>If r is provided then the result is written into r and returned\notherwise m4 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1274,
   "name": "lua.wetgenes.tardis.m4.mix",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m4 = tardis.m4.new()\n</code></pre>\n<p>Create a new m4 and optionally set it to the given values, m4 methods\nusually return the input m4 for easy function chaining.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1124,
   "name": "lua.wetgenes.tardis.m4.new",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m4 = m4:prearotate(degrees,v3a)\nm4 = m4:prearotate(degrees,v3a,r)\n</code></pre>\n<p>Pre apply a rotation in degrees around the given axis to this matrix.</p>\n<p>If r is provided then the result is written into r and returned\notherwise m4 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1751,
   "name": "lua.wetgenes.tardis.m4.prearotate",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m4 = m4:preqrotate(q)\nm4 = m4:preqrotate(q,r)\n</code></pre>\n<p>Pre apply a quaternion rotation to this matrix.</p>\n<p>If r is provided then the result is written into r and returned\notherwise m4 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1783,
   "name": "lua.wetgenes.tardis.m4.preqrotate",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m4 = m4:prerotate(degrees,v3a)\nm4 = m4:prerotate(degrees,v3a,r)\nm4 = m4:prerotate(degrees,x,y,z)\nm4 = m4:prerotate(degrees,x,y,z,r)\nm4 = m4:prerotate(q)\nm4 = m4:prerotate(q,r)\n</code></pre>\n<p>Pre apply quaternion or angle rotation to this matrix depending on\narguments provided.</p>\n<p>If r is provided then the result is written into r and returned\notherwise m4 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1799,
   "name": "lua.wetgenes.tardis.m4.prerotate",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m4 = m4:prerrotate(radians,v3a)\nm4 = m4:prerrotate(radians,v3a,r)\n</code></pre>\n<p>Pre apply a rotation in radians around the given axis to this matrix.</p>\n<p>If r is provided then the result is written into r and returned\notherwise m4 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1767,
   "name": "lua.wetgenes.tardis.m4.prerrotate",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m4 = m4:scale(s)\nm4 = m4:scale(s,r)\nm4 = m4:scale(x,y,z)\nm4 = m4:scale(x,y,z,r)\nm4 = m4:scale(v3)\nm4 = m4:scale(v3,r)\n</code></pre>\n<p>Pre Scale this m4 by {s,s,s} or {x,y,z} or v3.</p>\n<p>If r is provided then the result is written into r and returned\notherwise m4 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1509,
   "name": "lua.wetgenes.tardis.m4.prescale",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m4 = m4:pretranslate(x,y,z)\nm4 = m4:pretranslate(x,y,z,r)\nm4 = m4:pretranslate(v3a)\nm4 = m4:pretranslate(v3a,r)\n</code></pre>\n<p>Translate this m4 along its global axis by {x,y,z} or v3a.</p>\n<p>If r is provided then the result is written into r and returned\notherwise m4 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1415,
   "name": "lua.wetgenes.tardis.m4.pretranslate",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m4 = m4:pretranslate_v3(v3a)\nm4 = m4:pretranslate_v3(v3a,r)\n</code></pre>\n<p>Translate this m4 along its global axis by v3a.</p>\n<p>If r is provided then the result is written into r and returned\notherwise m4 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1375,
   "name": "lua.wetgenes.tardis.m4.pretranslate_v3",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m4 = m4:qrotate(q)\nm4 = m4:qrotate(q,r)\n</code></pre>\n<p>Apply a quaternion rotation to this matrix.</p>\n<p>If r is provided then the result is written into r and returned\notherwise m4 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1708,
   "name": "lua.wetgenes.tardis.m4.qrotate",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m4 = m4:rotate(degrees,v3a)\nm4 = m4:rotate(degrees,v3a,r)\nm4 = m4:rotate(degrees,x,y,z)\nm4 = m4:rotate(degrees,x,y,z,r)\nm4 = m4:rotate(q)\nm4 = m4:rotate(q,r)\n</code></pre>\n<p>Apply quaternion or angle rotation to this matrix depending on\narguments provided.</p>\n<p>If r is provided then the result is written into r and returned\notherwise m4 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1724,
   "name": "lua.wetgenes.tardis.m4.rotate",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m4 = m4:rrotate(radians,v3a)\nm4 = m4:rrotate(radians,v3a,r)\n</code></pre>\n<p>Apply a rotation in radians around the given axis to this matrix.</p>\n<p>If r is provided then the result is written into r and returned\notherwise m4 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1692,
   "name": "lua.wetgenes.tardis.m4.rrotate",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m4 = m4:scale(s)\nm4 = m4:scale(s,r)\nm4 = m4:scale(x,y,z)\nm4 = m4:scale(x,y,z,r)\nm4 = m4:scale(v3)\nm4 = m4:scale(v3,r)\n</code></pre>\n<p>Scale this m4 by {s,s,s} or {x,y,z} or v3.</p>\n<p>If r is provided then the result is written into r and returned\notherwise m4 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1460,
   "name": "lua.wetgenes.tardis.m4.scale",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m4 = m4:scale_v3(v3)\nm4 = m4:scale_v3(v3,r)\n</code></pre>\n<p>Scale this m4 by {x,y,z} or v3.</p>\n<p>If r is provided then the result is written into r and returned\notherwise m4 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1485,
   "name": "lua.wetgenes.tardis.m4.scale_v3",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m4 = m4:setrot(degrees,v3a)\n</code></pre>\n<p>Set this matrix to a rotation matrix around the given normal by the given degrees.</p>\n<p>we will automatically normalise v3a if necessary.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1604,
   "name": "lua.wetgenes.tardis.m4.setrot",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m4 = m4:setrrot(radians,v3a)\n</code></pre>\n<p>Set this matrix to a rotation matrix around the given normal by the given radians.</p>\n<p>we will automatically normalise v3a if necessary.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1640,
   "name": "lua.wetgenes.tardis.m4.setrrot",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m4 = m4:sub(m4b)\nm4 = m4:sub(m4b,r)\n</code></pre>\n<p>Subtract m4b this m4.</p>\n<p>If r is provided then the result is written into r and returned\notherwise m4 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1254,
   "name": "lua.wetgenes.tardis.m4.sub",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m4 = m4:translate(x,y,z)\nm4 = m4:translate(x,y,z,r)\nm4 = m4:translate(v3a)\nm4 = m4:translate(v3a,r)\n</code></pre>\n<p>Translate this m4 along its local axis by {x,y,z} or v3a.</p>\n<p>If r is provided then the result is written into r and returned\notherwise m4 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1394,
   "name": "lua.wetgenes.tardis.m4.translate",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m4 = m4:translate_v3(v3a)\nm4 = m4:translate_v3(v3a,r)\n</code></pre>\n<p>Translate this m4 along its local axis by v3a.</p>\n<p>If r is provided then the result is written into r and returned\notherwise m4 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1355,
   "name": "lua.wetgenes.tardis.m4.translate_v3",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>m4 = m4:transpose()\nm4 = m4:transpose(r)\n</code></pre>\n<p>Transpose this m4.</p>\n<p>If r is provided then the result is written into r and returned\notherwise m4 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1218,
   "name": "lua.wetgenes.tardis.m4.transpose",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v3 = m4:v3(n)\n</code></pre>\n<p>Extract and return a &quot;useful&quot; v3 from an m4 matrix. The first vector is the x\naxis, then y axis , then z axis and finally transform.</p>\n<p>If n is not given or not a known value then we return the 4th vector which is\nthe &quot;opengl&quot; transform as that is the most useful v3 part of an m4.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1154,
   "name": "lua.wetgenes.tardis.m4.v3",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>stack = tardis.m4_stack()\n</code></pre>\n<p>create an m4 stack that is very similar to an old school opengl transform\nstack.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 3196,
   "name": "lua.wetgenes.tardis.m4_stack",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<p>A 3d space plane class.</p>\n<p>[1]position , [2]normal</p>\n<p>We also inherit all the functions from tardis.array</p>\n",
   "count": 2,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2966,
   "name": "lua.wetgenes.tardis.plane",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>plane = tardis.plane.new(p,n)\n</code></pre>\n<p>Create a new plane and optionally set it to the given values.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2978,
   "name": "lua.wetgenes.tardis.plane.new",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<p>The metatable for a quaternion class, use the new function to actually create an object.</p>\n<p>We also inherit all the functions from tardis.v4</p>\n",
   "count": 16,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2629,
   "name": "lua.wetgenes.tardis.q4",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v3 = q4:get_yaw_pitch_roll()\n</code></pre>\n<p>Get a yaw,pitch,roll degree rotation from this quaternion</p>\n<p>If r is provided then the result is written into r and returned\notherwise a new v3 is created and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2867,
   "name": "lua.wetgenes.tardis.q4.get_yaw_pitch_roll",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v3 = q4:get_yaw_pitch_roll_in_radians()\n</code></pre>\n<p>Get a yaw,pitch,roll degree rotation from this quaternion</p>\n<p>If r is provided then the result is written into r and returned\notherwise a new v3 is created and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2909,
   "name": "lua.wetgenes.tardis.q4.get_yaw_pitch_roll_in_radians",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>q4 = q4:identity()\n</code></pre>\n<p>Set this q4 to its 0,0,0,1 identity</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2713,
   "name": "lua.wetgenes.tardis.q4.identity",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>q4 = q4:mix(q4b,s)\nq4 = q4:mix(q4b,s,r)\n</code></pre>\n<p>Lerp from q4 to q4b by s.</p>\n<p>If r is provided then the result is written into r and returned\notherwise q4 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2738,
   "name": "lua.wetgenes.tardis.q4.mix",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>q4 = tardis.q4.new()\n</code></pre>\n<p>Create a new q4 and optionally set it to the given values, q4 methods\nusually return the input q4 for easy function chaining.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2703,
   "name": "lua.wetgenes.tardis.q4.new",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>q4 = q4:prerotate(degrees,v3a)\nq4 = q4:prerotate(degrees,v3a,r)\n</code></pre>\n<p>Pre apply a degree rotation to this quaternion.</p>\n<p>If r is provided then the result is written into r and returned\notherwise q4 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2800,
   "name": "lua.wetgenes.tardis.q4.prerotate",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>q4 = q4:prerrotate(radians,v3a)\nq4 = q4:prerrotate(radians,v3a,r)\n</code></pre>\n<p>Pre apply a radian rotation to this quaternion.</p>\n<p>If r is provided then the result is written into r and returned\notherwise q4 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2834,
   "name": "lua.wetgenes.tardis.q4.prerrotate",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>q4 = q4:reverse()\nq4 = q4:reverse(r)\n</code></pre>\n<p>Reverse the rotation of this quaternion.</p>\n<p>If r is provided then the result is written into r and returned\notherwise q4 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2722,
   "name": "lua.wetgenes.tardis.q4.reverse",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>q4 = q4:rotate(degrees,v3a)\nq4 = q4:rotate(degrees,v3a,r)\n</code></pre>\n<p>Apply a degree rotation to this quaternion.</p>\n<p>If r is provided then the result is written into r and returned\notherwise q4 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2783,
   "name": "lua.wetgenes.tardis.q4.rotate",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>q4 = q4:rrotate(radians,v3a)\nq4 = q4:rrotate(radians,v3a,r)\n</code></pre>\n<p>Apply a radian rotation to this quaternion.</p>\n<p>If r is provided then the result is written into r and returned\notherwise q4 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2817,
   "name": "lua.wetgenes.tardis.q4.rrotate",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>q4 = tardis.q4.set(q4,{0,0,0,1})\nq4 = tardis.q4.set(q4,0,0,0,1)\nq4 = tardis.q4.set(q4,{&quot;xyz&quot;,0,90,0})\nq4 = tardis.q4.set(q4,&quot;xyz&quot;,0,90,0)\nq4 = tardis.q4.set(q4,&quot;xyz&quot;,{0,90,0})\n</code></pre>\n<p>If the first item in the stream is not a string then this is just a normal\narray.set style.</p>\n<p>If first parameter of the stream is a string then initialise the quaternion\nusing a simple axis rotation notation Where the string is a list of axis. This\nstring is lower case letters. x y or z and then the following numbers are\namount of rotation to apply around that axis in degrees. You should provide as\nmany numbers as letters.</p>\n<p>Essentially this gives you a way of initialising quaternion rotations in an\neasily readable way.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2638,
   "name": "lua.wetgenes.tardis.q4.set",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>q4 = q4:set_yaw_pitch_roll(v3)\nq4 = q4:set_yaw_pitch_roll({90,60,30})\t-- 30yaw 60pitch 90roll\n</code></pre>\n<p>Set a V3(roll,pitch,yaw) degree rotation into this quaternion</p>\n<pre><code>yaw   v[3] is rotation about the z axis and is applied first\npitch v[2] is rotation about the y axis and is applied second\nroll  v[1] is rotation about the z axis and is applied last\n</code></pre>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2851,
   "name": "lua.wetgenes.tardis.q4.set_yaw_pitch_roll",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>q4 = q4:set_yaw_pitch_roll_in_radians(v)\n</code></pre>\n<p>Set a V3(roll,pitch,yaw) radian rotation into this quaternion</p>\n<pre><code>yaw   v[3] is rotation about the z axis and is applied first\npitch v[2] is rotation about the y axis and is applied second\nroll  v[1] is rotation about the z axis and is applied last\n</code></pre>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2881,
   "name": "lua.wetgenes.tardis.q4.set_yaw_pitch_roll_in_radians",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>q4 = q4:setrot(degrees,v3a)\n</code></pre>\n<p>Set this quaternion to a rotation around the given normal by the given degrees.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2757,
   "name": "lua.wetgenes.tardis.q4.setrot",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>q4 = q4:setrrot(radians,v3a)\n</code></pre>\n<p>Set this quaternion to a rotation around the given normal by the given radians.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2770,
   "name": "lua.wetgenes.tardis.q4.setrrot",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>f = tardis.step(edge1,edge2,num)\n</code></pre>\n<p>return 0 if num is bellow or equal to edge1. Return 1 if num is the same or\nhigher as edge2 and smoothly interpolate between 0 and 1 for all other values.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 3000,
   "name": "lua.wetgenes.tardis.smoothstep",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>i = tardis.step(edge,num)\n</code></pre>\n<p>return 0 if num is bellow edge or 1 if num is the same or higher</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2989,
   "name": "lua.wetgenes.tardis.step",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>name=tardis.type(object)\n</code></pre>\n<p>This will return the type of an object previously registered with class</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 94,
   "name": "lua.wetgenes.tardis.type",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<p>The metatable for a 2d vector class, use the new function to actually\ncreate an object.</p>\n<p>We also inherit all the functions from tardis.array</p>\n",
   "count": 13,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1826,
   "name": "lua.wetgenes.tardis.v1",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v1 = v1:add(v1b)\nv1 = v1:add(v1b,r)\n</code></pre>\n<p>Add v1b to v1.</p>\n<p>If r is provided then the result is written into r and returned\notherwise v1 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1941,
   "name": "lua.wetgenes.tardis.v1.add",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>value = v1:cross(v1b)\n</code></pre>\n<p>Extend to 3d then only return z value as x and y are always 0</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2000,
   "name": "lua.wetgenes.tardis.v1.cross",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>value = a:distance(b)\n</code></pre>\n<p>Returns the length of the vector between a and b.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1879,
   "name": "lua.wetgenes.tardis.v1.distance",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>value = v1:dot(v1b)\n</code></pre>\n<p>Return the dot product of these two vectors.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1989,
   "name": "lua.wetgenes.tardis.v1.dot",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v1 = v1:identity()\n</code></pre>\n<p>Set this v1 to all zeros.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1846,
   "name": "lua.wetgenes.tardis.v1.identity",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>value = v1:len()\n</code></pre>\n<p>Returns the length of this vector.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1867,
   "name": "lua.wetgenes.tardis.v1.len",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>value = v1:lenlen()\n</code></pre>\n<p>Returns the length of this vector, squared, this is often all you need\nfor comparisons so lets us skip the sqrt.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1855,
   "name": "lua.wetgenes.tardis.v1.lenlen",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v1 = v1:mul(v1b)\nv1 = v1:mul(v1b,r)\n</code></pre>\n<p>Multiply v1 by v1b.</p>\n<p>If r is provided then the result is written into r and returned\notherwise v1 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1973,
   "name": "lua.wetgenes.tardis.v1.mul",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v1 = v1:normalize()\nv1 = v1:normalize(r)\n</code></pre>\n<p>Adjust the length of this vector to 1.</p>\n<p>An input length of 0 will remain at 0.</p>\n<p>If r is provided then the result is written into r and returned\notherwise v1 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1922,
   "name": "lua.wetgenes.tardis.v1.normalize",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v1 = v1:oo()\nv1 = v1:oo(r)\n</code></pre>\n<p>One Over value. Build the reciprocal of all elements.</p>\n<p>If r is provided then the result is written into r and returned\notherwise v1 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1890,
   "name": "lua.wetgenes.tardis.v1.oo",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v1 = v1:scale(s)\nv1 = v1:scale(s,r)\n</code></pre>\n<p>Scale this v1 by s.</p>\n<p>If r is provided then the result is written into r and returned\notherwise v1 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1906,
   "name": "lua.wetgenes.tardis.v1.scale",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v1 = v1:sub(v1b)\nv1 = v1:sub(v1b,r)\n</code></pre>\n<p>Subtract v1b from v1.</p>\n<p>If r is provided then the result is written into r and returned\notherwise v1 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 1957,
   "name": "lua.wetgenes.tardis.v1.sub",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<p>The metatable for a 2d vector class, use the new function to actually\ncreate an object.</p>\n<p>We also inherit all the functions from tardis.array</p>\n",
   "count": 14,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2011,
   "name": "lua.wetgenes.tardis.v2",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v2 = v2:add(v2b)\nv2 = v2:add(v2b,r)\n</code></pre>\n<p>Add v2b to v2.</p>\n<p>If r is provided then the result is written into r and returned\notherwise v2 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2128,
   "name": "lua.wetgenes.tardis.v2.add",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>value = v2:cross(v2b)\n</code></pre>\n<p>Extend to 3d then only return z value as x and y are always 0</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2187,
   "name": "lua.wetgenes.tardis.v2.cross",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>value = a:distance(b)\n</code></pre>\n<p>Returns the length of the vector between a and b.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2064,
   "name": "lua.wetgenes.tardis.v2.distance",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>value = v2:dot(v2b)\n</code></pre>\n<p>Return the dot product of these two vectors.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2176,
   "name": "lua.wetgenes.tardis.v2.dot",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v2 = v2:identity()\n</code></pre>\n<p>Set this v2 to all zeros.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2031,
   "name": "lua.wetgenes.tardis.v2.identity",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>value = v2:len()\n</code></pre>\n<p>Returns the length of this vector.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2052,
   "name": "lua.wetgenes.tardis.v2.len",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>value = v2:lenlen()\n</code></pre>\n<p>Returns the length of this vector, squared, this is often all you need\nfor comparisons so lets us skip the sqrt.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2040,
   "name": "lua.wetgenes.tardis.v2.lenlen",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v2 = v2:mul(v2b)\nv2 = v2:mul(v2b,r)\n</code></pre>\n<p>Multiply v2 by v2b.</p>\n<p>If r is provided then the result is written into r and returned\notherwise v2 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2160,
   "name": "lua.wetgenes.tardis.v2.mul",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v2 = tardis.v2.new()\n</code></pre>\n<p>Create a new v2 and optionally set it to the given values, v2 methods\nusually return the input v2 for easy function chaining.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2021,
   "name": "lua.wetgenes.tardis.v2.new",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v2 = v2:normalize()\nv2 = v2:normalize(r)\n</code></pre>\n<p>Adjust the length of this vector to 1.</p>\n<p>An input length of 0 will remain at 0.</p>\n<p>If r is provided then the result is written into r and returned\notherwise v2 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2109,
   "name": "lua.wetgenes.tardis.v2.normalize",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v2 = v2:oo()\nv2 = v2:oo(r)\n</code></pre>\n<p>One Over value. Build the reciprocal of all elements.</p>\n<p>If r is provided then the result is written into r and returned\notherwise v2 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2077,
   "name": "lua.wetgenes.tardis.v2.oo",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v2 = v2:scale(s)\nv2 = v2:scale(s,r)\n</code></pre>\n<p>Scale this v2 by s.</p>\n<p>If r is provided then the result is written into r and returned\notherwise v2 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2093,
   "name": "lua.wetgenes.tardis.v2.scale",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v2 = v2:sub(v2b)\nv2 = v2:sub(v2b,r)\n</code></pre>\n<p>Subtract v2b from v2.</p>\n<p>If r is provided then the result is written into r and returned\notherwise v2 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2144,
   "name": "lua.wetgenes.tardis.v2.sub",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<p>The metatable for a 3d vector class, use the new function to actually\ncreate an object.</p>\n<p>We also inherit all the functions from tardis.array</p>\n",
   "count": 15,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2198,
   "name": "lua.wetgenes.tardis.v3",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v3 = v3:add(v3b)\nv3 = v3:add(v3b,r)\n</code></pre>\n<p>Add v3b to v3.</p>\n<p>If r is provided then the result is written into r and returned\notherwise v3 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2315,
   "name": "lua.wetgenes.tardis.v3.add",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>radians,axis = v3a:angle(v3b)\nradians,axis = v3a:angle(v3b,axis)\n</code></pre>\n<p>Return radians and axis of rotation between these two vectors. If axis is given\nthen it must represent a positive world aligned axis normal. So V3(1,0,0) or\nV3(0,1,0) or V3(0,0,1) only. The point of providing an axis allows the returned\nangle to be over a 360 degree range rather than flipping the axis after 180\ndegrees this means the second axis returned value can be ignored as it will\nalways be the axis that is passed in.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2391,
   "name": "lua.wetgenes.tardis.v3.angle",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v3 = v3:cross(v3b)\nv3 = v3:cross(v3b,r)\n</code></pre>\n<p>Return the cross product of these two vectors.</p>\n<p>If r is provided then the result is written into r and returned\notherwise v3 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2374,
   "name": "lua.wetgenes.tardis.v3.cross",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>value = a:distance(b)\n</code></pre>\n<p>Returns the length of the vector between a and b.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2250,
   "name": "lua.wetgenes.tardis.v3.distance",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>value = v3:dot(v3b)\n</code></pre>\n<p>Return the dot product of these two vectors.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2363,
   "name": "lua.wetgenes.tardis.v3.dot",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v3 = v3:identity()\n</code></pre>\n<p>Set this v3 to all zeros.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2218,
   "name": "lua.wetgenes.tardis.v3.identity",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>value = v3:len()\n</code></pre>\n<p>Returns the length of this vector.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2239,
   "name": "lua.wetgenes.tardis.v3.len",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>value = v3:lenlen()\n</code></pre>\n<p>Returns the length of this vector, squared, this is often all you need\nfor comparisons so lets us skip the sqrt.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2227,
   "name": "lua.wetgenes.tardis.v3.lenlen",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v3 = v3:mul(v3b)\nv3 = v3:mul(v3b,r)\n</code></pre>\n<p>Multiply v3 by v3b.</p>\n<p>If r is provided then the result is written into r and returned\notherwise v3 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2347,
   "name": "lua.wetgenes.tardis.v3.mul",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v3 = tardis.v3.new()\n</code></pre>\n<p>Create a new v3 and optionally set it to the given values, v3 methods\nusually return the input v3 for easy function chaining.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2208,
   "name": "lua.wetgenes.tardis.v3.new",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v3 = v3:normalize()\nv3 = v3:normalize(r)\n</code></pre>\n<p>Adjust the length of this vector to 1.</p>\n<p>An input length of 0 will remain at 0.</p>\n<p>If r is provided then the result is written into r and returned\notherwise v3 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2296,
   "name": "lua.wetgenes.tardis.v3.normalize",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v3 = v3:oo()\nv3 = v3:oo(r)\n</code></pre>\n<p>One Over value. Build the reciprocal of all elements.</p>\n<p>If r is provided then the result is written into r and returned\notherwise v3 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2264,
   "name": "lua.wetgenes.tardis.v3.oo",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v3 = v3:scale(s)\nv3 = v3:scale(s,r)\n</code></pre>\n<p>Scale this v3 by s.</p>\n<p>If r is provided then the result is written into r and returned\notherwise v3 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2280,
   "name": "lua.wetgenes.tardis.v3.scale",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v3 = v3:sub(v3b)\nv3 = v3:sub(v3b,r)\n</code></pre>\n<p>Subtract v3b from v3.</p>\n<p>If r is provided then the result is written into r and returned\notherwise v3 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2331,
   "name": "lua.wetgenes.tardis.v3.sub",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<p>The metatable for a 4d vector class, use the new function to actually\ncreate an object.</p>\n<p>We also inherit all the functions from tardis.array</p>\n",
   "count": 14,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2434,
   "name": "lua.wetgenes.tardis.v4",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v4 = v4:add(v4b)\nv4 = v4:add(v4b,r)\n</code></pre>\n<p>Add v4b to v4.</p>\n<p>If r is provided then the result is written into r and returned\notherwise v4 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2569,
   "name": "lua.wetgenes.tardis.v4.add",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>value = a:distance(b)\n</code></pre>\n<p>Returns the length of the vector between a and b.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2503,
   "name": "lua.wetgenes.tardis.v4.distance",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>value = v4:dot(v4b)\n</code></pre>\n<p>Return the dot product of these two vectors.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2617,
   "name": "lua.wetgenes.tardis.v4.dot",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v4 = v4:identity()\n</code></pre>\n<p>Set this v4 to all zeros.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2454,
   "name": "lua.wetgenes.tardis.v4.identity",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>value = v4:len()\n</code></pre>\n<p>Returns the length of this vector.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2492,
   "name": "lua.wetgenes.tardis.v4.len",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>value = v4:lenlen()\n</code></pre>\n<p>Returns the length of this vector, squared, this is often all you need\nfor comparisons so lets us skip the sqrt.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2480,
   "name": "lua.wetgenes.tardis.v4.lenlen",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v4 = v4:mul(v4b)\nv4 = v4:mul(v4b,r)\n</code></pre>\n<p>Multiply v4 by v4b.</p>\n<p>If r is provided then the result is written into r and returned\notherwise v4 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2601,
   "name": "lua.wetgenes.tardis.v4.mul",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v4 = tardis.v4.new()\n</code></pre>\n<p>Create a new v4 and optionally set it to the given values, v4 methods\nusually return the input v4 for easy function chaining.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2444,
   "name": "lua.wetgenes.tardis.v4.new",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v4 = v4:normalize()\nv4 = v4:normalize(r)\n</code></pre>\n<p>Adjust the length of this vector to 1.</p>\n<p>An input length of 0 will remain at 0.</p>\n<p>If r is provided then the result is written into r and returned\notherwise v4 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2550,
   "name": "lua.wetgenes.tardis.v4.normalize",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v4 = v4:oo()\nv4 = v4:oo(r)\n</code></pre>\n<p>One Over value. Build the reciprocal of all elements.</p>\n<p>If r is provided then the result is written into r and returned\notherwise v4 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2518,
   "name": "lua.wetgenes.tardis.v4.oo",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v4 = v4:scale(s)\nv4 = v4:scale(s,r)\n</code></pre>\n<p>Scale this v4 by s.</p>\n<p>If r is provided then the result is written into r and returned\notherwise v4 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2534,
   "name": "lua.wetgenes.tardis.v4.scale",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v4 = v4:sub(v4b)\nv4 = v4:sub(v4b,r)\n</code></pre>\n<p>Subtract v4b from v4.</p>\n<p>If r is provided then the result is written into r and returned\notherwise v4 is modified and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2585,
   "name": "lua.wetgenes.tardis.v4.sub",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>v3 = v4:to_v3()\nv3 = v4:to_v3(r)\n</code></pre>\n<p>scale [4] to 1 then throw it away so we have a v3 xyz</p>\n<p>If r is provided then the result is written into r and returned\notherwise a new v3 is created and returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tardis.lua",
   "line": 2463,
   "name": "lua.wetgenes.tardis.v4.to_v3",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tardis.lua"
  },
  {
   "body": "<pre><code>local tasks=require(&quot;wetgenes.tasks&quot;).create()\n</code></pre>\n<p>Manage tasks that should be performed on seperate threads so as not to block the main thread.</p>\n<p>Manage coroutines that can then easily call into these threads by yeilding</p>\n",
   "count": 31,
   "file": "../lua/wetgenes/tasks.lua",
   "line": 20,
   "name": "lua.wetgenes.tasks",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks.lua"
  },
  {
   "body": "<pre><code>tasks:add_global_thread(thread)\n</code></pre>\n<p>This runs an add_thread inside a named thread so all threads are kept \ntogether no matter which thread tried to start it.</p>\n<p>thread is the same as add_thread</p>\n<p>if the thread id already exists then it will not be added again.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tasks.lua",
   "line": 261,
   "name": "lua.wetgenes.tasks.add_global_thread",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks.lua"
  },
  {
   "body": "<pre><code>tasks:add_id(it)\n</code></pre>\n<p>Internal function to manage creation of all objects with unique ids.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tasks.lua",
   "line": 129,
   "name": "lua.wetgenes.tasks.add_id",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks.lua"
  },
  {
   "body": "<pre><code>local memo=tasks:add_memo({})\n</code></pre>\n<p>Create a memo with a unique auto generated numerical id for linda \ncomunication.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tasks.lua",
   "line": 233,
   "name": "lua.wetgenes.tasks.add_memo",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks.lua"
  },
  {
   "body": "<pre><code>local thread=tasks:add_task({\n    id=&quot;test&quot;,\n    code=function(linda,task_id,task_idx,task)\n        while true do\n            local _,memo= linda:receive( 0 , task_id )\n            if memo then\n                ...\n            end\n        end\n    end,\n})\n</code></pre>\n<p>Create a task with various preset values similar to a thread except \ninside a coroutine on the calling thread. As this function is inside a \ncoroutine you must yield regulary this yield will then continue on the \nnext update. Probably called once ever 60th of a second.</p>\n<pre><code>id\n</code></pre>\n<p>A unique id string to be used by lindas when sending messages into this \ntask. The function is expected to sit in an infinite loop testing \nthis linda socket and then yielding if there is nothing to do.</p>\n<pre><code>count\n</code></pre>\n<p>The number of tasks to create, they will all use the same instanced \ncode function so should be interchangable and it should not matter \nwhich task we are actually running code on. If you expect the task to \nmaintain some state between memos, then this must be 1 .</p>\n<pre><code>code\n</code></pre>\n<p>A lua function to run inside a coroutine, this function will recieve \ntasks.linda (which is a colinda) and the task.id for comunication and \nan index so we know which of the count tasks we are (mostly for \ndebugging) and finally the task table itself which make sense to share \nwith coroutines.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tasks.lua",
   "line": 368,
   "name": "lua.wetgenes.tasks.add_task",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks.lua"
  },
  {
   "body": "<pre><code>local thread=tasks:add_thread({\n    id=&quot;test&quot;,\n    count=1,\n    code=function(linda,task_id,task_idx)\n        while true do\n            local _,memo= linda:receive( nil , task_id )\n            if memo then\n                ...\n            end\n        end\n    end,\n})\n</code></pre>\n<p>Create a thread with various preset values:</p>\n<pre><code>id\n</code></pre>\n<p>A unique id string to be used by lindas when sending messages into this \ntask. The function is expected to sit in an infinite loop waiting on \nthis linda socket.</p>\n<pre><code>count\n</code></pre>\n<p>The number of threads to create, they will all use the same instanced \ncode function so should be interchangable and it should not matter \nwhich thread we are actually running code on. If you expect the task to \nmaintain some state between memos, then this must be 1 .</p>\n<pre><code>code\n</code></pre>\n<p>A lua function to run inside each thread, this function will recieve \ntasks.linda and the task.id for comunication and an index so we know \nwhich of the count threads we are (mostly for debugging)</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tasks.lua",
   "line": 298,
   "name": "lua.wetgenes.tasks.add_thread",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks.lua"
  },
  {
   "body": "<pre><code>tasks:claim_global(name,value)\n</code></pre>\n<p>Claim a name using the global linda socket, returns value on success \nor false on failure.</p>\n<p>The value will be associated with the name on success.</p>\n<p>This will block waiting on a result but should be fast.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tasks.lua",
   "line": 161,
   "name": "lua.wetgenes.tasks.claim_global",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks.lua"
  },
  {
   "body": "<p>Send and/or recieve a (web)socket client memo result.</p>\n<p>returns nil,error if something went wrong or returns result if \nsomething went right.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tasks.lua",
   "line": 788,
   "name": "lua.wetgenes.tasks.client",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks.lua"
  },
  {
   "body": "<p>A basic function to handle (web)socket client connection.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tasks.lua",
   "line": 1246,
   "name": "lua.wetgenes.tasks.client_code",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks.lua"
  },
  {
   "body": "<pre><code>require(&quot;wetgenes.tasks&quot;).cocall(f1,f2,...)\nrequire(&quot;wetgenes.tasks&quot;).cocall({f1,f2,...})\n</code></pre>\n<p>Manage simple coroutines that can poll each others results and wait on \nthem.</p>\n<p>Turn a table of &quot;setup&quot; functions into a table of coroutines that can \nyield waiting for other coroutines to complete and run them all.</p>\n<p>You still need to be carefull with race conditions but it allows you to \nwrite code in such away that setup order is no longer important. Setup \nfunctions can coroutine.yield waiting for another setup to finish first.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tasks.lua",
   "line": 71,
   "name": "lua.wetgenes.tasks.cocall",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks.lua"
  },
  {
   "body": "<p>Create a tasks group to contain all associated threads and coroutines \nalong with their comunications.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tasks.lua",
   "line": 697,
   "name": "lua.wetgenes.tasks.create",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks.lua"
  },
  {
   "body": "<pre><code>local colinda=require(&quot;wetgenes.tasks&quot;).colinda(linda)\n</code></pre>\n<p>Create a colinda which is a wrapper around a linda providing \nreplacement functions to be used inside a coroutine so it will yield \n(and assume it will be resumed) rather than wait.</p>\n<p>This should be a dropin replacement for a linda and will fallback to \nnormal linda use if not in a coroutine.</p>\n<p>If linda is nil then we will create one, the linda used in this colinda \ncan be found in colinda.linda if you need raw access.</p>\n<p>What we are doing here is wrapping the send/receive functions so that</p>\n<pre><code>colinda:send(time,...)\ncolinda:recieve(time,...)\n</code></pre>\n<p>will be replaced with functions that call</p>\n<pre><code>linda:send(0,...)\nlinda:recieve(0,...)\n</code></pre>\n<p>and use coroutines.yield to mimic the original timeout value without \nblocking.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tasks.lua",
   "line": 592,
   "name": "lua.wetgenes.tasks.create_colinda",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks.lua"
  },
  {
   "body": "<pre><code>tasks:del_global_thread({id=&quot;threadname&quot;})\n</code></pre>\n<p>Destroy a given thread.id or all the threads if thread is nil.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tasks.lua",
   "line": 282,
   "name": "lua.wetgenes.tasks.del_global_thread",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks.lua"
  },
  {
   "body": "<pre><code>tasks:del_id(it)\n</code></pre>\n<p>Internal function to manage deletion of all objects with unique ids.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tasks.lua",
   "line": 144,
   "name": "lua.wetgenes.tasks.del_id",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks.lua"
  },
  {
   "body": "<pre><code>tasks:del_memo(memo)\n</code></pre>\n<p>Delete a memo.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tasks.lua",
   "line": 249,
   "name": "lua.wetgenes.tasks.del_memo",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks.lua"
  },
  {
   "body": "<pre><code>tasks:del_task(task)\n</code></pre>\n<p>Delete a task.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tasks.lua",
   "line": 466,
   "name": "lua.wetgenes.tasks.del_task",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks.lua"
  },
  {
   "body": "<pre><code>tasks:del_thread(thread)\n</code></pre>\n<p>Delete a thread.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tasks.lua",
   "line": 352,
   "name": "lua.wetgenes.tasks.del_thread",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks.lua"
  },
  {
   "body": "<pre><code>tasks:delete()\n</code></pre>\n<p>Force stop all threads and delete all data.</p>\n<p>Failure to call this will allow any created threads to continue to run \nuntil program termination.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tasks.lua",
   "line": 576,
   "name": "lua.wetgenes.tasks.delete",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks.lua"
  },
  {
   "body": "<pre><code>result = tasks:do_memo(memo,timeout)\nresult = tasks:do_memo(memo)\n</code></pre>\n<p>Similar to calling tasks:receive but without the problems that come \nfrom me trying to remember how to spell receive and it returns \nmemo.result instead of memo so slightly less mess. This will assert on \nfinding a memo.error so less need to check for errors.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tasks.lua",
   "line": 556,
   "name": "lua.wetgenes.tasks.do_memo",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks.lua"
  },
  {
   "body": "<pre><code>tasks:eject_global(name)\n</code></pre>\n<p>Eject a name using the global linda socket, returns value associated \nwith name on success or false on failure.</p>\n<p>The value will no longer be associated with the name when this succeeds.</p>\n<p>This will block waiting on a result but should be fast.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tasks.lua",
   "line": 187,
   "name": "lua.wetgenes.tasks.eject_global",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks.lua"
  },
  {
   "body": "<pre><code>tasks:fetch_global(name)\n</code></pre>\n<p>Fetch value associated with the name using the global linda socket or \nfalse on failure. You can not associated nil or false with a global value.</p>\n<p>This will block waiting on a result but should be fast.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tasks.lua",
   "line": 211,
   "name": "lua.wetgenes.tasks.fetch_name",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks.lua"
  },
  {
   "body": "<p>A basic function to handle global memos to get/set data shared amongst multiple tasks.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tasks.lua",
   "line": 900,
   "name": "lua.wetgenes.tasks.global_code",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks.lua"
  },
  {
   "body": "<p>Create send and return a http memo result.</p>\n<p>Returns either the result or nil,error so can be used simply with an \nassert wrapper.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tasks.lua",
   "line": 737,
   "name": "lua.wetgenes.tasks.http",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks.lua"
  },
  {
   "body": "<p>A basic function to handle http memos.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tasks.lua",
   "line": 948,
   "name": "lua.wetgenes.tasks.http_code",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks.lua"
  },
  {
   "body": "<pre><code>memo = tasks:receive(memo,timeout)\nmemo = tasks:receive(memo)\n</code></pre>\n<p>Recieve a memo with optional timeout.</p>\n<p>This is intended to be run from within a coroutine task on the main \nthread. It will work outside of a task but that will block the main \nthread waiting for a response.</p>\n<p>The memo will be deleted after being recieved (ie we will have called \ndel_memo) so as to free up its comunication id for another memo.</p>\n<p>if the memo has not yet been sent or even been through add_memo (we \ncheck state for &quot;setup&quot; or nil) then it will be autosent with the same \ntimeout before we try and receive it.</p>\n<p>After calling check if memo.error is nil then you will find the result in \nmemo.result</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tasks.lua",
   "line": 518,
   "name": "lua.wetgenes.tasks.receive",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks.lua"
  },
  {
   "body": "<pre><code>tasks:run_task(task)\n</code></pre>\n<p>Resume all the coroutines in this task.</p>\n<p>Any errors will be logged with a backtrace.</p>\n<p>If the tasks have finished running (returned or crashed) then we will \ntasks:del_task(task) this task. Check task.id which will be nil after \nthis task has finished.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tasks.lua",
   "line": 427,
   "name": "lua.wetgenes.tasks.run_task",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks.lua"
  },
  {
   "body": "<pre><code>memo = tasks:send(memo,timeout)\nmemo = tasks:send(memo)\n</code></pre>\n<p>Send a memo with optional timeout.</p>\n<p>This is intended to be run from within a coroutine task on the main \nthread. It will work outside of a task but that may block the main \nthread waiting to send.</p>\n<p>if memo.id is not set then we will auto call add_memo to create it.</p>\n<p>Check memo.error for posible error, this will be nil if everything went \nOK.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tasks.lua",
   "line": 491,
   "name": "lua.wetgenes.tasks.send",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks.lua"
  },
  {
   "body": "<p>Create send and return a sqlite memo result.</p>\n<p>Returns either the result.rows or nil,error so can be used simply with an \nassert wrapper.</p>\n<p>Note that rows can be empty so an additional assert(rows[1]) might be \nneeded to check you have data returned.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tasks.lua",
   "line": 760,
   "name": "lua.wetgenes.tasks.sqlite",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks.lua"
  },
  {
   "body": "<p>A basic function to handle sqlite memos.</p>\n<p>As we are opening an sqlite database here it wont help much to have \nmore than one thread per database as they will just fight over file \naccess.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tasks.lua",
   "line": 1109,
   "name": "lua.wetgenes.tasks.sqlite_code",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks.lua"
  },
  {
   "body": "<p>Handle global tasks, starting and stopping and preventing the starting \nof multiple copies of the same task.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tasks.lua",
   "line": 847,
   "name": "lua.wetgenes.tasks.thread_code",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks.lua"
  },
  {
   "body": "<pre><code>tasks:update()\n</code></pre>\n<p>Resume all current coroutines and wait for them to yield.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tasks.lua",
   "line": 478,
   "name": "lua.wetgenes.tasks.update",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks.lua"
  },
  {
   "body": "<pre><code>local msgp=require(&quot;wetgenes.tasks_msgp&quot;)\n</code></pre>\n<p>A stream of lowlevel udp packets with automatic resend ( data will get\nthere eventual ) but hopefully without clogging up an ongoing pulse of\nsmaller packets that contain EG controller state.</p>\n<p>We use lua sockets and lanes with some help from wetgenes.tasks to\nmanage the lanes.\n<br/>\n<br/></p>\n<p>Simple UDP data packets with auto resend, little endian with this 6 byte header.</p>\n<pre><code>u16\t\tidx\t\t\t//\tincrementing and wrapping idx of this packet\nu16\t\tack\t\t\t//\twe acknowledge all the packets before this idx so please send this one next (or again maybe)\nu8\t\tbit\t\t\t//\twhich bit this is, all bits should be joined before parsing\nu8\t\tbits\t\t//\thow many bits in total ( all bits will be in adjacent idxs )\nu8\t\tdata[*]\t\t//\tThe payload, if multiple bits then all payloads should be concatenated\n</code></pre>\n<p>A maximum packet size of 63k seems to give good throughput, letting the\nlower level code split and recombine packets is probably going to be\nmore efficient than us. Note that we care about best case speed, when\nshit lags and packets drop we care less about performance and more\nabout maintaining a connection with correct state. IE its important\nthat we recover not that we pretend there is no problem. At 255 bits *\n63k bit size we can seen a data of about 15.6m.</p>\n<p>Technically 63k UDP packets might just get dropped as too big but I\nsuspect modern hardware is not really going to cause problems.</p>\n<p>bit/bits only goes up to 255. the 0 value in either of these is\nreserved as a flag for possible slightly strange packets in the future\neg maybe we need a ping? and should be ignored as a bad packet if you\ndo not understand them.</p>\n<p>An ack of 0x1234 also implies that 0x9234 to 0x1233 are in the past and\n0x1234 to 0x9233 are in the future.</p>\n<p>Also if we have nothing new to say after 100ms but have received new\npackets then we can send a packet with empty data (0 length) as an ack\nonly packet.</p>\n<p>When connecting to a port for the first time, the idx value must start\nat a special number, that number is configurable and should be\ndifferent for each app. An extra bit of sanity during introductions to\nindicate that the data stream will be understood by both parties.</p>\n<p>Special packets that do not add to the stream of user data but instead\nare used internally by this protocol.</p>\n<pre><code>id\t\tbits\tbit\nPING\t0x00\t0x02\nPONG\t0x00\t0x03\nHAND\t0x00\t0x04\nSHAKE\t0x00\t0x05\nRESEND\t0x00\t0x08\nPULSE\t0x00\t0x10\n</code></pre>\n<p>A PING packet will be accepted and acknowledged after handshaking.\nSending a PING packet will cause a PONG response with the same data.</p>\n<p>A PONG packet will be accepted and acknowledged after handshaking, its\ndata should be the same as the PING it is responding too.</p>\n<p>A HAND packet begins handshaking, the payload data is a string array.\nConsisting of a series of null terminated utf8 strings.</p>\n<p>A SHAKE packet ends handshaking The payload data is a string array.\nConsisting of a series of null terminated utf8 strings.</p>\n<p>Both the HAND and the SHAKE packets contain the same payload data which\nconsists of the following utf8 strings, each terminated by a 0 byte.</p>\n<pre><code>host name\nhost ip4\nhost ip6\nhost port\nclient addr\n</code></pre>\n<p>When received, each of the strings should to be clamped to 255 bytes\nand the values validated or replaced with empty strings before use.</p>\n<p>host name is maybe best considered a random string, it could be anything.</p>\n<p>host ip4 will be the hosts best guess at their ip4, it is the ip4 they\nare listening on.</p>\n<p>host ip6 will be the hosts best guess at their ip6, it is the ip6 they\nare listening on.</p>\n<p>host port will be the local port the host is listening on, ip4 and ip6,\nbut as they may be port forwarding we might connect on a different\nport.</p>\n<p>client addr is the client ip and port the sender sent this packet too.\nIf ipv4 it will be a string of the format &quot;1.2.3.4:5&quot; and if 1pv6 then\n&quot;[1::2]:3&quot; So the ip possibly wrapped in square brackets (ipv6) and\nthen a colon followed by the port in url style format.</p>\n<p>A RESEND packet consists of a payload of little endian 16bit idxs to\npackets we would like to be resent to fill in missing data.</p>\n<p>A PULSE packet contains user data but does not get resent or\nacknowledged, its IDX must be set to 0 and this IDX should be ignored\nwhen received as this is out of stream data. Pulse packets are small\nregular packets of user data, eg current client input state. Data sent\nis included as part of the normal received data stream but there is no\nguarantee that it will be delivered or when it will be delivered\nrelative to other data. The data must be small enough to fit in a\nsingle packet. Think of this as something of a raw UDP packet in terms\nof how it works.</p>\n",
   "count": 9,
   "file": "../lua/wetgenes/tasks_msgp.lua",
   "line": 8,
   "name": "lua.wetgenes.tasks_msgp",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks_msgp.lua"
  },
  {
   "body": "<p>parse an ip string and port number from an addr/addr+port/addr_list</p>\n<p>returns addr,port that we can then use with luasocket</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tasks_msgp.lua",
   "line": 404,
   "name": "lua.wetgenes.tasks_msgp.addr_to_ip_port",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks_msgp.lua"
  },
  {
   "body": "<p>parse an ip address + maybe port encoded as a string into a list of\nnumbers, the length of the list represents the type so</p>\n<pre><code>#4 {1,2,3,4} -- ip4\n#5 {1,2,3,4,5} -- ip4:port\n#8 {1,2,3,4,5,6,7,8} -- ip6\n#9 {1,2,3,4,5,6,7,8,9} -- [ip6]:port\n</code></pre>\n<p>Optionally include a numeric port to add/replace in the list after\nparsing.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tasks_msgp.lua",
   "line": 260,
   "name": "lua.wetgenes.tasks_msgp.addr_to_list",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks_msgp.lua"
  },
  {
   "body": "<p>Clean a hostname so it becomes upercase letters and numbers with\npossible underscores where any other chars would be, eg whitespace.</p>\n<p>we also try not to start or end with an _</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tasks_msgp.lua",
   "line": 177,
   "name": "lua.wetgenes.tasks_msgp.clean_name",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks_msgp.lua"
  },
  {
   "body": "<p>Parse an array of 8 numbers into an ip6 address with :: in the first\nlongest run of zeros if needed and lowercase hex letters.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tasks_msgp.lua",
   "line": 195,
   "name": "lua.wetgenes.tasks_msgp.ip6_to_addr",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks_msgp.lua"
  },
  {
   "body": "<p>Use ( google by default ) public dns servers to check if we can connect\nto the internet and if we have ipv4 and/or ipv6 available.</p>\n<p>To use alternative dns pass in an ipv4 and ipv6 address as the first\ntwo args, eg to use cloudflare.</p>\n<pre><code>ipsniff(&quot;1.1.1.1&quot;,&quot;2606:4700:4700::1111&quot;)\n</code></pre>\n<p>returns the ipv4,ipv6 address of this host when connecting to that dns\nor nil if no connection possible.</p>\n<p>This result can be used as a bool to indicate working ipv6 or ipv4\ninternet and is also a best guess as to our ip when connecting to other\ndevices.</p>\n<p>Note that this will only work if we are connected to the internet can\nreach the dns servers etc etc, standard networks can be crazy\ndisclaimer applies.</p>\n<p>So great if this works but still need a fallback plan, eg assuming\nlocal ipv4 network is available.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tasks_msgp.lua",
   "line": 429,
   "name": "lua.wetgenes.tasks_msgp.ipsniff",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks_msgp.lua"
  },
  {
   "body": "<p>Parse an array of numbers into an ip address and maybe port.</p>\n<pre><code>#4 {1,2,3,4} -- ip4\n#5 {1,2,3,4,5} -- ip4:port\n#8 {1,2,3,4,5,6,7,8} -- ip6\n#9 {1,2,3,4,5,6,7,8,9} -- [ip6]:port\n</code></pre>\n",
   "count": 1,
   "file": "../lua/wetgenes/tasks_msgp.lua",
   "line": 235,
   "name": "lua.wetgenes.tasks_msgp.list_to_addr",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks_msgp.lua"
  },
  {
   "body": "<p>lanes task function for handling msgp communication.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tasks_msgp.lua",
   "line": 538,
   "name": "lua.wetgenes.tasks_msgp.msgp_code",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks_msgp.lua"
  },
  {
   "body": "<p>If given aa udp data packet string, convert it to a table.</p>\n<p>If given table, convert it to a udp data packet string. little endian</p>\n<pre><code>u16\t\tidx\t\t\t//\tincrementing and wrapping idx of this packet\nu16\t\tack\t\t\t//\twe acknowledge all the packets before this idx so please send this one next (or again maybe)\nu8\t\tbit\t\t\t//\twhich bit this is, all bits should be joined before parsing\nu8\t\tbits\t\t//\thow many bits in total ( all bits will be in adjacent idxs )\nu8\t\tdata[*]\t\t//\tThe payload, if multiple bits then all payloads should be concatenated\n</code></pre>\n",
   "count": 1,
   "file": "../lua/wetgenes/tasks_msgp.lua",
   "line": 488,
   "name": "lua.wetgenes.tasks_msgp.pack",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tasks_msgp.lua"
  },
  {
   "body": "<p>(C) 2020 Kriss Blank under the <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n<pre><code>local wtsv = require(&quot;wetgenes.tsv&quot;)\n</code></pre>\n<p>Load and save tsv files <a href=\"https://pypi.org/project/linear-tsv/1.0.0/\">https://pypi.org/project/linear-tsv/1.0.0/</a></p>\n<p>The following need to be escaped with a \\ when used in each column.</p>\n<pre><code>\\n for newline,\n\\t for tab,\n\\r for carriage return,\n\\\\ for backslash.\n</code></pre>\n<p>When loading we read the entire file and keep all the text in one string \nwith function lookups to cut out sections of that string as needed.</p>\n",
   "count": 5,
   "file": "../lua/wetgenes/tsv.lua",
   "line": 1,
   "name": "lua.wetgenes.tsv",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tsv.lua"
  },
  {
   "body": "<p>get or set a line of data as a table of strings</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tsv.lua",
   "line": 183,
   "name": "lua.wetgenes.tsv.close",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tsv.lua"
  },
  {
   "body": "<pre><code>wtsv.create()\nwtsv.create({filename=&quot;filename.tsv&quot;})\nwtsv.create({basedata=&quot;1\\t2\\t3\\n4\\t5\\t6\\n&quot;})\n</code></pre>\n<p>Create a tsv, possibly from a datachunk or file</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tsv.lua",
   "line": 51,
   "name": "lua.wetgenes.tsv.create",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tsv.lua"
  },
  {
   "body": "<p>save recent changes to disk, appended to loaded file</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tsv.lua",
   "line": 163,
   "name": "lua.wetgenes.tsv.flush",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tsv.lua"
  },
  {
   "body": "<p>save a tsv file to tsv.filename</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/tsv.lua",
   "line": 140,
   "name": "lua.wetgenes.tsv.load",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/tsv.lua"
  },
  {
   "body": "",
   "count": 23,
   "name": "lua.wetgenes.txt"
  },
  {
   "body": "<p>(C) 2020 Kriss Blank and released under the MIT license, see \n<a href=\"http://opensource.org/licenses/MIT\">http://opensource.org/licenses/MIT</a> for full license text.</p>\n<pre><code>local wtxtdiff=require(&quot;wetgenes.txt.diff&quot;)\n</code></pre>\n",
   "count": 5,
   "file": "../lua/wetgenes/txt/diff.lua",
   "line": 1,
   "name": "lua.wetgenes.txt.diff",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/txt/diff.lua"
  },
  {
   "body": "<p>Given two tables of strings, return the length , starta , startb of the longest \ncommon subsequence in table indexes or nil if not similar.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/txt/diff.lua",
   "line": 57,
   "name": "lua.wetgenes.txt.diff.find",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/txt/diff.lua"
  },
  {
   "body": "<p>Given two tables of strings, return two tables of strings of \nthe same length where as many strings as possible match.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/txt/diff.lua",
   "line": 152,
   "name": "lua.wetgenes.txt.diff.match",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/txt/diff.lua"
  },
  {
   "body": "<p>Use the delimiter to split a string into a table of strings such that \neach string ends in the delimiter (except for possibly the final string) and a \ntable.concat on the result will recreate the input string exactly.</p>\n<pre><code>table = wtxtdiff.split(string,delimiter)\n</code></pre>\n<p>String is the string to split and delimiter is a lua pattern so any \nspecial chars should be escaped.</p>\n<p>for example</p>\n<pre><code>st = wtxtdiff.split(s) -- split on newline (default)\nst = wtxtdiff.split(s,&quot;\\n&quot;) -- split on newline (explicit)\n\nst - wtxtdiff.split(s,&quot;%s+&quot;) -- split on white space\n</code></pre>\n",
   "count": 1,
   "file": "../lua/wetgenes/txt/diff.lua",
   "line": 17,
   "name": "lua.wetgenes.txt.diff.split",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/txt/diff.lua"
  },
  {
   "body": "<p>Given two tables of strings, return the length at the start and at the \nend that are the same. This tends to be a good first step when \ncomparing two chunks of text.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/txt/diff.lua",
   "line": 115,
   "name": "lua.wetgenes.txt.diff.trim",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/txt/diff.lua"
  },
  {
   "body": "<p>(C) 2023 Kriss Blank under the <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n<p>Generic text modifying functions.\n  </p>\n",
   "count": 1,
   "file": "../lua/wetgenes/txt/edit.lua",
   "line": 1,
   "name": "lua.wetgenes.txt.edit",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/txt/edit.lua"
  },
  {
   "body": "<p>(C) 2020 Kriss Blank under the <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a>\n<br/>\n<br/>\n<br/></p>\n<p>Some useful lex files for other editors to be used as starting points \nand checking we did not miss anything.</p>\n<pre><code>https://github.com/vim/vim/tree/master/runtime/syntax\nhttps://github.com/sublimehq/Packages\n</code></pre>\n",
   "count": 1,
   "file": "../lua/wetgenes/txt/lex.lua",
   "line": 1,
   "name": "lua.wetgenes.txt.lex",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/txt/lex.lua"
  },
  {
   "body": "<p>(C) 2020 Kriss Blank under the <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n",
   "count": 1,
   "file": "../lua/wetgenes/txt/lex_js.lua",
   "line": 1,
   "name": "lua.wetgenes.txt.lex_js",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/txt/lex_js.lua"
  },
  {
   "body": "<p>(C) 2020 Kriss Blank under the <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n",
   "count": 1,
   "file": "../lua/wetgenes/txt/lex_txt.lua",
   "line": 1,
   "name": "lua.wetgenes.txt.lex_lua",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/txt/lex_txt.lua"
  },
  {
   "body": "<p>(C) 2020 Kriss Blank under the <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n<p>undo / redo code for a text editor with persistence to disk</p>\n<p>persistance to disk is in tsv format filename.txt.undo files where a \n.undo is added to the end of the file.</p>\n<p>see <a href=\"https://pypi.org/project/linear-tsv/1.0.0/\">https://pypi.org/project/linear-tsv/1.0.0/</a> for tsv format the first \nmost column is always a command and the other columns are data needed to \napply/reverse this command in theory a .undo file is a total history \nand as we should only be appending data (lines at a time even) then a \nfile can be recovered from it and it should have limited corruption \npossibilities when things go wrong.</p>\n<p>For security reasons this file may have undos removed as a separate \nstep. That is to say things that where done / pasted accidentality then \nremoved instantly will be purged from its history when performing a \nfile save.</p>\n<p>You can be save in the knowledge that any information you undo will not \nbe saved except as temporary crash safe buffers.</p>\n<p>The following need to be escaped with a \\ when used in each column.</p>\n<pre><code>\\n for newline,\n\\t for tab,\n\\r for carriage return,\n\\\\ for backslash.\n</code></pre>\n",
   "count": 1,
   "file": "../lua/wetgenes/txt/undo.lua",
   "line": 1,
   "name": "lua.wetgenes.txt.undo",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/txt/undo.lua"
  },
  {
   "body": "<p>(C) 2020 Kriss Blank under the <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n<pre><code>local wutf = require(&quot;wetgenes.txt.utf&quot;)\n</code></pre>\n<p>helper functions to help manage a string as a stream of utf8 tokens.</p>\n",
   "count": 9,
   "file": "../lua/wetgenes/txt/utf.lua",
   "line": 1,
   "name": "lua.wetgenes.txt.utf",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/txt/utf.lua"
  },
  {
   "body": "<pre><code>string = wutf.char(number)\n</code></pre>\n<p>convert a single unicode value to a utf8 string of 1-4 bytes</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/txt/utf.lua",
   "line": 107,
   "name": "lua.wetgenes.txt.utf.char",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/txt/utf.lua"
  },
  {
   "body": "<pre><code>string:gmatch(wutf.charpattern)\n</code></pre>\n<p>lua pattern to match each utf8 character in a string</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/txt/utf.lua",
   "line": 18,
   "name": "lua.wetgenes.txt.utf.charpattern",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/txt/utf.lua"
  },
  {
   "body": "<pre><code>string = wutf.chars(number,number,...)\nstring = wutf.chars({number,number,...})\n</code></pre>\n<p>convert one or more unicode values into a utf8 string</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/txt/utf.lua",
   "line": 133,
   "name": "lua.wetgenes.txt.utf.chars",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/txt/utf.lua"
  },
  {
   "body": "<pre><code>unicode = wutf.ncode(string,index)\n</code></pre>\n<p>get the utf8 value at the given code index.</p>\n<p>Note that this is slower than wutf.code as we must search the string to \nfind the byte index of the code. </p>\n",
   "count": 1,
   "file": "../lua/wetgenes/txt/utf.lua",
   "line": 161,
   "name": "lua.wetgenes.txt.utf.length",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/txt/utf.lua"
  },
  {
   "body": "<pre><code>unicode = wutf.map_latin0_to_unicode[latin0] or latin0\n</code></pre>\n",
   "count": 1,
   "file": "../lua/wetgenes/txt/utf.lua",
   "line": 40,
   "name": "lua.wetgenes.txt.utf.map_latin0_to_unicode",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/txt/utf.lua"
  },
  {
   "body": "<pre><code>latin0 = wutf.map_unicode_to_latin0[unicode] or unicode\n</code></pre>\n<p>I prefer the coverage of latin0 (ISO/IEC 8859-15) for font layout as it \nis just a few small differences for western european languages to get \nmost needed glyphs into the first 256 codes.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/txt/utf.lua",
   "line": 27,
   "name": "lua.wetgenes.txt.utf.map_unicode_to_latin0",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/txt/utf.lua"
  },
  {
   "body": "<pre><code>size = wutf.size(string,index)\n</code></pre>\n<p>get the size in bytes of the utf8 value at the given byte index.</p>\n<pre><code>size = wutf.size(string)\n</code></pre>\n<p>get the size in bytes of the utf8 value at the start of this string</p>\n<p>The return value will be 1-4 as 4 is the biggest utf8 code size.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/txt/utf.lua",
   "line": 84,
   "name": "lua.wetgenes.txt.utf.size",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/txt/utf.lua"
  },
  {
   "body": "<pre><code>unicode = wutf.code(string,index)\n</code></pre>\n<p>get the utf8 value at the given byte index.\n<br/>\n<br/></p>\n<pre><code>unicode = wutf.code(string)\n</code></pre>\n<p>get the utf8 value at the start of this string</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/txt/utf.lua",
   "line": 50,
   "name": "lua.wetgenes.txt.utf.string",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/txt/utf.lua"
  },
  {
   "body": "<p>(C) 2023 Kriss Blank and released under the MIT license, see \n<a href=\"http://opensource.org/licenses/MIT\">http://opensource.org/licenses/MIT</a> for full license text.</p>\n<pre><code>local wtxtwords=require(&quot;wetgenes.txt.words&quot;)\n</code></pre>\n<p>See <a href=\"https://github.com/xriss/engrish\">https://github.com/xriss/engrish</a> for source of words and possible \nalternative licenses.\n  </p>\n",
   "count": 3,
   "file": "../lua/wetgenes/txt/words.lua",
   "line": 1,
   "name": "lua.wetgenes.txt.words",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/txt/words.lua"
  },
  {
   "body": "<pre><code>yes = wtxtwords.check(word)\n</code></pre>\n<p>This is a fast check if the word exists.</p>\n<p>May call wtxtwords.load() to auto load data.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/txt/words.lua",
   "line": 93,
   "name": "lua.wetgenes.txt.words.load",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/txt/words.lua"
  },
  {
   "body": "<pre><code>list = wtxtwords.transform(word,count,addletters,subletters)\n</code></pre>\n<p>Returns a table of upto count correctly spelled words that you may have \nmiss spelt given the input word ordered by probability.</p>\n<p>If the input word is spelled correctly then it will probably be the \nfirst word in this list but that is not guaranteed.</p>\n<p>addletters is the maximum number of additive transforms, the higher \nthis number the slower this function and it defaults to 4.</p>\n<p>subletters is the maximum number of subtractive transforms and will not \nhave much impact on speed, this defaults to the same value as \naddletters.</p>\n<p>We run subletters subtractive transforms on our starting word and then \nwe scan all possible words and perform addletters number of subtractive \ntransforms on them and see if they match any of the transforms we built \nfrom our starting word. A match then means we can add up the number of \ntransforms on both sides and that is how many steps it would take to \nget from one word to another by adding and subtracting letters.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/txt/words.lua",
   "line": 161,
   "name": "lua.wetgenes.txt.words.transform",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/wetgenes/txt/words.lua"
  },
  {
   "body": "<p>The yarn building blocks, recipes to build items from, multiple rules \ncan be assigned to each item.</p>\n",
   "count": 1,
   "file": "../lua/fun/overstep.fun.lua",
   "line": 4390,
   "name": "prefabs",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/fun/overstep.fun.lua"
  },
  {
   "body": "<p>How the yarn engine should behave</p>\n",
   "count": 1,
   "file": "../lua/fun/overstep.fun.lua",
   "line": 4427,
   "name": "rules",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/fun/overstep.fun.lua"
  },
  {
   "body": "<p>Called once to setup things in the first update loop after hardware has \nbeen initialised.</p>\n",
   "count": 1,
   "file": "../lua/fun/invaders.fun.lua",
   "line": 1311,
   "name": "setup",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/fun/invaders.fun.lua"
  },
  {
   "body": "<pre><code>menu = setup_menu()\n</code></pre>\n<p>Create a displayable and controllable menu system that can be fed chat \ndata for user display.</p>\n<p>After setup, provide it with menu items to display using \nmenu.show(items) then call update and draw each frame.</p>\n",
   "count": 1,
   "file": "../lua/fun/old/platchat.fun.lua",
   "line": 1489,
   "name": "setup_menu",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/fun/old/platchat.fun.lua"
  },
  {
   "body": "<pre><code>update()\n</code></pre>\n<p>Update and draw loop, called every frame.</p>\n",
   "count": 1,
   "file": "../lua/fun/starfield.fun.lua",
   "line": 24,
   "name": "update",
   "url": "https://github.com/xriss/gamecake/blob/master/lua/fun/starfield.fun.lua"
  }
 ],
 "_output_chunkname": "html",
 "_output_filename": "docs/index.html",
 "_root": "../",
 "_site": "{_root}",
 "_sourcename": "docs/index.html",
 "body": "<div class=\"default\">\n\t<div class=\"contents\">\n\t\t<div class=\"topics\">\n\t\t\t<a class=\"par\" href=\"{_docs_json.dirname}\"><span>/</span></a>\n\t\t\t{_docs:menuwrap}\n\t\t</div>\n\t</div>\n\t<div class=\"main\">\n\t\t{_list:wrap}\n\t</div>\n</div>\n",
 "content": "<div class=\"content\">{nav}{body}</div>\n",
 "css": "\n/*\n\n\tVariables:\n\t\n\t------------------------------------------------------------------\n\tThe bright highlight used for the logo and links on hover\n\t------------------------------------------------------------------\n\t\n\tbase \t\t\t- Blue\t\t\t\t|\tLogo\n\tbase_alt \t\t- Light blue\t\t|\tLink hover\n\t\n\t------------------------------------------------------------------\n\tBasic colours for background and fonts\n\t------------------------------------------------------------------\n\t\n\tbase_back\t\t- Off white\t\t\t|\tMain body background\n\tbase_back_alt \t- Dark white\t\t|\tDocs column background\n\tbase_back_code\t- Dark blue grey\t|\tCode background\n\tbase_link\t\t- Medium grey\t\t|\tLink\n\tbase_font\t\t- Dark grey\t\t\t|\tBody font\n\tbase_code\t\t- White\t\t\t\t|\tCode font\n\tbase_src\t\t- Light grey\t\t|\tSource link background\n\t\n\t------------------------------------------------------------------\n\tExtra bits\n\t------------------------------------------------------------------\n\t\n\twhite \t\t\t- White\t\t\t\t|\tNavigation bar\n\thr\t\t \t\t- Blue\t\t\t\t|\tHorizontal line\n\n*/\n\n:root {\n  --base:#1400ff;\n  --base_alt:#3F2FFF;\n  --base_back:#f7f4fd;\n  --base_back_alt:#efefef;\n  --base_back_code:#282a36;\n  --base_link:#666;\n  --base_font:#484848;\n  --base_code:#fff;\n  --base_src:#d8d8d8;\n  --white:#fff;\n  --hr:#1400ff;\n}\n\n\n/*\n\n\tReset & base css\n\t\n\tbody\t|\t100vh - Avoid the IE 10-11 `min-height` bug.\n\n*/\n\n*{box-sizing:border-box; -webkit-box-sizing:border-box; -moz-box-sizing:border-box; -o-box-sizing:border-box; -ms-box-sizing:border-box;}\n\nhtml,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{border:0;font-size:100%;font:inherit;vertical-align:top;margin:0;padding:0}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:before,blockquote:after,q:before,q:after{content:none}table{border-collapse:collapse;border-spacing:0}\n\na,img\t\t{border:0; outline:none;}textarea:focus,input:focus{outline:0;}*:focus{outline:0;}\nbody, html\t{-webkit-font-smoothing:antialiased; -moz-osx-font-smoothing:grayscale; min-width:100%; min-height:100%; width:100%; height:100%; height:100vh; margin:0 auto;}\n\n\n/*\n\n\tMain styles for the entire site\n\t\n\ta\t\t|\tTransition css animations\n\n*/\n\nbody \t{background-color:var(--base_back); color:var(--base_font); display:flex; flex-direction:column; font-family:Arial, sans-serif; font-size:13px; line-height:18px; position:relative; padding-top:4em;}\n\na\t\t{-webkit-transition:all .2s ease-in-out; -moz-transition:all .2s ease-in-out; -o-transition:all .2s ease-in-out; -ms-transition:all .2s ease-in-out; transition:all .2s ease-in-out;}\n\na \t\t{color:var(--base_font); text-decoration:none;}\na:hover {color:var(--base); cursor:pointer;}\na img \t{border:none;}\n\nh1 \t\t{font-size:30px; margin-bottom:26px;}\nh1 a\t{font-weight:bold;}\nh2 \t\t{font-size:24px;}\nh3 \t\t{font-size:18px;}\nh4 \t\t{font-size:16px;}\nh5 \t\t{font-size:14px;}\nh6 \t\t{font-size:13px;}\n\nb\t\t{font-weight:bold;}\np \t\t{font-size:19px; line-height:31px; margin-bottom:16px;}\nstrong\t{font-weight:bold;}\n\n.line, hr\t\t\t{border-top:1px dashed var(--hr); margin-top:40px; margin-bottom:20px; position:relative;}\n\nblockquote \t\t\t{font-family:georgia,serif; font-style:italic; padding:13px 13px 21px 15px; margin-bottom:18px;}\nblockquote:before\t{color:#eee; content:\"\\201C\"; font-family:georgia,serif; font-size:40px; margin-left:-10px;}\nblockquote p \t\t{font-size:14px; font-style:italic; font-weight:300; line-height:18px; margin-bottom:0;}\n\ncode, pre \t\t\t{color:var(--base_code); font-family:monospace;}\ncode\t\t\t\t{background:var(--base_back_code);  border-radius:3px; -webkit-border-radius:3px; -moz-border-radius:3px; font-size:12px; padding:1px 3px;}\npre\t\t\t\t\t{background-color:var(--base_back_code); border-radius:6px; font-size:11px; line-height:16px; margin:32px 0 18px 0; padding:14px; white-space:pre-wrap; word-wrap:break-word; }\npre:first-of-type\t{margin-top:0;}\npre code \t\t\t{background:transparent; font-size:14px; line-height:26px; padding:0;}\nsup \t\t\t\t{font-size:0.83em; line-height:0; vertical-align:super;}\n\n\n/*\n\n\tWrappers:\n\t\n\t* Prevent Chrome, Opera, and Safari from letting these items shrink \n\tto smaller than their content's default minimum size.\n\t\n\tcontent\t\t\t|\tFlex = *\n\tdefault \t\t|\tClean default div, used only in Docs body\n\tnav_wrap \t\t|\tNavigation bar for entire site\n\tright \t\t\t|\tClass for text-align right\n\n*/\n\n.content\t{flex:1 0 auto;}\n.default\t{margin:0 auto;}\n.nav_wrap\t{background-color:var(--white); left:0; padding:1.5em 3em; position:fixed; top:0; width:100%; z-index:100;}\n.right\t\t{text-align:right;}\n\n\n/*\n\n\tNavigation bar:\n\t\n\tThe main navigation bar is made up of a wrapper div that holds the\n\tmain logo link and an unordered list of all the other pages.\n\t\n\tnav\t\t \t\t|\tMain div for logo and links\n\tnav ul\t \t\t|\tListing of links\n\tnav a \t\t\t|\tLinks with padding\n\n*/\n\n.nav\t\t{align-items:center; display:flex; display:-webkit-box; display:-moz-box; display:-ms-flexbox; display:-webkit-flex; -moz-box-align:center; -ms-box-align:center; -webkit-box-align:center;}\n.nav ul\t\t{display:flex; display:-webkit-box; display:-moz-box; display:-ms-flexbox; display:-webkit-flex; justify-content:flex-end; width:100%;}\n.nav a\t\t{color:var(--base_link); font-size:1.5em; margin:0 1rem;}\n.nav a:hover{color:var(--base);}\n\n\n/*\t\n\n\tLogo:\n\t\n\t'Patua One' is only used here - @import found in ^.html\n\t\n\tlogo\t \t\t|\tSplash page logo\n\tlogo p\t \t\t|\tSplash page about div\n\tnav a.logo \t\t|\tLogo in navigation bar\n\t\n*/\n\n.logo\t\t{color:var(--base); font-family:'Patua One',georgia,serif;}\n.logo p\t\t{color:var(--base_font); font-size:5em; line-height:0.8em;}\n.nav a.logo {color:var(--base); display:block; font-size:1.8em;}\n\n\n/*\n\n\tInstall:\n\t\n\tInstallation instructions on the splash page\n\t\n\tinstall \t\t|\tMain wrapper\n\tinstall div\t\t|\tWrapper for installation divs\n\tinstall code\t|\tBigger fonts for code div\n\t\n*/\n\n.install \t\t\t\t\t{display:flex; justify-content:space-evenly; margin-top:2em; width:100%;}\n.install div\t\t\t\t{padding-left:5%; width:60%;}\n.install div:nth-of-type(1) {padding:0; width:40%;}\n.install.full div\t\t\t{width:100%;}\n.install code \t\t\t\t{font-size:1.6em;}\n\n\n/*\n\n\tBlog:\n\t\n\tblog_info \t\t|\tBlog author & date info\n\tblog_wrap \t\t|\tWrapper for a blog post\n\tblog_wrap a\t\t|\tFix long urls with these rules\n\tpaging_wrap\t\t|\tWrapper for paging links\n\t\n*/\n\n\n.blog_info\t\t{font-size:70%; position:absolute; right:10px; top:2.5em; background-color:#e7e1f5; padding:0 20px;}\n\n.blog_wrap\t\t{color:var(--base_font); font-family:sans-serif; font-size:20px; line-height:33px; margin:auto; padding:4em 0; position:relative; width:740px;}\n.blog_wrap h2\t{font-family:'Patua One',georgia,serif; font-size:2.5em; line-height:1em; padding-bottom:1em;}\n.blog_wrap a\t{overflow-wrap:break-word; word-wrap:break-word; word-break:break-word; -ms-hyphens:auto; -moz-hyphens:auto; -webkit-hyphens:auto; hyphens:auto;}\n.blog_wrap a \t{color:var(--base); text-decoration:none;}\n.blog_wrap a:hover {color:var(--base_alt); cursor:pointer;}\n\n.paging_wrap\t{display:flex; display:-webkit-box; display:-moz-box; display:-ms-flexbox; display:-webkit-flex; justify-content:space-between; margin-top:5em;}\n.paging_wrap a\t{font-size:80%; display:block;}\n\n\n/*\n\n\tFooter:\n\t\n\tSticky footer with flexbox\n\t\n\thttps://css-tricks.com/couple-takes-sticky-footer/\n\t\n\t* Prevent Chrome, Opera, and Safari from letting these items shrink \n\tto smaller than their content's default minimum size.\n\t\n\tfooter\t \t\t|\tFlex = *\n\tfooter ul \t\t|\tFooter links\n\t\n*/\n\n.footer\t\t\t{flex-shrink:0; padding:2em 4em;}\n.footer ul\t\t{display:flex; display:-webkit-box; display:-moz-box; display:-ms-flexbox; display:-webkit-flex; justify-content:space-between; width:100%;}\n\n\n/*\n\n\tMedia queries\n\t\n\tmain\t\t\t|\tWrapper for documentation page\n\tcontents\t\t|\tWrapper for documentation table of contents\n\t\n*/\n\n@media only screen and (-webkit-min-device-pixel-ratio: 1.5),\nonly screen and (-o-min-device-pixel-ratio: 3/2),\nonly screen and (min--moz-device-pixel-ratio: 1.5),\nonly screen and (min-device-pixel-ratio: 1.5) {\n\n\tbody\t\t\t{padding-top:7em;}\n\t.nav_wrap\t\t{padding:3em;}\n\t.nav\t\t\t{font-size:1.5em;}\n\t.blog_info\t\t{font-size:1em;}\n\t.blog_wrap h2\t{font-size:3em;}\n\tp \t\t\t\t{font-size:1.5em; line-height:1.5em; margin-bottom:1.5em;}\n\t.footer\t\t\t{font-size:1.5em;}\n\t.paging_wrap\t{font-size:1.5em;}\n\t\n\t.main\t\t\t{max-width:initial;}\n\t.contents\t\t{top:5.5em;}\n\n}\n",
 "foot": "<div class=\"footer\">\n\t<ul>\n\t\t<li>Created with <a href=\"https://xriss.github.io/plated/\" class=\"logo\">plated^</a></li>\n\t\t<li><a href=\"#\">^.^</a></li>\n\t\t<li><a href=\"https://github.com/xriss/gamecake/blob/master/LICENSE\">2018 MIT License</a></li>\n\t</ul>\n</div>\n",
 "head": "<title>{title}</title>\n<meta name=\"theme-color\" content=\"#2a3133\">\n<link href=\"https://fonts.googleapis.com/css?family=Patua+One\" rel=\"stylesheet\">\n<style>\n{css}\n</style>",
 "html": "<html>\n\t<head>\n\t\t<title>{title}</title>\n\t\t<link href=\"https://fonts.googleapis.com/css?family=Patua+One\" rel=\"stylesheet\">\n\t\t<link rel='stylesheet' href='{_docs_json.dirname}/docs.css' />\n\t</head>\n\t<body>{nav}{body}</body>\n</html>\n",
 "menuwrap": "{_it:menuwrap_link}",
 "menuwrap_link": "{_it.count>1&&_it:menuwrap_link2||}\n{_it.count==1&&_it:menuwrap_link1||}",
 "menuwrap_link1": "<a class=\"sub\" href=\"{_docs_json.dirname}/{_it.name}\"><span>/{_it.name}</span></a>",
 "menuwrap_link2": "<a class=\"par\" href=\"{_docs_json.dirname}/{_it.name}\"><span>/{_it.name}</span></a>",
 "nav": "<div class=\"nav_wrap\">\n\t<div class=\"nav\">\n\t\t<a href=\"{_root}\" class=\"logo\">Gamecake</a>\n\t\t<ul>\n\t\t\t<li><a href=\"https://github.com/xriss/gamecake\">Github</a></li>\n\t\t\t<li><a href=\"{_root}blog\">Blog</a></li>\n\t\t\t<li><a href=\"{_root}docs\">Documentation</a></li>\n\t\t</ul>\n\t</div>\n</div>\n",
 "title": "Gamecake docs!",
 "wrap": "\n<div class=\"wrap\">\n<h1><a href=\"{_docs_json.dirname}/{_it.name}\">{_it.name}</a></h1>\n<div class=\"source\"><a href=\"{_it.url}#L{_it.line}\">{_it.url}</a></div>\n<div>{[[}{_it.body}{]]}</div>\n</div>\n"
}