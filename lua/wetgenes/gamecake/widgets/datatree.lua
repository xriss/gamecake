-- (C) 2025 Kriss@XIXs.com


--[[#lua.wetgenes.gamecake.widgets.datatree

	local datatree={}
	datatree=require("wetgenes.widgets.datatree").create(datatree)


Manage data in a tree like structure that can be accesed via a path, 
data may not be readily available and instead generated by waiting on 
newtword/filesystem requests.

This is of course designed to mirror a filesystem but can be used for 
other data.

]]

-- M=module
local M={ modname = (...) } ; package.loaded[M.modname] = M

M.datatree={}
M.datatree_metatable={__index=M.datatree}

M.create=function(datatree)
	if not datatree then datatree={} end

	setmetatable(datatree,M.datatree_metatable)
	
	return datatree:setup()
end


M.datatree.setup=function(datatree)

	if datatree.mounts then datatree.mounts={} end

	return datatree
end

-- mount data at a path of "" to be the root of all paths
M.datatree.mount=function(datatree,path,data)

	datatree.mounts[path]=data

end


M.datatree.fetch=function(datatree,path)
	local it
	
	local data
	local best
	for p,d in pairs(datatree.mounts) do -- find best mountpoint and adjust path
		local c=path:sub(1,#p) -- path must begin with mount point
		if c==p then
			if not best then best=p end
			if #p > #best then best=p end
		end
	end
	if best then
		data=datatree.mounts[best]
		path=path:sub(#p+1)
	end
	
	assert(data) -- must have a valid data at this point
	
	it=data:fetch(path) -- fetch the actual data for this path
	
	return it
end



