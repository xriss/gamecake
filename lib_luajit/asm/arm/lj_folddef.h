/* This is a generated file. DO NOT EDIT! */

static const FoldFunc fold_func[] = {
  fold_kfold_numarith,
  fold_kfold_ldexp,
  fold_kfold_fpmath,
  fold_kfold_numpow,
  fold_kfold_numcomp,
  fold_kfold_intarith,
  fold_kfold_intovarith,
  fold_kfold_bnot,
  fold_kfold_bswap,
  fold_kfold_intcomp,
  fold_kfold_intcomp0,
  fold_kfold_int64arith,
  fold_kfold_int64arith2,
  fold_kfold_int64shift,
  fold_kfold_bnot64,
  fold_kfold_bswap64,
  fold_kfold_int64comp,
  fold_kfold_int64comp0,
  fold_kfold_snew_kptr,
  fold_kfold_snew_empty,
  fold_kfold_strref,
  fold_kfold_strref_snew,
  fold_kfold_strcmp,
  fold_kfold_add_kgc,
  fold_kfold_add_kptr,
  fold_kfold_add_kright,
  fold_kfold_tobit,
  fold_kfold_conv_kint_num,
  fold_kfold_conv_kintu32_num,
  fold_kfold_conv_kint_ext,
  fold_kfold_conv_kint_i64,
  fold_kfold_conv_kint64_num_i64,
  fold_kfold_conv_kint64_num_u64,
  fold_kfold_conv_kint64_int_i64,
  fold_kfold_conv_knum_int_num,
  fold_kfold_conv_knum_u32_num,
  fold_kfold_conv_knum_i64_num,
  fold_kfold_conv_knum_u64_num,
  fold_kfold_tostr_knum,
  fold_kfold_tostr_kint,
  fold_kfold_strto,
  lj_opt_cse,
  fold_kfold_kref,
  fold_shortcut_round,
  fold_shortcut_left,
  fold_shortcut_dropleft,
  fold_shortcut_leftleft,
  fold_simplify_numadd_negx,
  fold_simplify_numadd_xneg,
  fold_simplify_numsub_k,
  fold_simplify_numsub_negk,
  fold_simplify_numsub_xneg,
  fold_simplify_nummuldiv_k,
  fold_simplify_nummuldiv_negk,
  fold_simplify_nummuldiv_negneg,
  fold_simplify_numpow_xk,
  fold_simplify_numpow_kx,
  fold_shortcut_conv_num_int,
  fold_simplify_conv_int_num,
  fold_simplify_conv_u32_num,
  fold_simplify_conv_i64_num,
  fold_simplify_conv_int_i64,
  fold_simplify_conv_flt_num,
  fold_simplify_tobit_conv,
  fold_simplify_floor_conv,
  fold_simplify_conv_sext,
  fold_simplify_conv_narrow,
  fold_cse_conv,
  fold_narrow_convert,
  fold_simplify_intadd_k,
  fold_simplify_intmul_k,
  fold_simplify_intsub_k,
  fold_simplify_intsub_kleft,
  fold_simplify_intadd_k64,
  fold_simplify_intsub_k64,
  fold_simplify_intmul_k32,
  fold_simplify_intmul_k64,
  fold_simplify_intmod_k,
  fold_simplify_intmod_kleft,
  fold_simplify_intsub,
  fold_simplify_intsubadd_leftcancel,
  fold_simplify_intsubsub_leftcancel,
  fold_simplify_intsubsub_rightcancel,
  fold_simplify_intsubadd_rightcancel,
  fold_simplify_intsubaddadd_cancel,
  fold_simplify_band_k,
  fold_simplify_bor_k,
  fold_simplify_bxor_k,
  fold_simplify_shift_ik,
  fold_simplify_shift_andk,
  fold_simplify_shift1_ki,
  fold_simplify_shift2_ki,
  fold_simplify_shiftk_andk,
  fold_simplify_andk_shiftk,
  fold_reassoc_intarith_k,
  fold_reassoc_intarith_k64,
  fold_reassoc_dup,
  fold_reassoc_bxor,
  fold_reassoc_shift,
  fold_reassoc_minmax_k,
  fold_reassoc_minmax_left,
  fold_reassoc_minmax_right,
  fold_abc_fwd,
  fold_abc_k,
  fold_abc_invar,
  fold_comm_swap,
  fold_comm_equal,
  fold_comm_comp,
  fold_comm_dup,
  fold_comm_bxor,
  fold_merge_eqne_snew_kgc,
  lj_opt_fwd_aload,
  fold_kfold_hload_kkptr,
  lj_opt_fwd_hload,
  lj_opt_fwd_uload,
  lj_opt_fwd_tab_len,
  fold_cse_uref,
  lj_opt_fwd_hrefk,
  fold_fwd_href_tnew,
  fold_fwd_href_tdup,
  fold_fload_tab_tnew_asize,
  fold_fload_tab_tnew_hmask,
  fold_fload_tab_tdup_asize,
  fold_fload_tab_tdup_hmask,
  fold_fload_tab_ah,
  fold_fload_str_len_kgc,
  fold_fload_str_len_snew,
  fold_fload_cdata_typeid_kgc,
  fold_fload_cdata_int64_kgc,
  fold_fload_cdata_typeid_cnew,
  fold_fload_cdata_ptr_int64_cnew,
  lj_opt_cse,
  lj_opt_fwd_fload,
  fold_fwd_sload,
  fold_xload_kptr,
  lj_opt_fwd_xload,
  fold_barrier_tab,
  fold_barrier_tnew_tdup,
  lj_opt_dse_ahstore,
  lj_opt_dse_ustore,
  lj_opt_dse_fstore,
  lj_opt_dse_xstore,
  lj_ir_emit
};

static const uint32_t fold_hash[916] = {
0x4951fc1c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x04126c1b,
0x6064cbff,
0x5b4c5bff,
0x8d97ffff,
0xffffffff,
0xffffffff,
0x09005816,
0x61448bff,
0x584bfc16,
0x00546c1b,
0xffffffff,
0x7b873c07,
0x6815ffff,
0xffffffff,
0xffffffff,
0x05425816,
0x5c468016,
0xffffffff,
0xffffffff,
0x42aaa275,
0xffffffff,
0xffffffff,
0xffffffff,
0x4a53fc1c,
0x23aa6e8e,
0xffffffff,
0x0a0bfc16,
0x147e5c16,
0x6466cbff,
0x5b4e5bff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x09025816,
0x3aab566e,
0x584dfc16,
0x00566c1b,
0xffffffff,
0x2c5ebc1b,
0x8e17ffff,
0xffffffff,
0x1daa5a72,
0x05445816,
0x5c488016,
0xffffffff,
0x2a11fc1a,
0x5e428416,
0xffffffff,
0x27ae5800,
0xffffffff,
0x4c55fc1c,
0xffffffff,
0xffffffff,
0xffffffff,
0x8287440f,
0x2e3c7800,
0xffffffff,
0x8e9bffff,
0x1951fc18,
0x8387fc0e,
0x5f54a81c,
0x09045816,
0x584ffc16,
0x5f44881c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x05465816,
0xffffffff,
0xffffffff,
0x2a13fc1a,
0x1daa5a70,
0x39ab55d3,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x48525bff,
0x6464cfff,
0x8e9dffff,
0x8287440d,
0xffffffff,
0x09065816,
0x4551fc16,
0x8387fc0c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x05485816,
0x5c4c8016,
0xffffffff,
0xffffffff,
0xffffffff,
0x41abfeb3,
0x42aaa675,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x2b68d001,
0xffffffff,
0xffffffff,
0xffffffff,
0x6066cfff,
0xffffffff,
0xffffffff,
0x3654b82e,
0x09085816,
0x4753fc16,
0xffffffff,
0x005c6c1b,
0x5253fc29,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x054a5816,
0x5c4e8016,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x8ea1ffff,
0xffffffff,
0xffffffff,
0x3656b82e,
0x090a5816,
0x4b55fc16,
0x1baa59d3,
0x005e6c1b,
0x89a53800,
0xffffffff,
0xffffffff,
0xffffffff,
0x6364c816,
0x054c5816,
0xffffffff,
0x5e54a816,
0xffffffff,
0xffffffff,
0x5e448816,
0xffffffff,
0xffffffff,
0x28b05c00,
0xffffffff,
0xffffffff,
0x6715fc16,
0xffffffff,
0xffffffff,
0x4e585bff,
0x2e3e7c00,
0xffffffff,
0xffffffff,
0xffffffff,
0x090c5816,
0xffffffff,
0xffffffff,
0x00606c1b,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x054e5816,
0x868867ff,
0x1399fc16,
0xffffffff,
0xffffffff,
0x7c87fc06,
0xffffffff,
0x5d408c16,
0x42aaaa75,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x6f81fc00,
0x17505c1c,
0x090e5816,
0x4d59fc16,
0x40695401,
0x00626c1b,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x05505816,
0xffffffff,
0xffffffff,
0x6565fc33,
0xffffffff,
0xffffffff,
0x6c65ffff,
0xffffffff,
0xffffffff,
0x7c87fc04,
0xffffffff,
0xffffffff,
0xffffffff,
0x1eaa5ab3,
0xffffffff,
0x88a7ffff,
0xffffffff,
0x7183fc00,
0x3dab5675,
0x2a105816,
0x375bfc16,
0xffffffff,
0x00646c1b,
0xffffffff,
0xffffffff,
0x89a53c00,
0xffffffff,
0xffffffff,
0x05525816,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x6c67ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x7285fc00,
0xffffffff,
0x2a125816,
0xffffffff,
0xffffffff,
0x00666c1b,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x80865c0e,
0x05545816,
0x6366cc16,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x62468c16,
0xffffffff,
0x5d409016,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x43abffff,
0x073c5800,
0x8387fc00,
0xffffffff,
0x09145816,
0x1850601c,
0xffffffff,
0xffffffff,
0xffffffff,
0x2f50bbff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x17505c16,
0x7f865c0c,
0xffffffff,
0xffffffff,
0x696bffff,
0xffffffff,
0xffffffff,
0x1eaa5ad4,
0x21aa7295,
0xffffffff,
0xffffffff,
0xffffffff,
0x20aa71d6,
0xffffffff,
0x083e5800,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x05585816,
0xffffffff,
0xffffffff,
0x1aac6c1b,
0xffffffff,
0x3cab56ce,
0x4f6dffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x3153fc1b,
0xffffffff,
0xffffffff,
0xffffffff,
0x1951fc19,
0x8387fc0f,
0xffffffff,
0xffffffff,
0x77753c1b,
0xffffffff,
0xffffffff,
0x696fffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x3eab55ae,
0xffffffff,
0xffffffff,
0xffffffff,
0x1daa5a71,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x1850641c,
0x3455fc1b,
0xffffffff,
0x29110c1a,
0xffffffff,
0xffffffff,
0x055c5816,
0xffffffff,
0x6364c81b,
0x1951fc17,
0x18506016,
0x8387fc0d,
0xffffffff,
0xffffffff,
0xffffffff,
0x62489016,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x1daa5a6f,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x3457fc1b,
0xffffffff,
0x29130c1a,
0xffffffff,
0xffffffff,
0x0b40701c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x7573ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x77753c17,
0xffffffff,
0x2a106bff,
0xffffffff,
0x8eb5ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x1000701c,
0x24aa6eae,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x5a4673ff,
0xffffffff,
0x0b42701c,
0xffffffff,
0x3bab568e,
0xffffffff,
0xffffffff,
0xffffffff,
0x7c75ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x2a126bff,
0xffffffff,
0x77753c15,
0x8eb7ffff,
0xffffffff,
0xffffffff,
0x1002701c,
0x456bfc16,
0xffffffff,
0xffffffff,
0xffffffff,
0x2e5cbbff,
0xffffffff,
0x5a4873ff,
0xffffffff,
0x0b44701c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x18506416,
0x8e77ffff,
0xffffffff,
0xffffffff,
0x7e873000,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x8eb9ffff,
0x7c87fc07,
0x26ae6c00,
0xffffffff,
0x1004701c,
0x456dfc16,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x5b4a73ff,
0x7d865c00,
0x05645816,
0xffffffff,
0xffffffff,
0xffffffff,
0x6366cc1b,
0xffffffff,
0x8879ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x624a9416,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x41abfed3,
0xffffffff,
0xffffffff,
0x1006701c,
0x466ffc16,
0x7c87fc05,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x5b4c73ff,
0xffffffff,
0x05665816,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x44aca01b,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x22aa6e6e,
0xffffffff,
0x1008701c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x5b4e73ff,
0xffffffff,
0xffffffff,
0xffffffff,
0x78873806,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x80865c0f,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x12986416,
0xffffffff,
0xffffffff,
0xffffffff,
0x100a701c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x066a5816,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x5452a028,
0xffffffff,
0xffffffff,
0x0d467016,
0xffffffff,
0x80865c0d,
0x6e113017,
0xffffffff,
0xffffffff,
0xffffffff,
0x100c701c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x485273ff,
0xffffffff,
0x066c5816,
0xffffffff,
0xffffffff,
0x70826400,
0x2a105c17,
0xffffffff,
0xffffffff,
0xffffffff,
0x42aaa276,
0xffffffff,
0xffffffff,
0xffffffff,
0x0d487016,
0x44aca41b,
0x624c9816,
0x6e133017,
0xffffffff,
0x8e9ffc00,
0xffffffff,
0x100e701c,
0x3051fc2e,
0xffffffff,
0x8187400c,
0xffffffff,
0x385a6fff,
0x1eaa5ad3,
0x6c41ffff,
0x44aaa2ae,
0x0b50701c,
0x066e5816,
0x1faa71d5,
0xffffffff,
0x2a125c17,
0x7a873c06,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x0d4a7016,
0xffffffff,
0xffffffff,
0xffffffff,
0x6b01ffff,
0xffffffff,
0xffffffff,
0x2a10701c,
0x3353fc2e,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x6c43ffff,
0xffffffff,
0xffffffff,
0x0b52701c,
0xffffffff,
0xffffffff,
0xffffffff,
0x04006c1b,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x0d4c7016,
0xffffffff,
0xffffffff,
0xffffffff,
0x6b03ffff,
0xffffffff,
0xffffffff,
0x2a12701c,
0x8287440e,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x6d45ffff,
0xffffffff,
0x5541fc1c,
0x0b54701c,
0xffffffff,
0xffffffff,
0xffffffff,
0x04026c1b,
0xffffffff,
0x604083ff,
0x8487ffff,
0xffffffff,
0xffffffff,
0x42aaa676,
0xffffffff,
0x0d4e7016,
0x3252b81b,
0xffffffff,
0x2b68d002,
0x6b05ffff,
0x74785fff,
0x88a5fc00,
0x5947fc20,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x8187440c,
0xffffffff,
0xffffffff,
0x5643fc1c,
0x0c56701c,
0x44aaa6ae,
0xffffffff,
0x5052a3ff,
0x04046c1b,
0xffffffff,
0x8789ffff,
0x16b37400,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x3554b81b,
0xffffffff,
0x624e9c16,
0x6b07ffff,
0x747a5fff,
0xffffffff,
0x5949fc20,
0x2b68d000,
0xffffffff,
0xffffffff,
0xffffffff,
0x44aaa26e,
0x3fad541b,
0x1caa59d4,
0x5745fc1c,
0x0c58701c,
0xffffffff,
0xffffffff,
0x5353fc28,
0x04066c1b,
0x5f50a01c,
0x858bffff,
0xffffffff,
0x5f40801c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x3556b81b,
0xffffffff,
0xffffffff,
0x6b09ffff,
0xffffffff,
0xffffffff,
0x594bfc20,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x157f33ff,
0x0c5a701c,
0xffffffff,
0xffffffff,
0xffffffff,
0x04086c1b,
0xffffffff,
0x838dffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x035a6c16,
0x5541fc16,
0x42aaaa76,
0xffffffff,
0xffffffff,
0xffffffff,
0x6b0bffff,
0xffffffff,
0xffffffff,
0x594dfc20,
0xffffffff,
0xffffffff,
0x6615fc28,
0xffffffff,
0x40695402,
0xffffffff,
0xffffffff,
0xffffffff,
0x0e3c7000,
0x73b5fc08,
0xffffffff,
0x76753bff,
0x040a6c1b,
0x5152a7ff,
0x8a8fffff,
0xffffffff,
0x604287ff,
0xffffffff,
0xffffffff,
0x5643fc16,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x6b0dffff,
0x1eaa5ab4,
0x21aa7275,
0x594ffc20,
0x8ea80000,
0xffffffff,
0x3dab5676,
0xffffffff,
0x02686fff,
0xffffffff,
0x44aaa66e,
0xffffffff,
0x0f3e7000,
0x40695400,
0xffffffff,
0x25aa6ece,
0x040c6c1b,
0x5a465bff,
0x8a91ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x5745fc16,
0xffffffff,
0x79873807,
0x3cab56ae,
0xffffffff,
0x6b0fffff,
0x5e50a016,
0x110bfc1c,
0xffffffff,
0x5e408016,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x6951ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x040e6c1b,
0x5a485bff,
0x8b93ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x5f42841c,
0x5847fc16,
0x6567fc32,
0x00506c1b,
0x2d5eb81b,
0xffffffff,
0x6a11ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x4f53ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x04106c1b,
0x5b4a5bff,
0x8c95ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x01626c16,
0x5849fc16,
0xffffffff,
0x00526c1b,
0xffffffff,
0xffffffff,
0x6a13ffff,
0xffffffff,
0xffffffff,
0x05405816,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x6955ffff,
0xffffffff,
0xffffffff
};

#define fold_hashkey(k)	(((((k)<<27)-(k))<<4)%915)

