/* This is a generated file. DO NOT EDIT! */

static const FoldFunc fold_func[] = {
  fold_kfold_numarith,
  fold_kfold_ldexp,
  fold_kfold_fpmath,
  fold_kfold_numpow,
  fold_kfold_numcomp,
  fold_kfold_intarith,
  fold_kfold_intovarith,
  fold_kfold_bnot,
  fold_kfold_bswap,
  fold_kfold_intcomp,
  fold_kfold_intcomp0,
  fold_kfold_int64arith,
  fold_kfold_int64arith2,
  fold_kfold_int64shift,
  fold_kfold_bnot64,
  fold_kfold_bswap64,
  fold_kfold_int64comp,
  fold_kfold_int64comp0,
  fold_kfold_snew_kptr,
  fold_kfold_snew_empty,
  fold_kfold_strref,
  fold_kfold_strref_snew,
  fold_kfold_strcmp,
  fold_bufput_append,
  fold_bufput_kgc,
  fold_bufstr_kfold_cse,
  fold_bufput_kfold_op,
  fold_bufput_kfold_rep,
  fold_bufput_kfold_fmt,
  fold_kfold_add_kgc,
  fold_kfold_add_kptr,
  fold_kfold_add_kright,
  fold_kfold_tobit,
  fold_kfold_conv_kint_num,
  fold_kfold_conv_kintu32_num,
  fold_kfold_conv_kint_ext,
  fold_kfold_conv_kint_i64,
  fold_kfold_conv_kint64_num_i64,
  fold_kfold_conv_kint64_num_u64,
  fold_kfold_conv_kint64_int_i64,
  fold_kfold_conv_knum_int_num,
  fold_kfold_conv_knum_u32_num,
  fold_kfold_conv_knum_i64_num,
  fold_kfold_conv_knum_u64_num,
  fold_kfold_tostr_knum,
  fold_kfold_tostr_kint,
  fold_kfold_strto,
  lj_opt_cse,
  fold_kfold_kref,
  fold_shortcut_round,
  fold_shortcut_left,
  fold_shortcut_dropleft,
  fold_shortcut_leftleft,
  fold_simplify_numadd_negx,
  fold_simplify_numadd_xneg,
  fold_simplify_numsub_k,
  fold_simplify_numsub_negk,
  fold_simplify_numsub_xneg,
  fold_simplify_nummuldiv_k,
  fold_simplify_nummuldiv_negk,
  fold_simplify_nummuldiv_negneg,
  fold_simplify_numpow_xk,
  fold_simplify_numpow_kx,
  fold_shortcut_conv_num_int,
  fold_simplify_conv_int_num,
  fold_simplify_conv_i64_num,
  fold_simplify_conv_int_i64,
  fold_simplify_conv_flt_num,
  fold_simplify_tobit_conv,
  fold_simplify_floor_conv,
  fold_simplify_conv_sext,
  fold_simplify_conv_narrow,
  fold_cse_conv,
  fold_narrow_convert,
  fold_simplify_intadd_k,
  fold_simplify_intmul_k,
  fold_simplify_intsub_k,
  fold_simplify_intsub_kleft,
  fold_simplify_intadd_k64,
  fold_simplify_intsub_k64,
  fold_simplify_intmul_k32,
  fold_simplify_intmul_k64,
  fold_simplify_intmod_k,
  fold_simplify_intmod_kleft,
  fold_simplify_intsub,
  fold_simplify_intsubadd_leftcancel,
  fold_simplify_intsubsub_leftcancel,
  fold_simplify_intsubsub_rightcancel,
  fold_simplify_intsubadd_rightcancel,
  fold_simplify_intsubaddadd_cancel,
  fold_simplify_band_k,
  fold_simplify_bor_k,
  fold_simplify_bxor_k,
  fold_simplify_shift_ik,
  fold_simplify_shift_andk,
  fold_simplify_shift1_ki,
  fold_simplify_shift2_ki,
  fold_simplify_shiftk_andk,
  fold_simplify_andk_shiftk,
  fold_reassoc_intarith_k,
  fold_reassoc_intarith_k64,
  fold_reassoc_dup,
  fold_reassoc_bxor,
  fold_reassoc_shift,
  fold_reassoc_minmax_k,
  fold_reassoc_minmax_left,
  fold_reassoc_minmax_right,
  fold_abc_fwd,
  fold_abc_k,
  fold_abc_invar,
  fold_comm_swap,
  fold_comm_equal,
  fold_comm_comp,
  fold_comm_dup,
  fold_comm_bxor,
  fold_merge_eqne_snew_kgc,
  lj_opt_fwd_aload,
  fold_kfold_hload_kkptr,
  lj_opt_fwd_hload,
  lj_opt_fwd_uload,
  lj_opt_fwd_tab_len,
  fold_cse_uref,
  lj_opt_fwd_hrefk,
  fold_fwd_href_tnew,
  fold_fwd_href_tdup,
  fold_fload_tab_tnew_asize,
  fold_fload_tab_tnew_hmask,
  fold_fload_tab_tdup_asize,
  fold_fload_tab_tdup_hmask,
  fold_fload_tab_ah,
  fold_fload_str_len_kgc,
  fold_fload_str_len_snew,
  fold_fload_str_len_tostr,
  fold_fload_cdata_typeid_kgc,
  fold_fload_cdata_int64_kgc,
  fold_fload_cdata_typeid_cnew,
  fold_fload_cdata_ptr_int64_cnew,
  lj_opt_cse,
  lj_opt_fwd_fload,
  fold_fwd_sload,
  fold_xload_kptr,
  lj_opt_fwd_xload,
  fold_barrier_tab,
  fold_barrier_tnew_tdup,
  lj_opt_dse_ahstore,
  lj_opt_dse_ustore,
  lj_opt_dse_fstore,
  lj_opt_dse_xstore,
  lj_ir_emit
};

static const uint32_t fold_hash[1004] = {
0x6e55ffff,
0xffffffff,
0x7683fc00,
0xffffffff,
0xffffffff,
0xffffffff,
0x8987fc0e,
0xffffffff,
0x42b16276,
0xffffffff,
0x9193ffff,
0xffffffff,
0xffffffff,
0x100c701c,
0xffffffff,
0xffffffff,
0x47b0aa75,
0x67489016,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x09025816,
0x26b071d6,
0x5259fc16,
0x80873c07,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x05405816,
0xffffffff,
0x46b1fed3,
0x3a57fc1b,
0x40b1628e,
0x674e9c16,
0xffffffff,
0x8fab3c00,
0x005c6c1b,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x29b06e8e,
0x8a87ffff,
0xffffffff,
0x05665816,
0x1000701c,
0x1f51fc18,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x9417ffff,
0x23b05a72,
0xffffffff,
0x5d4dfc16,
0xffffffff,
0x8eadffff,
0x47b0a696,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x3e5a6fff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x00506c1b,
0xffffffff,
0xffffffff,
0xffffffff,
0x8887440d,
0xffffffff,
0xffffffff,
0x5e49fc20,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x49b0a6ae,
0xffffffff,
0xffffffff,
0x700bffff,
0xffffffff,
0xffffffff,
0x5a41fc16,
0x6966cbff,
0x94a1ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x5a41fc1c,
0xffffffff,
0xffffffff,
0xffffffff,
0x43b161ae,
0xffffffff,
0xffffffff,
0xffffffff,
0x0c58701c,
0x16b98000,
0xffffffff,
0xffffffff,
0xffffffff,
0x2f110c1a,
0x5f4873ff,
0xffffffff,
0x6e6fffff,
0x1cbb800d,
0x054e5816,
0xffffffff,
0xffffffff,
0xffffffff,
0x6354a816,
0xffffffff,
0x1abb8013,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x6454a81c,
0x24b05ab4,
0x04126c1b,
0x9295ffff,
0xffffffff,
0xffffffff,
0x100e701c,
0x42b16275,
0xffffffff,
0x0d4c7016,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x3d5bfc16,
0xffffffff,
0xffffffff,
0x6a65fc33,
0x25b071d5,
0xffffffff,
0xffffffff,
0x7f873c06,
0xffffffff,
0x05425816,
0x49b0a26e,
0x1399fc16,
0x02686fff,
0x345cbbff,
0xffffffff,
0x45696002,
0x604a5bff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x04066c1b,
0x8d89ffff,
0xffffffff,
0xffffffff,
0x1002701c,
0xffffffff,
0xffffffff,
0xffffffff,
0x30105816,
0xffffffff,
0x1f51fc17,
0xffffffff,
0xffffffff,
0xffffffff,
0x0b40701c,
0x5d4ffc16,
0xffffffff,
0x23b05a71,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x47b0a695,
0x7785fc00,
0xffffffff,
0x8187fc07,
0x343e7c00,
0x335eb81b,
0x3550bbff,
0xffffffff,
0xffffffff,
0xffffffff,
0x8987fc0d,
0xffffffff,
0x22b059d4,
0xffffffff,
0xffffffff,
0xffffffff,
0x5e4bfc20,
0x8eabfc00,
0x8787440c,
0xffffffff,
0xffffffff,
0xffffffff,
0x09045816,
0xffffffff,
0xffffffff,
0x94bbffff,
0x700dffff,
0xffffffff,
0xffffffff,
0x5b43fc16,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x7c753c15,
0x5b43fc1c,
0xffffffff,
0xffffffff,
0xffffffff,
0x005e6c1b,
0x3852b81b,
0x7c753c1b,
0xffffffff,
0x0c5a701c,
0x614c8016,
0xffffffff,
0xffffffff,
0xffffffff,
0x2f130c1a,
0xffffffff,
0xffffffff,
0xffffffff,
0x5552a3ff,
0x949ffc00,
0xffffffff,
0xffffffff,
0x3c54b82e,
0x1cbb800c,
0xffffffff,
0xffffffff,
0x53585bff,
0x6866cc16,
0x7001ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x2cb46fff,
0xffffffff,
0xffffffff,
0xffffffff,
0x24b05ab3,
0xffffffff,
0xffffffff,
0x0d4e7016,
0xffffffff,
0xffffffff,
0x00526c1b,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x63408016,
0xffffffff,
0xffffffff,
0x055c5816,
0xffffffff,
0xffffffff,
0xffffffff,
0x6440801c,
0x7165ffff,
0x3168d002,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x654287ff,
0x604c5bff,
0xffffffff,
0xffffffff,
0x45696001,
0x67468c16,
0x04086c1b,
0x73113017,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x30125816,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x0b42701c,
0x604a73ff,
0xffffffff,
0xffffffff,
0x05505816,
0xffffffff,
0x49b2a41b,
0xffffffff,
0xffffffff,
0xffffffff,
0x8987fc00,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x8187fc06,
0x9397ffff,
0x46b1feb3,
0x40b1626e,
0x3010701c,
0x86865c0f,
0xffffffff,
0x8987fc0c,
0xffffffff,
0x21b059d3,
0xffffffff,
0xffffffff,
0x28b06e6e,
0xffffffff,
0x09065816,
0xffffffff,
0xffffffff,
0x94bdffff,
0xffffffff,
0x79785fff,
0x01626c16,
0xffffffff,
0xffffffff,
0x073c5800,
0x05445816,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x47b0a676,
0xffffffff,
0x00606c1b,
0x3b54b81b,
0xffffffff,
0xffffffff,
0x1e506016,
0x614e8016,
0x8b8bffff,
0xffffffff,
0x066a5816,
0x1004701c,
0xffffffff,
0x1e50601c,
0xffffffff,
0x62409016,
0xffffffff,
0xffffffff,
0x27b07295,
0x3c56b82e,
0xffffffff,
0xffffffff,
0x4a51fc16,
0xffffffff,
0x48b1ffff,
0xffffffff,
0xffffffff,
0x674c9816,
0xffffffff,
0x4e51fc1c,
0x23b05a70,
0x17a74854,
0xffffffff,
0xffffffff,
0xffffffff,
0x7141ffff,
0xffffffff,
0xffffffff,
0x5753fc29,
0x94ae0000,
0x00546c1b,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x5e4dfc20,
0xffffffff,
0xffffffff,
0xffffffff,
0x3651fc2e,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x700fffff,
0xffffffff,
0x3168d001,
0x5c45fc16,
0xffffffff,
0x94a5ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x5c45fc1c,
0xffffffff,
0x6964cfff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x4a6bfc16,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x604c73ff,
0xffffffff,
0x7a73ffff,
0xffffffff,
0x05525816,
0x41b162ce,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x7003ffff,
0x1cbb800b,
0x2bb06ece,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x3012701c,
0xffffffff,
0xffffffff,
0x6866cc1b,
0xffffffff,
0x86865c0e,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x0b50701c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x7167ffff,
0x083e5800,
0x6a67fc32,
0x05465816,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x604e5bff,
0xffffffff,
0xffffffff,
0xffffffff,
0x47b0a675,
0xffffffff,
0x040a6c1b,
0x73133017,
0x898dffff,
0x45696000,
0x1006701c,
0xffffffff,
0x0e3c7000,
0x147e5c16,
0x09145816,
0x7e873807,
0xffffffff,
0xffffffff,
0x30105c17,
0xffffffff,
0x0b44701c,
0x4c53fc16,
0xffffffff,
0x75826400,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x4f53fc1c,
0x8fab3800,
0xffffffff,
0xffffffff,
0xffffffff,
0x23b05a6f,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x5853fc28,
0x8187fc05,
0xffffffff,
0x5e4ffc20,
0xffffffff,
0xffffffff,
0xffffffff,
0x3953fc2e,
0xffffffff,
0x09085816,
0x47b0a296,
0xffffffff,
0x94bfffff,
0x6f11ffff,
0x797a5fff,
0xffffffff,
0x5d47fc16,
0xffffffff,
0xffffffff,
0x343c7800,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x00626c1b,
0x3b56b81b,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x066c5816,
0xffffffff,
0x6c15fc16,
0x49b0a2ae,
0x8175ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x654083ff,
0x30106bff,
0xffffffff,
0x83873000,
0xffffffff,
0x7005ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x3011fc1a,
0x1cbb800a,
0xffffffff,
0xffffffff,
0x6b15fc28,
0x47b0aa96,
0x7143ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x00566c1b,
0xffffffff,
0xffffffff,
0xffffffff,
0x0b52701c,
0x1bbb8016,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x6864c816,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x18a7ffff,
0xffffffff,
0x3168d000,
0xffffffff,
0xffffffff,
0x040c6c1b,
0xffffffff,
0x6566cfff,
0xffffffff,
0xffffffff,
0xffffffff,
0x0f3e7000,
0x0d467016,
0xffffffff,
0x4a6dfc16,
0xffffffff,
0xffffffff,
0xffffffff,
0x7d873806,
0x604e73ff,
0x2eb65c00,
0xffffffff,
0xffffffff,
0x05545816,
0xffffffff,
0x2db45bff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x63448816,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x949bffff,
0xffffffff,
0x6444881c,
0xffffffff,
0xffffffff,
0x04006c1b,
0xffffffff,
0x157f33ff,
0xffffffff,
0x8187fc04,
0xffffffff,
0xffffffff,
0xffffffff,
0x090a5816,
0x86865c0d,
0xffffffff,
0x674a9416,
0x12986416,
0xffffffff,
0x47b0a295,
0xffffffff,
0xffffffff,
0x27b07275,
0x05485816,
0xffffffff,
0xffffffff,
0xffffffff,
0x6e51ffff,
0xffffffff,
0xffffffff,
0x8c8867ff,
0x00646c1b,
0x49b0a66e,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x8787400c,
0x908fffff,
0x066e5816,
0x1008701c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x30125c17,
0xffffffff,
0xffffffff,
0x5055fc16,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x035a6c16,
0xffffffff,
0x3013fc1a,
0x5155fc1c,
0x42b16296,
0xffffffff,
0xffffffff,
0x3753fc1b,
0x7245ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x47b0aa95,
0xffffffff,
0xffffffff,
0xffffffff,
0x325ebc1b,
0x61468016,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x0a0bfc16,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x110bfc1c,
0x6f13ffff,
0xffffffff,
0x5d49fc16,
0x41b162ae,
0x19a9ffff,
0xffffffff,
0xffffffff,
0x6864c81b,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x2ab06eae,
0x8887440f,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x4b6ffc16,
0x6350a016,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x9477ffff,
0x6450a01c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x30126bff,
0xffffffff,
0xffffffff,
0x5652a7ff,
0x7007ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x949dffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x82865c00,
0x1abb8009,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x1cbb800f,
0x0b54701c,
0xffffffff,
0xffffffff,
0x49b2a01b,
0xffffffff,
0x85865c0c,
0x1abb8015,
0xffffffff,
0x6e6bffff,
0xffffffff,
0x054a5816,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x4d525bff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x040e6c1b,
0x9091ffff,
0xffffffff,
0xffffffff,
0x100a701c,
0xffffffff,
0xffffffff,
0x0d487016,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x47b0a276,
0xffffffff,
0xffffffff,
0x24b05ad4,
0xffffffff,
0xffffffff,
0x1d505c16,
0x3a55fc1b,
0x42b16295,
0xffffffff,
0x5f465bff,
0xffffffff,
0xffffffff,
0x1d505c1c,
0xffffffff,
0x62408c16,
0x04026c1b,
0x1f51fc19,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x090c5816,
0xffffffff,
0xffffffff,
0x78bbfc1c,
0x6d15ffff,
0xffffffff,
0xffffffff,
0x5d4bfc16,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x7b753bff,
0xffffffff,
0x5453ffff,
0x8987fc0f,
0x7481fc00,
0xffffffff,
0x00666c1b,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x8887440e,
0xffffffff,
0x47b0aa76,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x8e79ffff,
0x5e47fc20,
0x1e506416,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x09005816,
0x1e50641c,
0xffffffff,
0x7c753c17,
0x7009ffff,
0xffffffff,
0xffffffff,
0x6564cbff,
0x5952a028,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x0c56701c,
0x61488016,
0x84876800,
0xffffffff,
0x05645816,
0x1cbb800e,
0xffffffff,
0xffffffff,
0x546dffff,
0xffffffff,
0x63428416,
0x1abb8014,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x6442841c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x04106c1b,
0xffffffff,
0xffffffff,
0x66448bff,
0xffffffff,
0xffffffff,
0xffffffff,
0x0d4a7016,
0xffffffff,
0xffffffff,
0x3fb161d3,
0xffffffff,
0xffffffff,
0xffffffff,
0x4d5273ff,
0xffffffff,
0xffffffff,
0xffffffff,
0x05585816,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x47b0a275,
0x44b3601b,
0xffffffff,
0x24b05ad3,
0xffffffff,
0x5f485bff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x20b26c1b,
0x04046c1b,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x090e5816,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x5f4673ff,
0xffffffff,
0xffffffff,
0xffffffff,
0x054c5816,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff
};

#define fold_hashkey(k)	(lj_rol(lj_rol((k),15)-(k),31)%1003)

