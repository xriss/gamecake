include('gtkspell.def')

-- Redefine skipLib to handle this special case
function skipLib(name, defLib)
	local _, _, newn = name:find('Gtk(.+)')
	return newn or name
end

function skipClass(name, class, lib)
	local _, _, newn = name:find('gtkspell_(.+)')
	return newn or skipFirst(name)
end

defOverride('gtkspell_new_attach', [[
	luaL_checktype(L, 1, LUA_TUSERDATA);
	Object* obj = lua_touserdata(L, 1);
	
	GError* err = NULL;
	GtkSpell* ptr = gtkspell_new_attach(obj->pointer, lua_tostring(L, 2), &err);
	
	if(err)
	{
		lua_pushboolean(L, FALSE);
		lua_pushinteger(L, err->code);
		lua_pushstring(L, err->message);
		g_error_free(err);
		return 3;
	}
	
	special_type_new(L, "gtkSpellMT", ptr);
	return 1;
]])

defOverride('gtkspell_get_from_text_view', [[
	luaL_checktype(L, 1, LUA_TUSERDATA);
	Object* obj = lua_touserdata(L, 1);
	
	GtkSpell* ptr = gtkspell_get_from_text_view(obj->pointer);
	if(ptr)
		special_type_new(L, "gtkSpellMT", ptr);
	else
		lua_pushnil(L);
		
	return 1;
]])

defOverride('gtkspell_detach', [[
	Object* obj = lua_touserdata(L, 1);
	
	if(obj->need_unref)
	{
		gtkspell_detach(obj->pointer);
		obj->need_unref = FALSE;
	}
	
	return 0;
]])
