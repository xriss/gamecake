defLib = 'PangoCairo'
defName = 'pangocairo'

defClass('PangoCairoFcFontMap',
	{
		parent = 'PangoFontMap',
		implements = {'PangoCairoFontMap'}
	}
)

defClass('PangoCairoFont',
	{
		abstract = true
	}
)

defClass('PangoCairoFontMap',
	{
		abstract = true
	}
)

defFunction('pango_cairo_fc_font_map_get_type',
	{
		class = 'PangoCairoFcFontMap',
		since = '9999.9999',
		ret = 'unsigned long none'
	}
)

defFunction('pango_cairo_font_get_scaled_font',
	{
		class = 'PangoCairoFont',
		since = '1.18',
		args = {'GObject* none'},
		ret = 'struct* full'
	}
)

defFunction('pango_cairo_font_map_create_context',
	{
		class = 'PangoCairoFontMap',
		since = '1.10',
		args = {'GObject* none'},
		ret = 'GObject* none',
		deprecated = '1.22'
	}
)

defFunction('pango_cairo_font_map_get_font_type',
	{
		class = 'PangoCairoFontMap',
		since = '1.18',
		args = {'GObject* none'},
		ret = 'cairo_font_type_t full'
	}
)

defFunction('pango_cairo_font_map_get_resolution',
	{
		class = 'PangoCairoFontMap',
		since = '1.10',
		args = {'GObject* none'},
		ret = 'double none'
	}
)

defFunction('pango_cairo_font_map_set_default',
	{
		class = 'PangoCairoFontMap',
		since = '1.22',
		args = {'GObject* none'}
	}
)

defFunction('pango_cairo_font_map_set_resolution',
	{
		class = 'PangoCairoFontMap',
		since = '1.10',
		args = {'GObject* none', 'double none'}
	}
)

defFunction('pango_cairo_context_get_font_options',
	{
		since = '1.10',
		args = {'GObject* none'},
		ret = 'struct* none'
	}
)

defFunction('pango_cairo_context_get_resolution',
	{
		since = '1.10',
		args = {'GObject* none'},
		ret = 'double none'
	}
)

defFunction('pango_cairo_context_get_shape_renderer',
	{
		since = '1.18',
		args = {'GObject* none', 'void** none'},
		ret = 'callback none'
	}
)

defFunction('pango_cairo_context_set_font_options',
	{
		since = '1.10',
		args = {'GObject* none', 'struct* none'}
	}
)

defFunction('pango_cairo_context_set_resolution',
	{
		since = '1.10',
		args = {'GObject* none', 'double none'}
	}
)

defFunction('pango_cairo_context_set_shape_renderer',
	{
		since = '1.18',
		args = {'GObject* none', 'callback none', 'void* none', 'callback none'}
	}
)

defFunction('pango_cairo_create_context',
	{
		since = '1.22',
		args = {'struct* none'},
		ret = 'GObject* none'
	}
)

defFunction('pango_cairo_create_layout',
	{
		since = '1.10',
		args = {'struct* none'},
		ret = 'GObject* none'
	}
)

defFunction('pango_cairo_error_underline_path',
	{
		since = '1.14',
		args = {'struct* none', 'double none', 'double none', 'double none', 'double none'}
	}
)

defFunction('pango_cairo_font_map_get_default',
	{
		since = '1.10',
		ret = 'GObject* none'
	}
)

defFunction('pango_cairo_font_map_new',
	{
		since = '1.10',
		ret = 'GObject* none'
	}
)

defFunction('pango_cairo_font_map_new_for_font_type',
	{
		since = '1.18',
		args = {'cairo_font_type_t none'},
		ret = 'GObject* none'
	}
)

defFunction('pango_cairo_glyph_string_path',
	{
		since = '1.10',
		args = {'struct* none', 'GObject* none', 'struct* none'}
	}
)

defFunction('pango_cairo_layout_line_path',
	{
		since = '1.10',
		args = {'struct* none', 'struct* none'}
	}
)

defFunction('pango_cairo_layout_path',
	{
		since = '1.10',
		args = {'struct* none', 'GObject* none'}
	}
)

defFunction('pango_cairo_show_error_underline',
	{
		since = '1.14',
		args = {'struct* none', 'double none', 'double none', 'double none', 'double none'}
	}
)

defFunction('pango_cairo_show_glyph_item',
	{
		since = '1.22',
		args = {'struct* none', 'char* none', 'struct* none'}
	}
)

defFunction('pango_cairo_show_glyph_string',
	{
		since = '1.10',
		args = {'struct* none', 'GObject* none', 'struct* none'}
	}
)

defFunction('pango_cairo_show_layout',
	{
		since = '1.10',
		args = {'struct* none', 'GObject* none'}
	}
)

defFunction('pango_cairo_show_layout_line',
	{
		since = '1.10',
		args = {'struct* none', 'struct* none'}
	}
)

defFunction('pango_cairo_update_context',
	{
		since = '1.10',
		args = {'struct* none', 'GObject* none'}
	}
)

defFunction('pango_cairo_update_layout',
	{
		since = '1.10',
		args = {'struct* none', 'GObject* none'}
	}
)

