-> About
	
	lgob is a simple compiler that reads definitions from definition
    files and generates C code to create library bindings to Lua.
	
	It targets GObject stuff, but can be modified to work on other
    libraries.
	
-> Usage

	lgob-gir-parser.lua -i myinput.gir -o mydef.def -l mylog1
	lgob-generator.lua  -i mydef.def   -o myiface.c -l mylog2 -v 2.8

-> Definition files

	The files used as input to the compiler. You can use convert .gir
    files to .def files using lgob-gir-parser.

	It's possible to merge definition files by doing a simple
    dofile('name.def').

-> Version

	The .def files can carry 'since' and 'deprecated' version
    informations, to allow the code generation target a specific
    version (passing -v 2.8, would generate code for functions available
    from 2.0 to 2.8, excluding the functions deprecated
    between 2.0 and 2.8.
	
	The gobject-instrospection .gir format doesn't gives version 
    information on classes and enums, and not all functions have version
    annotations. For that, it's possible to override some informations
    with the .ovr files.

-> License

	LGPL v3.
    
-> Install
    
    To compile or install the modules, use the build.lua / build_all.lua scripts,
    located at the root directory. You may need to adjust config.lua to
    change compiler and environment options, and build_all.lua to select the
    desired modules.
